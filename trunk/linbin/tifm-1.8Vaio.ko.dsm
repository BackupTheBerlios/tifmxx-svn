
tifm-1.8Vaio.ko:     file format elf32-i386

Disassembly of section .text:

00000000 <tifm_bottomhalf>:
       0:	83 ec 10             	sub    $0x10,%esp
       3:	89 74 24 0c          	mov    %esi,0xc(%esp)
       7:	8b 74 24 14          	mov    0x14(%esp),%esi
       b:	89 5c 24 08          	mov    %ebx,0x8(%esp)
       f:	85 f6                	test   %esi,%esi
      11:	75 0d                	jne    20 <tifm_bottomhalf+0x20>
      13:	8b 5c 24 08          	mov    0x8(%esp),%ebx
      17:	8b 74 24 0c          	mov    0xc(%esp),%esi
      1b:	83 c4 10             	add    $0x10,%esp
      1e:	c3                   	ret    
      1f:	90                   	nop    
      20:	b8 00 01 00 00       	mov    $0x100,%eax
      25:	e8 fc ff ff ff       	call   26 <tifm_bottomhalf+0x26>
			26: R_386_PC32	add_preempt_count
      2a:	b8 01 00 00 00       	mov    $0x1,%eax
      2f:	e8 fc ff ff ff       	call   30 <tifm_bottomhalf+0x30>
			30: R_386_PC32	add_preempt_count
      34:	89 34 24             	mov    %esi,(%esp)
      37:	e8 fc ff ff ff       	call   38 <tifm_bottomhalf+0x38>
			38: R_386_PC32	DPCFM
      3c:	a8 01                	test   $0x1,%al
      3e:	89 c3                	mov    %eax,%ebx
      40:	75 77                	jne    b9 <tifm_bottomhalf+0xb9>
      42:	f6 c3 02             	test   $0x2,%bl
      45:	75 5f                	jne    a6 <tifm_bottomhalf+0xa6>
      47:	f6 c3 04             	test   $0x4,%bl
      4a:	75 47                	jne    93 <tifm_bottomhalf+0x93>
      4c:	f6 c3 08             	test   $0x8,%bl
      4f:	75 2f                	jne    80 <tifm_bottomhalf+0x80>
      51:	b8 01 00 00 00       	mov    $0x1,%eax
      56:	e8 fc ff ff ff       	call   57 <tifm_bottomhalf+0x57>
			57: R_386_PC32	sub_preempt_count
      5b:	b8 00 e0 ff ff       	mov    $0xffffe000,%eax
      60:	21 e0                	and    %esp,%eax
      62:	8b 40 08             	mov    0x8(%eax),%eax
      65:	a8 08                	test   $0x8,%al
      67:	75 10                	jne    79 <tifm_bottomhalf+0x79>
      69:	8b 5c 24 08          	mov    0x8(%esp),%ebx
      6d:	8b 74 24 0c          	mov    0xc(%esp),%esi
      71:	83 c4 10             	add    $0x10,%esp
      74:	e9 fc ff ff ff       	jmp    75 <tifm_bottomhalf+0x75>
			75: R_386_PC32	local_bh_enable
      79:	e8 fc ff ff ff       	call   7a <tifm_bottomhalf+0x7a>
			7a: R_386_PC32	preempt_schedule
      7e:	eb e9                	jmp    69 <tifm_bottomhalf+0x69>
      80:	89 34 24             	mov    %esi,(%esp)
      83:	b8 03 00 00 00       	mov    $0x3,%eax
      88:	89 44 24 04          	mov    %eax,0x4(%esp)
      8c:	e8 fc ff ff ff       	call   8d <tifm_bottomhalf+0x8d>
			8d: R_386_PC32	OnCardInsertionOrRemoval
      91:	eb be                	jmp    51 <tifm_bottomhalf+0x51>
      93:	89 34 24             	mov    %esi,(%esp)
      96:	ba 02 00 00 00       	mov    $0x2,%edx
      9b:	89 54 24 04          	mov    %edx,0x4(%esp)
      9f:	e8 fc ff ff ff       	call   a0 <tifm_bottomhalf+0xa0>
			a0: R_386_PC32	OnCardInsertionOrRemoval
      a4:	eb a6                	jmp    4c <tifm_bottomhalf+0x4c>
      a6:	89 34 24             	mov    %esi,(%esp)
      a9:	b9 01 00 00 00       	mov    $0x1,%ecx
      ae:	89 4c 24 04          	mov    %ecx,0x4(%esp)
      b2:	e8 fc ff ff ff       	call   b3 <tifm_bottomhalf+0xb3>
			b3: R_386_PC32	OnCardInsertionOrRemoval
      b7:	eb 8e                	jmp    47 <tifm_bottomhalf+0x47>
      b9:	89 34 24             	mov    %esi,(%esp)
      bc:	31 c0                	xor    %eax,%eax
      be:	89 44 24 04          	mov    %eax,0x4(%esp)
      c2:	e8 fc ff ff ff       	call   c3 <tifm_bottomhalf+0xc3>
			c3: R_386_PC32	OnCardInsertionOrRemoval
      c7:	e9 76 ff ff ff       	jmp    42 <tifm_bottomhalf+0x42>
      cc:	8d 74 26 00          	lea    0x0(%esi),%esi

000000d0 <tifm_isr>:
      d0:	83 ec 0c             	sub    $0xc,%esp
      d3:	31 c0                	xor    %eax,%eax
      d5:	89 5c 24 04          	mov    %ebx,0x4(%esp)
      d9:	8b 5c 24 14          	mov    0x14(%esp),%ebx
      dd:	89 74 24 08          	mov    %esi,0x8(%esp)
      e1:	31 f6                	xor    %esi,%esi
      e3:	85 db                	test   %ebx,%ebx
      e5:	74 3f                	je     126 <tifm_isr+0x56>
      e7:	ff 0d 00 00 00 00    	decl   0x0
			e9: R_386_32	ModuleLoadCnt
      ed:	c7 04 24 e3 53 00 00 	movl   $0x53e3,(%esp)
      f4:	e8 fc ff ff ff       	call   f5 <tifm_isr+0x25>
			f5: R_386_PC32	__const_udelay
      f9:	8b 83 a0 00 00 00    	mov    0xa0(%ebx),%eax
      ff:	89 04 24             	mov    %eax,(%esp)
     102:	e8 fc ff ff ff       	call   103 <tifm_isr+0x33>
			103: R_386_PC32	InterruptFM
     107:	84 c0                	test   %al,%al
     109:	74 19                	je     124 <tifm_isr+0x54>
     10b:	8d 93 e8 01 00 00    	lea    0x1e8(%ebx),%edx
     111:	0f ba ab ec 01 00 00 	btsl   $0x0,0x1ec(%ebx)
     118:	00 
     119:	19 c0                	sbb    %eax,%eax
     11b:	85 c0                	test   %eax,%eax
     11d:	74 13                	je     132 <tifm_isr+0x62>
     11f:	be 01 00 00 00       	mov    $0x1,%esi
     124:	89 f0                	mov    %esi,%eax
     126:	8b 5c 24 04          	mov    0x4(%esp),%ebx
     12a:	8b 74 24 08          	mov    0x8(%esp),%esi
     12e:	83 c4 0c             	add    $0xc,%esp
     131:	c3                   	ret    
     132:	89 d0                	mov    %edx,%eax
     134:	e8 fc ff ff ff       	call   135 <tifm_isr+0x65>
			135: R_386_PC32	__tasklet_schedule
     139:	eb e4                	jmp    11f <tifm_isr+0x4f>
     13b:	90                   	nop    
     13c:	8d 74 26 00          	lea    0x0(%esi),%esi

00000140 <dump_pci_config_space>:
     140:	c3                   	ret    
     141:	eb 0d                	jmp    150 <tifm_dev_create>
     143:	90                   	nop    
     144:	90                   	nop    
     145:	90                   	nop    
     146:	90                   	nop    
     147:	90                   	nop    
     148:	90                   	nop    
     149:	90                   	nop    
     14a:	90                   	nop    
     14b:	90                   	nop    
     14c:	90                   	nop    
     14d:	90                   	nop    
     14e:	90                   	nop    
     14f:	90                   	nop    

00000150 <tifm_dev_create>:
     150:	55                   	push   %ebp
     151:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
     156:	57                   	push   %edi
     157:	56                   	push   %esi
     158:	31 f6                	xor    %esi,%esi
     15a:	53                   	push   %ebx
     15b:	83 ec 14             	sub    $0x14,%esp
     15e:	8b 6c 24 28          	mov    0x28(%esp),%ebp
     162:	66 c7 44 24 12 00 00 	movw   $0x0,0x12(%esp)
     169:	85 ed                	test   %ebp,%ebp
     16b:	0f 84 60 01 00 00    	je     2d1 <tifm_dev_create+0x181>
     171:	89 2c 24             	mov    %ebp,(%esp)
     174:	e8 fc ff ff ff       	call   175 <tifm_dev_create+0x25>
			175: R_386_PC32	pci_enable_device
     179:	85 c0                	test   %eax,%eax
     17b:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
     180:	0f 85 4b 01 00 00    	jne    2d1 <tifm_dev_create+0x181>
     186:	8d 44 24 12          	lea    0x12(%esp),%eax
     18a:	89 44 24 0c          	mov    %eax,0xc(%esp)
     18e:	b8 02 00 00 00       	mov    $0x2,%eax
     193:	89 44 24 08          	mov    %eax,0x8(%esp)
     197:	8b 45 20             	mov    0x20(%ebp),%eax
     19a:	89 44 24 04          	mov    %eax,0x4(%esp)
     19e:	8b 45 10             	mov    0x10(%ebp),%eax
     1a1:	89 04 24             	mov    %eax,(%esp)
     1a4:	e8 fc ff ff ff       	call   1a5 <tifm_dev_create+0x55>
			1a5: R_386_PC32	pci_bus_read_config_word
     1a9:	85 c0                	test   %eax,%eax
     1ab:	0f 84 40 01 00 00    	je     2f1 <tifm_dev_create+0x1a1>
     1b1:	89 2c 24             	mov    %ebp,(%esp)
     1b4:	e8 87 ff ff ff       	call   140 <dump_pci_config_space>
     1b9:	b8 20 00 00 00       	mov    $0x20,%eax
     1be:	89 44 24 04          	mov    %eax,0x4(%esp)
     1c2:	a1 34 00 00 00       	mov    0x34,%eax
			1c3: R_386_32	malloc_sizes
     1c7:	89 04 24             	mov    %eax,(%esp)
     1ca:	e8 fc ff ff ff       	call   1cb <tifm_dev_create+0x7b>
			1cb: R_386_PC32	kmem_cache_alloc
     1cf:	85 c0                	test   %eax,%eax
     1d1:	89 c3                	mov    %eax,%ebx
     1d3:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
     1d8:	0f 84 f3 00 00 00    	je     2d1 <tifm_dev_create+0x181>
     1de:	89 c7                	mov    %eax,%edi
     1e0:	b9 7f 00 00 00       	mov    $0x7f,%ecx
     1e5:	89 f0                	mov    %esi,%eax
     1e7:	f3 ab                	repz stos %eax,%es:(%edi)
     1e9:	8b 85 10 01 00 00    	mov    0x110(%ebp),%eax
     1ef:	8d 95 18 01 00 00    	lea    0x118(%ebp),%edx
     1f5:	89 43 30             	mov    %eax,0x30(%ebx)
     1f8:	90                   	nop    
     1f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
     200:	8b 02                	mov    (%edx),%eax
     202:	89 04 b3             	mov    %eax,(%ebx,%esi,4)
     205:	46                   	inc    %esi
     206:	83 c2 1c             	add    $0x1c,%edx
     209:	83 fe 05             	cmp    $0x5,%esi
     20c:	7e f2                	jle    200 <tifm_dev_create+0xb0>
     20e:	66 81 7c 24 12 8f ac 	cmpw   $0xac8f,0x12(%esp)
     215:	0f 84 c0 00 00 00    	je     2db <tifm_dev_create+0x18b>
     21b:	31 c9                	xor    %ecx,%ecx
     21d:	ba ff 1f 00 00       	mov    $0x1fff,%edx
     222:	8b 03                	mov    (%ebx),%eax
     224:	89 4c 24 08          	mov    %ecx,0x8(%esp)
     228:	89 54 24 04          	mov    %edx,0x4(%esp)
     22c:	89 04 24             	mov    %eax,(%esp)
     22f:	e8 fc ff ff ff       	call   230 <tifm_dev_create+0xe0>
			230: R_386_PC32	__ioremap
     234:	89 43 18             	mov    %eax,0x18(%ebx)
     237:	8b 43 18             	mov    0x18(%ebx),%eax
     23a:	89 43 34             	mov    %eax,0x34(%ebx)
     23d:	c6 43 39 74          	movb   $0x74,0x39(%ebx)
     241:	c6 43 3a 66          	movb   $0x66,0x3a(%ebx)
     245:	0f b6 44 24 2c       	movzbl 0x2c(%esp),%eax
     24a:	04 61                	add    $0x61,%al
     24c:	88 43 3b             	mov    %al,0x3b(%ebx)
     24f:	89 5c 24 08          	mov    %ebx,0x8(%esp)
     253:	b8 00 00 00 00       	mov    $0x0,%eax
			254: R_386_32	.text
     258:	be 03 00 00 00       	mov    $0x3,%esi
     25d:	89 44 24 04          	mov    %eax,0x4(%esp)
     261:	8d 83 e8 01 00 00    	lea    0x1e8(%ebx),%eax
     267:	89 04 24             	mov    %eax,(%esp)
     26a:	e8 fc ff ff ff       	call   26b <tifm_dev_create+0x11b>
			26b: R_386_PC32	tasklet_init
     26f:	89 da                	mov    %ebx,%edx
     271:	eb 0d                	jmp    280 <tifm_dev_create+0x130>
     273:	90                   	nop    
     274:	90                   	nop    
     275:	90                   	nop    
     276:	90                   	nop    
     277:	90                   	nop    
     278:	90                   	nop    
     279:	90                   	nop    
     27a:	90                   	nop    
     27b:	90                   	nop    
     27c:	90                   	nop    
     27d:	90                   	nop    
     27e:	90                   	nop    
     27f:	90                   	nop    
     280:	89 9a f4 00 00 00    	mov    %ebx,0xf4(%edx)
     286:	8d 82 e8 00 00 00    	lea    0xe8(%edx),%eax
     28c:	89 82 e8 00 00 00    	mov    %eax,0xe8(%edx)
     292:	89 82 ec 00 00 00    	mov    %eax,0xec(%edx)
     298:	31 c0                	xor    %eax,%eax
     29a:	89 82 e4 00 00 00    	mov    %eax,0xe4(%edx)
     2a0:	b8 00 00 00 00       	mov    $0x0,%eax
			2a1: R_386_32	do_flash_softinit
     2a5:	89 82 f0 00 00 00    	mov    %eax,0xf0(%edx)
     2ab:	31 c0                	xor    %eax,%eax
     2ad:	89 82 14 01 00 00    	mov    %eax,0x114(%edx)
     2b3:	b8 6e ad 87 4b       	mov    $0x4b87ad6e,%eax
     2b8:	89 82 08 01 00 00    	mov    %eax,0x108(%edx)
     2be:	83 c2 34             	add    $0x34,%edx
     2c1:	4e                   	dec    %esi
     2c2:	79 bc                	jns    280 <tifm_dev_create+0x130>
     2c4:	8b 44 24 2c          	mov    0x2c(%esp),%eax
     2c8:	31 d2                	xor    %edx,%edx
     2ca:	89 1c 85 20 00 00 00 	mov    %ebx,0x20(,%eax,4)
			2cd: R_386_32	.bss
     2d1:	83 c4 14             	add    $0x14,%esp
     2d4:	89 d0                	mov    %edx,%eax
     2d6:	5b                   	pop    %ebx
     2d7:	5e                   	pop    %esi
     2d8:	5f                   	pop    %edi
     2d9:	5d                   	pop    %ebp
     2da:	c3                   	ret    
     2db:	8b 03                	mov    (%ebx),%eax
     2dd:	31 ff                	xor    %edi,%edi
     2df:	be ff 0f 00 00       	mov    $0xfff,%esi
     2e4:	89 7c 24 08          	mov    %edi,0x8(%esp)
     2e8:	89 74 24 04          	mov    %esi,0x4(%esp)
     2ec:	e9 3b ff ff ff       	jmp    22c <tifm_dev_create+0xdc>
     2f1:	0f b7 44 24 12       	movzwl 0x12(%esp),%eax
     2f6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
			2f9: R_386_32	.rodata.str1.32
     2fd:	89 44 24 08          	mov    %eax,0x8(%esp)
     301:	8b 44 24 2c          	mov    0x2c(%esp),%eax
     305:	40                   	inc    %eax
     306:	89 44 24 04          	mov    %eax,0x4(%esp)
     30a:	e8 fc ff ff ff       	call   30b <tifm_dev_create+0x1bb>
			30b: R_386_PC32	printk
     30f:	e9 9d fe ff ff       	jmp    1b1 <tifm_dev_create+0x61>
     314:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
     31a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00000320 <tifm_dev_free>:
     320:	57                   	push   %edi
     321:	31 ff                	xor    %edi,%edi
     323:	56                   	push   %esi
     324:	53                   	push   %ebx
     325:	83 ec 08             	sub    $0x8,%esp
     328:	8b 5c 24 18          	mov    0x18(%esp),%ebx
     32c:	85 db                	test   %ebx,%ebx
     32e:	0f 84 a6 00 00 00    	je     3da <tifm_dev_free+0xba>
     334:	0f b6 43 38          	movzbl 0x38(%ebx),%eax
     338:	39 c7                	cmp    %eax,%edi
     33a:	72 29                	jb     365 <tifm_dev_free+0x45>
     33c:	89 1c 24             	mov    %ebx,(%esp)
     33f:	e8 fc ff ff ff       	call   340 <tifm_dev_free+0x20>
			340: R_386_PC32	RemoveDevice
     344:	89 5c 24 04          	mov    %ebx,0x4(%esp)
     348:	8b 43 30             	mov    0x30(%ebx),%eax
     34b:	89 04 24             	mov    %eax,(%esp)
     34e:	e8 fc ff ff ff       	call   34f <tifm_dev_free+0x2f>
			34f: R_386_PC32	free_irq
     353:	8b 43 18             	mov    0x18(%ebx),%eax
     356:	89 44 24 18          	mov    %eax,0x18(%esp)
     35a:	83 c4 08             	add    $0x8,%esp
     35d:	5b                   	pop    %ebx
     35e:	5e                   	pop    %esi
     35f:	5f                   	pop    %edi
     360:	e9 fc ff ff ff       	jmp    361 <tifm_dev_free+0x41>
			361: R_386_PC32	iounmap
     365:	89 1c 24             	mov    %ebx,(%esp)
     368:	89 f8                	mov    %edi,%eax
     36a:	0f b6 f0             	movzbl %al,%esi
     36d:	89 74 24 04          	mov    %esi,0x4(%esp)
     371:	e8 fc ff ff ff       	call   372 <tifm_dev_free+0x52>
			372: R_386_PC32	IsFMValid
     376:	84 c0                	test   %al,%al
     378:	75 2f                	jne    3a9 <tifm_dev_free+0x89>
     37a:	b8 0b 00 00 00       	mov    $0xb,%eax
     37f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
     384:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
     38a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
     390:	42                   	inc    %edx
     391:	d1 e8                	shr    %eax
     393:	75 fb                	jne    390 <tifm_dev_free+0x70>
     395:	8b 44 bb 40          	mov    0x40(%ebx,%edi,4),%eax
     399:	47                   	inc    %edi
     39a:	e8 fc ff ff ff       	call   39b <tifm_dev_free+0x7b>
			39b: R_386_PC32	free_pages
     39f:	0f b6 43 38          	movzbl 0x38(%ebx),%eax
     3a3:	39 c7                	cmp    %eax,%edi
     3a5:	72 be                	jb     365 <tifm_dev_free+0x45>
     3a7:	eb 93                	jmp    33c <tifm_dev_free+0x1c>
     3a9:	89 74 24 04          	mov    %esi,0x4(%esp)
     3ad:	89 1c 24             	mov    %ebx,(%esp)
     3b0:	e8 fc ff ff ff       	call   3b1 <tifm_dev_free+0x91>
			3b1: R_386_PC32	IsFMInitialized
     3b5:	84 c0                	test   %al,%al
     3b7:	74 c1                	je     37a <tifm_dev_free+0x5a>
     3b9:	89 74 24 04          	mov    %esi,0x4(%esp)
     3bd:	89 1c 24             	mov    %ebx,(%esp)
     3c0:	e8 fc ff ff ff       	call   3c1 <tifm_dev_free+0xa1>
			3c1: R_386_PC32	gendisk_cleanup
     3c5:	40                   	inc    %eax
     3c6:	75 b2                	jne    37a <tifm_dev_free+0x5a>
     3c8:	89 7c 24 04          	mov    %edi,0x4(%esp)
     3cc:	c7 04 24 40 00 00 00 	movl   $0x40,(%esp)
			3cf: R_386_32	.rodata.str1.32
     3d3:	e8 fc ff ff ff       	call   3d4 <tifm_dev_free+0xb4>
			3d4: R_386_PC32	printk
     3d8:	eb a0                	jmp    37a <tifm_dev_free+0x5a>
     3da:	83 c4 08             	add    $0x8,%esp
     3dd:	5b                   	pop    %ebx
     3de:	5e                   	pop    %esi
     3df:	5f                   	pop    %edi
     3e0:	c3                   	ret    
     3e1:	eb 0d                	jmp    3f0 <tifm_pci_detect>
     3e3:	90                   	nop    
     3e4:	90                   	nop    
     3e5:	90                   	nop    
     3e6:	90                   	nop    
     3e7:	90                   	nop    
     3e8:	90                   	nop    
     3e9:	90                   	nop    
     3ea:	90                   	nop    
     3eb:	90                   	nop    
     3ec:	90                   	nop    
     3ed:	90                   	nop    
     3ee:	90                   	nop    
     3ef:	90                   	nop    

000003f0 <tifm_pci_detect>:
     3f0:	55                   	push   %ebp
     3f1:	31 c0                	xor    %eax,%eax
     3f3:	31 ed                	xor    %ebp,%ebp
     3f5:	57                   	push   %edi
     3f6:	56                   	push   %esi
     3f7:	31 f6                	xor    %esi,%esi
     3f9:	53                   	push   %ebx
     3fa:	83 ec 18             	sub    $0x18,%esp
     3fd:	89 44 24 10          	mov    %eax,0x10(%esp)
     401:	31 ff                	xor    %edi,%edi
     403:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
     409:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     410:	89 74 24 08          	mov    %esi,0x8(%esp)
     414:	8b 04 bd 60 00 00 00 	mov    0x60(,%edi,4),%eax
			417: R_386_32	.data
     41b:	89 44 24 04          	mov    %eax,0x4(%esp)
     41f:	8b 04 bd 58 00 00 00 	mov    0x58(,%edi,4),%eax
			422: R_386_32	.data
     426:	89 04 24             	mov    %eax,(%esp)
     429:	e8 fc ff ff ff       	call   42a <tifm_pci_detect+0x3a>
			42a: R_386_PC32	pci_find_device
     42e:	85 c0                	test   %eax,%eax
     430:	89 c6                	mov    %eax,%esi
     432:	0f 84 fd 00 00 00    	je     535 <tifm_pci_detect+0x145>
     438:	83 fd 10             	cmp    $0x10,%ebp
     43b:	0f 84 f4 00 00 00    	je     535 <tifm_pci_detect+0x145>
     441:	8d 44 24 16          	lea    0x16(%esp),%eax
     445:	89 44 24 0c          	mov    %eax,0xc(%esp)
     449:	b8 04 00 00 00       	mov    $0x4,%eax
     44e:	89 44 24 08          	mov    %eax,0x8(%esp)
     452:	8b 46 20             	mov    0x20(%esi),%eax
     455:	89 44 24 04          	mov    %eax,0x4(%esp)
     459:	8b 46 10             	mov    0x10(%esi),%eax
     45c:	89 04 24             	mov    %eax,(%esp)
     45f:	e8 fc ff ff ff       	call   460 <tifm_pci_detect+0x70>
			460: R_386_PC32	pci_bus_read_config_word
     464:	85 c0                	test   %eax,%eax
     466:	89 c3                	mov    %eax,%ebx
     468:	0f 85 b1 00 00 00    	jne    51f <tifm_pci_detect+0x12f>
     46e:	0f b7 44 24 16       	movzwl 0x16(%esp),%eax
     473:	bb 04 00 00 00       	mov    $0x4,%ebx
     478:	89 5c 24 08          	mov    %ebx,0x8(%esp)
     47c:	0d 07 01 00 00       	or     $0x107,%eax
     481:	0f b7 c0             	movzwl %ax,%eax
     484:	89 44 24 0c          	mov    %eax,0xc(%esp)
     488:	8b 46 20             	mov    0x20(%esi),%eax
     48b:	89 44 24 04          	mov    %eax,0x4(%esp)
     48f:	8b 46 10             	mov    0x10(%esi),%eax
     492:	89 04 24             	mov    %eax,(%esp)
     495:	e8 fc ff ff ff       	call   496 <tifm_pci_detect+0xa6>
			496: R_386_PC32	pci_bus_write_config_word
     49a:	85 c0                	test   %eax,%eax
     49c:	89 c3                	mov    %eax,%ebx
     49e:	75 62                	jne    502 <tifm_pci_detect+0x112>
     4a0:	89 6c 24 04          	mov    %ebp,0x4(%esp)
     4a4:	45                   	inc    %ebp
     4a5:	89 34 24             	mov    %esi,(%esp)
     4a8:	e8 a3 fc ff ff       	call   150 <tifm_dev_create>
     4ad:	85 c0                	test   %eax,%eax
     4af:	b9 01 00 00 00       	mov    $0x1,%ecx
     4b4:	89 c3                	mov    %eax,%ebx
     4b6:	89 4c 24 10          	mov    %ecx,0x10(%esp)
     4ba:	0f 84 50 ff ff ff    	je     410 <tifm_pci_detect+0x20>
     4c0:	31 f6                	xor    %esi,%esi
     4c2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
     4c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     4d0:	8b 04 b5 20 00 00 00 	mov    0x20(,%esi,4),%eax
			4d3: R_386_32	.bss
     4d7:	85 c0                	test   %eax,%eax
     4d9:	75 1d                	jne    4f8 <tifm_pci_detect+0x108>
     4db:	46                   	inc    %esi
     4dc:	89 d8                	mov    %ebx,%eax
     4de:	83 fe 0f             	cmp    $0xf,%esi
     4e1:	7e ed                	jle    4d0 <tifm_pci_detect+0xe0>
     4e3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
     4e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     4f0:	83 c4 18             	add    $0x18,%esp
     4f3:	5b                   	pop    %ebx
     4f4:	5e                   	pop    %esi
     4f5:	5f                   	pop    %edi
     4f6:	5d                   	pop    %ebp
     4f7:	c3                   	ret    
     4f8:	89 04 24             	mov    %eax,(%esp)
     4fb:	e8 20 fe ff ff       	call   320 <tifm_dev_free>
     500:	eb d9                	jmp    4db <tifm_pci_detect+0xeb>
     502:	89 44 24 08          	mov    %eax,0x8(%esp)
     506:	b8 54 00 00 00       	mov    $0x54,%eax
			507: R_386_32	.rodata
     50b:	89 44 24 04          	mov    %eax,0x4(%esp)
     50f:	c7 04 24 80 00 00 00 	movl   $0x80,(%esp)
			512: R_386_32	.rodata.str1.32
     516:	e8 fc ff ff ff       	call   517 <tifm_pci_detect+0x127>
			517: R_386_PC32	printk
     51b:	89 d8                	mov    %ebx,%eax
     51d:	eb d1                	jmp    4f0 <tifm_pci_detect+0x100>
     51f:	89 44 24 08          	mov    %eax,0x8(%esp)
     523:	b8 54 00 00 00       	mov    $0x54,%eax
			524: R_386_32	.rodata
     528:	89 44 24 04          	mov    %eax,0x4(%esp)
     52c:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)
			52f: R_386_32	.rodata.str1.32
     533:	eb e1                	jmp    516 <tifm_pci_detect+0x126>
     535:	47                   	inc    %edi
     536:	83 ff 01             	cmp    $0x1,%edi
     539:	0f 8e d1 fe ff ff    	jle    410 <tifm_pci_detect+0x20>
     53f:	8b 54 24 10          	mov    0x10(%esp),%edx
     543:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
     548:	85 d2                	test   %edx,%edx
     54a:	74 a4                	je     4f0 <tifm_pci_detect+0x100>
     54c:	89 2d 18 00 00 00    	mov    %ebp,0x18
			54e: R_386_32	.bss
     552:	31 c0                	xor    %eax,%eax
     554:	eb 9a                	jmp    4f0 <tifm_pci_detect+0x100>
     556:	8d 76 00             	lea    0x0(%esi),%esi
     559:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00000560 <tifm_cntrl_init>:
     560:	56                   	push   %esi
     561:	53                   	push   %ebx
     562:	83 ec 18             	sub    $0x18,%esp
     565:	31 db                	xor    %ebx,%ebx
     567:	8b 74 24 24          	mov    0x24(%esp),%esi
     56b:	ba ea ff ff ff       	mov    $0xffffffea,%edx
     570:	85 f6                	test   %esi,%esi
     572:	0f 84 e3 00 00 00    	je     65b <tifm_cntrl_init+0xfb>
     578:	89 74 24 10          	mov    %esi,0x10(%esp)
     57c:	b8 00 00 00 00       	mov    $0x0,%eax
			57d: R_386_32	.rodata.str1.1
     581:	89 44 24 0c          	mov    %eax,0xc(%esp)
     585:	b8 00 00 00 24       	mov    $0x24000000,%eax
     58a:	89 44 24 08          	mov    %eax,0x8(%esp)
     58e:	b8 d0 00 00 00       	mov    $0xd0,%eax
			58f: R_386_32	.text
     593:	89 44 24 04          	mov    %eax,0x4(%esp)
     597:	8b 46 30             	mov    0x30(%esi),%eax
     59a:	89 04 24             	mov    %eax,(%esp)
     59d:	e8 fc ff ff ff       	call   59e <tifm_cntrl_init+0x3e>
			59e: R_386_PC32	request_irq
     5a2:	85 c0                	test   %eax,%eax
     5a4:	ba ea ff ff ff       	mov    $0xffffffea,%edx
     5a9:	0f 85 ac 00 00 00    	jne    65b <tifm_cntrl_init+0xfb>
     5af:	89 34 24             	mov    %esi,(%esp)
     5b2:	e8 fc ff ff ff       	call   5b3 <tifm_cntrl_init+0x53>
			5b3: R_386_PC32	GetSocketInfo
     5b7:	85 c0                	test   %eax,%eax
     5b9:	ba ea ff ff ff       	mov    $0xffffffea,%edx
     5be:	0f 85 97 00 00 00    	jne    65b <tifm_cntrl_init+0xfb>
     5c4:	89 34 24             	mov    %esi,(%esp)
     5c7:	e8 fc ff ff ff       	call   5c8 <tifm_cntrl_init+0x68>
			5c8: R_386_PC32	MapSocketRegisters
     5cc:	85 c0                	test   %eax,%eax
     5ce:	ba ea ff ff ff       	mov    $0xffffffea,%edx
     5d3:	0f 85 82 00 00 00    	jne    65b <tifm_cntrl_init+0xfb>
     5d9:	89 34 24             	mov    %esi,(%esp)
     5dc:	e8 fc ff ff ff       	call   5dd <tifm_cntrl_init+0x7d>
			5dd: R_386_PC32	SetupDevice
     5e1:	85 c0                	test   %eax,%eax
     5e3:	ba ea ff ff ff       	mov    $0xffffffea,%edx
     5e8:	75 71                	jne    65b <tifm_cntrl_init+0xfb>
     5ea:	0f b6 56 38          	movzbl 0x38(%esi),%edx
     5ee:	0f b6 c2             	movzbl %dl,%eax
     5f1:	39 c3                	cmp    %eax,%ebx
     5f3:	73 5b                	jae    650 <tifm_cntrl_init+0xf0>
     5f5:	8d 74 26 00          	lea    0x0(%esi),%esi
     5f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     600:	8b 4c 9e 40          	mov    0x40(%esi,%ebx,4),%ecx
     604:	85 c9                	test   %ecx,%ecx
     606:	75 40                	jne    648 <tifm_cntrl_init+0xe8>
     608:	b8 0b 00 00 00       	mov    $0xb,%eax
     60d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
     612:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
     619:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     620:	42                   	inc    %edx
     621:	d1 e8                	shr    %eax
     623:	75 fb                	jne    620 <tifm_cntrl_init+0xc0>
     625:	b8 d1 00 00 00       	mov    $0xd1,%eax
     62a:	e8 fc ff ff ff       	call   62b <tifm_cntrl_init+0xcb>
			62b: R_386_PC32	__get_free_pages
     62f:	89 44 9e 40          	mov    %eax,0x40(%esi,%ebx,4)
     633:	85 c0                	test   %eax,%eax
     635:	0f 84 e5 00 00 00    	je     720 <tifm_cntrl_init+0x1c0>
     63b:	0f b6 56 38          	movzbl 0x38(%esi),%edx
     63f:	05 00 00 00 40       	add    $0x40000000,%eax
     644:	89 44 9e 50          	mov    %eax,0x50(%esi,%ebx,4)
     648:	43                   	inc    %ebx
     649:	0f b6 c2             	movzbl %dl,%eax
     64c:	39 c3                	cmp    %eax,%ebx
     64e:	72 b0                	jb     600 <tifm_cntrl_init+0xa0>
     650:	83 3d 00 00 00 00 01 	cmpl   $0x1,0x0
			652: R_386_32	ModuleLoadCnt
     657:	74 0a                	je     663 <tifm_cntrl_init+0x103>
     659:	31 d2                	xor    %edx,%edx
     65b:	83 c4 18             	add    $0x18,%esp
     65e:	89 d0                	mov    %edx,%eax
     660:	5b                   	pop    %ebx
     661:	5e                   	pop    %esi
     662:	c3                   	ret    
     663:	ba 00 00 00 80       	mov    $0x80000000,%edx
     668:	89 54 24 04          	mov    %edx,0x4(%esp)
     66c:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
     672:	89 04 24             	mov    %eax,(%esp)
     675:	e8 fc ff ff ff       	call   676 <tifm_cntrl_init+0x116>
			676: R_386_PC32	INTERRUPT_ENABLE_CLEAR_FM
     67a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     67f:	89 44 24 04          	mov    %eax,0x4(%esp)
     683:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
     689:	89 04 24             	mov    %eax,(%esp)
     68c:	e8 fc ff ff ff       	call   68d <tifm_cntrl_init+0x12d>
			68d: R_386_PC32	INTERRUPT_CLEAR_FM
     691:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
     696:	89 44 24 04          	mov    %eax,0x4(%esp)
     69a:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
     6a0:	89 04 24             	mov    %eax,(%esp)
     6a3:	e8 fc ff ff ff       	call   6a4 <tifm_cntrl_init+0x144>
			6a4: R_386_PC32	INTERRUPT_ENABLE_CLEAR_FM
     6a8:	b8 00 00 00 80       	mov    $0x80000000,%eax
     6ad:	89 44 24 04          	mov    %eax,0x4(%esp)
     6b1:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
     6b7:	89 04 24             	mov    %eax,(%esp)
     6ba:	e8 fc ff ff ff       	call   6bb <tifm_cntrl_init+0x15b>
			6bb: R_386_PC32	INTERRUPT_ENABLE_SET_FM
     6bf:	c6 44 24 17 00       	movb   $0x0,0x17(%esp)
     6c4:	31 c0                	xor    %eax,%eax
     6c6:	3a 46 38             	cmp    0x38(%esi),%al
     6c9:	72 22                	jb     6ed <tifm_cntrl_init+0x18d>
     6cb:	b8 0e 00 00 80       	mov    $0x8000000e,%eax
     6d0:	89 44 24 04          	mov    %eax,0x4(%esp)
     6d4:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
     6da:	89 04 24             	mov    %eax,(%esp)
     6dd:	e8 fc ff ff ff       	call   6de <tifm_cntrl_init+0x17e>
			6de: R_386_PC32	INTERRUPT_ENABLE_SET_FM
     6e2:	ff 0d 00 00 00 00    	decl   0x0
			6e4: R_386_32	ModuleLoadCnt
     6e8:	e9 6c ff ff ff       	jmp    659 <tifm_cntrl_init+0xf9>
     6ed:	0f b6 5c 24 17       	movzbl 0x17(%esp),%ebx
     6f2:	89 5c 24 04          	mov    %ebx,0x4(%esp)
     6f6:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
     6fc:	89 04 24             	mov    %eax,(%esp)
     6ff:	e8 fc ff ff ff       	call   700 <tifm_cntrl_init+0x1a0>
			700: R_386_PC32	CardDetectionFM
     704:	89 5c 24 04          	mov    %ebx,0x4(%esp)
     708:	89 34 24             	mov    %esi,(%esp)
     70b:	e8 fc ff ff ff       	call   70c <tifm_cntrl_init+0x1ac>
			70c: R_386_PC32	OnCardInsertionOrRemoval
     710:	fe 44 24 17          	incb   0x17(%esp)
     714:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
     719:	3a 46 38             	cmp    0x38(%esi),%al
     71c:	72 cf                	jb     6ed <tifm_cntrl_init+0x18d>
     71e:	eb ab                	jmp    6cb <tifm_cntrl_init+0x16b>
     720:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)
			723: R_386_32	.rodata.str1.32
     727:	bb 64 00 00 00       	mov    $0x64,%ebx
			728: R_386_32	.rodata
     72c:	89 5c 24 04          	mov    %ebx,0x4(%esp)
     730:	e8 fc ff ff ff       	call   731 <tifm_cntrl_init+0x1d1>
			731: R_386_PC32	printk
     735:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
     73a:	e9 1c ff ff ff       	jmp    65b <tifm_cntrl_init+0xfb>
     73f:	90                   	nop    

00000740 <GetGeometry_ioctl>:
     740:	83 ec 28             	sub    $0x28,%esp
     743:	0f b6 4c 24 30       	movzbl 0x30(%esp),%ecx
     748:	89 5c 24 18          	mov    %ebx,0x18(%esp)
     74c:	8b 5c 24 34          	mov    0x34(%esp),%ebx
     750:	89 6c 24 24          	mov    %ebp,0x24(%esp)
     754:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
     758:	89 74 24 1c          	mov    %esi,0x1c(%esp)
     75c:	89 7c 24 20          	mov    %edi,0x20(%esp)
     760:	b8 00 e0 ff ff       	mov    $0xffffe000,%eax
     765:	89 da                	mov    %ebx,%edx
     767:	21 e0                	and    %esp,%eax
     769:	83 c2 08             	add    $0x8,%edx
     76c:	19 f6                	sbb    %esi,%esi
     76e:	39 50 18             	cmp    %edx,0x18(%eax)
     771:	83 de 00             	sbb    $0x0,%esi
     774:	85 f6                	test   %esi,%esi
     776:	0f 95 c0             	setne  %al
     779:	0f b6 c0             	movzbl %al,%eax
     77c:	85 c0                	test   %eax,%eax
     77e:	89 44 24 0c          	mov    %eax,0xc(%esp)
     782:	75 21                	jne    7a5 <GetGeometry_ioctl+0x65>
     784:	85 ed                	test   %ebp,%ebp
     786:	74 1d                	je     7a5 <GetGeometry_ioctl+0x65>
     788:	8b 85 a0 00 00 00    	mov    0xa0(%ebp),%eax
     78e:	85 c0                	test   %eax,%eax
     790:	74 13                	je     7a5 <GetGeometry_ioctl+0x65>
     792:	89 2c 24             	mov    %ebp,(%esp)
     795:	0f b6 f1             	movzbl %cl,%esi
     798:	89 74 24 04          	mov    %esi,0x4(%esp)
     79c:	e8 fc ff ff ff       	call   79d <GetGeometry_ioctl+0x5d>
			79d: R_386_PC32	IsFMValid
     7a1:	84 c0                	test   %al,%al
     7a3:	75 1b                	jne    7c0 <GetGeometry_ioctl+0x80>
     7a5:	ba f2 ff ff ff       	mov    $0xfffffff2,%edx
     7aa:	8b 5c 24 18          	mov    0x18(%esp),%ebx
     7ae:	89 d0                	mov    %edx,%eax
     7b0:	8b 74 24 1c          	mov    0x1c(%esp),%esi
     7b4:	8b 7c 24 20          	mov    0x20(%esp),%edi
     7b8:	8b 6c 24 24          	mov    0x24(%esp),%ebp
     7bc:	83 c4 28             	add    $0x28,%esp
     7bf:	c3                   	ret    
     7c0:	b9 02 00 00 00       	mov    $0x2,%ecx
     7c5:	8d 7c 24 10          	lea    0x10(%esp),%edi
     7c9:	8b 44 24 0c          	mov    0xc(%esp),%eax
     7cd:	f3 ab                	repz stos %eax,%es:(%edi)
     7cf:	89 74 24 04          	mov    %esi,0x4(%esp)
     7d3:	8d 44 24 10          	lea    0x10(%esp),%eax
     7d7:	89 44 24 08          	mov    %eax,0x8(%esp)
     7db:	8b 85 a0 00 00 00    	mov    0xa0(%ebp),%eax
     7e1:	89 04 24             	mov    %eax,(%esp)
     7e4:	e8 fc ff ff ff       	call   7e5 <GetGeometry_ioctl+0xa5>
			7e5: R_386_PC32	GetFMGeometry
     7e9:	85 c0                	test   %eax,%eax
     7eb:	89 c6                	mov    %eax,%esi
     7ed:	ba f2 ff ff ff       	mov    $0xfffffff2,%edx
     7f2:	75 b6                	jne    7aa <GetGeometry_ioctl+0x6a>
     7f4:	89 1c 24             	mov    %ebx,(%esp)
     7f7:	b8 08 00 00 00       	mov    $0x8,%eax
     7fc:	8d 7c 24 10          	lea    0x10(%esp),%edi
     800:	89 44 24 08          	mov    %eax,0x8(%esp)
     804:	89 7c 24 04          	mov    %edi,0x4(%esp)
     808:	e8 fc ff ff ff       	call   809 <GetGeometry_ioctl+0xc9>
			809: R_386_PC32	copy_to_user
     80d:	85 c0                	test   %eax,%eax
     80f:	ba f2 ff ff ff       	mov    $0xfffffff2,%edx
     814:	0f 44 d6             	cmove  %esi,%edx
     817:	eb 91                	jmp    7aa <GetGeometry_ioctl+0x6a>
     819:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00000820 <tifm_ioctl>:
     820:	83 ec 18             	sub    $0x18,%esp
     823:	8b 44 24 1c          	mov    0x1c(%esp),%eax
     827:	89 7c 24 14          	mov    %edi,0x14(%esp)
     82b:	bf ea ff ff ff       	mov    $0xffffffea,%edi
     830:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
     834:	89 74 24 10          	mov    %esi,0x10(%esp)
     838:	8b 50 38             	mov    0x38(%eax),%edx
     83b:	81 e2 ff ff 0f 00    	and    $0xfffff,%edx
     841:	89 d3                	mov    %edx,%ebx
     843:	c1 eb 02             	shr    $0x2,%ebx
     846:	89 d6                	mov    %edx,%esi
     848:	89 5c 24 04          	mov    %ebx,0x4(%esp)
     84c:	8d 04 9d 00 00 00 00 	lea    0x0(,%ebx,4),%eax
     853:	29 c6                	sub    %eax,%esi
     855:	89 74 24 08          	mov    %esi,0x8(%esp)
     859:	c7 04 24 40 01 00 00 	movl   $0x140,(%esp)
			85c: R_386_32	.rodata.str1.32
     860:	e8 fc ff ff ff       	call   861 <tifm_ioctl+0x41>
			861: R_386_PC32	printk
     865:	83 fb 0f             	cmp    $0xf,%ebx
     868:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
     86d:	7f 17                	jg     886 <tifm_ioctl+0x66>
     86f:	8b 14 9d 20 00 00 00 	mov    0x20(,%ebx,4),%edx
			872: R_386_32	.bss
     876:	85 d2                	test   %edx,%edx
     878:	74 0c                	je     886 <tifm_ioctl+0x66>
     87a:	81 7c 24 24 01 03 00 	cmpl   $0x301,0x24(%esp)
     881:	00 
     882:	74 12                	je     896 <tifm_ioctl+0x76>
     884:	89 f8                	mov    %edi,%eax
     886:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
     88a:	8b 74 24 10          	mov    0x10(%esp),%esi
     88e:	8b 7c 24 14          	mov    0x14(%esp),%edi
     892:	83 c4 18             	add    $0x18,%esp
     895:	c3                   	ret    
     896:	89 14 24             	mov    %edx,(%esp)
     899:	8b 44 24 28          	mov    0x28(%esp),%eax
     89d:	89 f1                	mov    %esi,%ecx
     89f:	89 44 24 08          	mov    %eax,0x8(%esp)
     8a3:	0f b6 c1             	movzbl %cl,%eax
     8a6:	89 44 24 04          	mov    %eax,0x4(%esp)
     8aa:	e8 91 fe ff ff       	call   740 <GetGeometry_ioctl>
     8af:	89 c7                	mov    %eax,%edi
     8b1:	eb d1                	jmp    884 <tifm_ioctl+0x64>
     8b3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
     8b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000008c0 <tifm_open>:
     8c0:	83 ec 18             	sub    $0x18,%esp
     8c3:	89 6c 24 14          	mov    %ebp,0x14(%esp)
     8c7:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
     8cb:	89 5c 24 08          	mov    %ebx,0x8(%esp)
     8cf:	89 74 24 0c          	mov    %esi,0xc(%esp)
     8d3:	89 7c 24 10          	mov    %edi,0x10(%esp)
     8d7:	8b 55 38             	mov    0x38(%ebp),%edx
     8da:	81 e2 ff ff 0f 00    	and    $0xfffff,%edx
     8e0:	89 d1                	mov    %edx,%ecx
     8e2:	c1 e9 02             	shr    $0x2,%ecx
     8e5:	89 d7                	mov    %edx,%edi
     8e7:	8d 04 8d 00 00 00 00 	lea    0x0(,%ecx,4),%eax
     8ee:	29 c7                	sub    %eax,%edi
     8f0:	ba fa ff ff ff       	mov    $0xfffffffa,%edx
     8f5:	83 f9 0f             	cmp    $0xf,%ecx
     8f8:	7f 35                	jg     92f <tifm_open+0x6f>
     8fa:	8b 34 8d 20 00 00 00 	mov    0x20(,%ecx,4),%esi
			8fd: R_386_32	.bss
     901:	85 f6                	test   %esi,%esi
     903:	74 2a                	je     92f <tifm_open+0x6f>
     905:	89 34 24             	mov    %esi,(%esp)
     908:	89 f8                	mov    %edi,%eax
     90a:	0f b6 d8             	movzbl %al,%ebx
     90d:	89 5c 24 04          	mov    %ebx,0x4(%esp)
     911:	e8 fc ff ff ff       	call   912 <tifm_open+0x52>
			912: R_386_PC32	IsFMValid
     916:	84 c0                	test   %al,%al
     918:	74 10                	je     92a <tifm_open+0x6a>
     91a:	89 5c 24 04          	mov    %ebx,0x4(%esp)
     91e:	89 34 24             	mov    %esi,(%esp)
     921:	e8 fc ff ff ff       	call   922 <tifm_open+0x62>
			922: R_386_PC32	IsFMInitialized
     926:	84 c0                	test   %al,%al
     928:	75 1b                	jne    945 <tifm_open+0x85>
     92a:	ba fa ff ff ff       	mov    $0xfffffffa,%edx
     92f:	8b 5c 24 08          	mov    0x8(%esp),%ebx
     933:	89 d0                	mov    %edx,%eax
     935:	8b 74 24 0c          	mov    0xc(%esp),%esi
     939:	8b 7c 24 10          	mov    0x10(%esp),%edi
     93d:	8b 6c 24 14          	mov    0x14(%esp),%ebp
     941:	83 c4 18             	add    $0x18,%esp
     944:	c3                   	ret    
     945:	8b 85 fc 00 00 00    	mov    0xfc(%ebp),%eax
     94b:	89 04 24             	mov    %eax,(%esp)
     94e:	e8 fc ff ff ff       	call   94f <tifm_open+0x8f>
			94f: R_386_PC32	check_disk_change
     953:	8b 44 24 20          	mov    0x20(%esp),%eax
     957:	f6 40 1c 02          	testb  $0x2,0x1c(%eax)
     95b:	75 1d                	jne    97a <tifm_open+0xba>
     95d:	c1 e7 04             	shl    $0x4,%edi
     960:	8d 14 3e             	lea    (%esi,%edi,1),%edx
     963:	c6 82 b0 00 00 00 00 	movb   $0x0,0xb0(%edx)
     96a:	8b 85 fc 00 00 00    	mov    0xfc(%ebp),%eax
     970:	89 82 ac 00 00 00    	mov    %eax,0xac(%edx)
     976:	31 d2                	xor    %edx,%edx
     978:	eb b5                	jmp    92f <tifm_open+0x6f>
     97a:	89 5c 24 04          	mov    %ebx,0x4(%esp)
     97e:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
     984:	89 04 24             	mov    %eax,(%esp)
     987:	e8 fc ff ff ff       	call   988 <tifm_open+0xc8>
			988: R_386_PC32	WriteProtectedFM
     98c:	84 c0                	test   %al,%al
     98e:	ba e2 ff ff ff       	mov    $0xffffffe2,%edx
     993:	74 c8                	je     95d <tifm_open+0x9d>
     995:	eb 98                	jmp    92f <tifm_open+0x6f>
     997:	89 f6                	mov    %esi,%esi
     999:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000009a0 <tifm_close>:
     9a0:	53                   	push   %ebx
     9a1:	8b 44 24 08          	mov    0x8(%esp),%eax
     9a5:	8b 50 38             	mov    0x38(%eax),%edx
     9a8:	81 e2 ff ff 0f 00    	and    $0xfffff,%edx
     9ae:	89 d1                	mov    %edx,%ecx
     9b0:	c1 e9 02             	shr    $0x2,%ecx
     9b3:	8d 04 8d 00 00 00 00 	lea    0x0(,%ecx,4),%eax
     9ba:	29 c2                	sub    %eax,%edx
     9bc:	bb fa ff ff ff       	mov    $0xfffffffa,%ebx
     9c1:	83 f9 0f             	cmp    $0xf,%ecx
     9c4:	7f 1e                	jg     9e4 <tifm_close+0x44>
     9c6:	8b 04 8d 20 00 00 00 	mov    0x20(,%ecx,4),%eax
			9c9: R_386_32	.bss
     9cd:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
     9d2:	85 c0                	test   %eax,%eax
     9d4:	74 0e                	je     9e4 <tifm_close+0x44>
     9d6:	c1 e2 04             	shl    $0x4,%edx
     9d9:	31 c9                	xor    %ecx,%ecx
     9db:	31 db                	xor    %ebx,%ebx
     9dd:	89 8c 10 ac 00 00 00 	mov    %ecx,0xac(%eax,%edx,1)
     9e4:	89 d8                	mov    %ebx,%eax
     9e6:	5b                   	pop    %ebx
     9e7:	c3                   	ret    
     9e8:	90                   	nop    
     9e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

000009f0 <tifm_media_change>:
     9f0:	8b 44 24 04          	mov    0x4(%esp),%eax
     9f4:	8b 50 04             	mov    0x4(%eax),%edx
     9f7:	8d 42 03             	lea    0x3(%edx),%eax
     9fa:	83 fa ff             	cmp    $0xffffffff,%edx
     9fd:	89 d1                	mov    %edx,%ecx
     9ff:	0f 4f c2             	cmovg  %edx,%eax
     a02:	8b 14 95 20 00 00 00 	mov    0x20(,%edx,4),%edx
			a05: R_386_32	.bss
     a09:	83 e0 fc             	and    $0xfffffffc,%eax
     a0c:	29 c1                	sub    %eax,%ecx
     a0e:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     a13:	85 d2                	test   %edx,%edx
     a15:	74 10                	je     a27 <tifm_media_change+0x37>
     a17:	c1 e1 04             	shl    $0x4,%ecx
     a1a:	31 c0                	xor    %eax,%eax
     a1c:	80 bc 0a b0 00 00 00 	cmpb   $0x1,0xb0(%edx,%ecx,1)
     a23:	01 
     a24:	0f 94 c0             	sete   %al
     a27:	c3                   	ret    
     a28:	90                   	nop    
     a29:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00000a30 <tifm_revalidate>:
     a30:	8b 44 24 04          	mov    0x4(%esp),%eax
     a34:	8b 50 04             	mov    0x4(%eax),%edx
     a37:	8d 42 03             	lea    0x3(%edx),%eax
     a3a:	83 fa ff             	cmp    $0xffffffff,%edx
     a3d:	89 d1                	mov    %edx,%ecx
     a3f:	0f 4f c2             	cmovg  %edx,%eax
     a42:	8b 14 95 20 00 00 00 	mov    0x20(,%edx,4),%edx
			a45: R_386_32	.bss
     a49:	83 e0 fc             	and    $0xfffffffc,%eax
     a4c:	29 c1                	sub    %eax,%ecx
     a4e:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     a53:	85 d2                	test   %edx,%edx
     a55:	74 0e                	je     a65 <tifm_revalidate+0x35>
     a57:	31 c0                	xor    %eax,%eax
     a59:	c1 e1 04             	shl    $0x4,%ecx
     a5c:	88 84 0a b0 00 00 00 	mov    %al,0xb0(%edx,%ecx,1)
     a63:	31 c0                	xor    %eax,%eax
     a65:	c3                   	ret    
     a66:	8d 76 00             	lea    0x0(%esi),%esi
     a69:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00000a70 <tifm_startio>:
     a70:	83 ec 2c             	sub    $0x2c,%esp
     a73:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
     a77:	8b 5c 24 34          	mov    0x34(%esp),%ebx
     a7b:	89 6c 24 28          	mov    %ebp,0x28(%esp)
     a7f:	8b 6c 24 30          	mov    0x30(%esp),%ebp
     a83:	89 74 24 20          	mov    %esi,0x20(%esp)
     a87:	89 7c 24 24          	mov    %edi,0x24(%esp)
     a8b:	0f b6 13             	movzbl (%ebx),%edx
     a8e:	0f b6 43 08          	movzbl 0x8(%ebx),%eax
     a92:	88 44 24 1b          	mov    %al,0x1b(%esp)
     a96:	83 7b 08 30          	cmpl   $0x30,0x8(%ebx)
     a9a:	0f 87 00 02 00 00    	ja     ca0 <tifm_startio+0x230>
     aa0:	8b 73 0c             	mov    0xc(%ebx),%esi
     aa3:	85 f6                	test   %esi,%esi
     aa5:	0f 84 15 01 00 00    	je     bc0 <tifm_startio+0x150>
     aab:	4e                   	dec    %esi
     aac:	74 22                	je     ad0 <tifm_startio+0x60>
     aae:	c7 04 24 80 01 00 00 	movl   $0x180,(%esp)
			ab1: R_386_32	.rodata.str1.32
     ab5:	e8 fc ff ff ff       	call   ab6 <tifm_startio+0x46>
			ab6: R_386_PC32	printk
     aba:	31 c0                	xor    %eax,%eax
     abc:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
     ac0:	8b 74 24 20          	mov    0x20(%esp),%esi
     ac4:	8b 7c 24 24          	mov    0x24(%esp),%edi
     ac8:	8b 6c 24 28          	mov    0x28(%esp),%ebp
     acc:	83 c4 2c             	add    $0x2c,%esp
     acf:	c3                   	ret    
     ad0:	8b 8d a0 00 00 00    	mov    0xa0(%ebp),%ecx
     ad6:	0f b6 f2             	movzbl %dl,%esi
     ad9:	8b 44 b1 0c          	mov    0xc(%ecx,%esi,4),%eax
     add:	80 78 04 00          	cmpb   $0x0,0x4(%eax)
     ae1:	74 d7                	je     aba <tifm_startio+0x4a>
     ae3:	89 f0                	mov    %esi,%eax
     ae5:	c1 e0 04             	shl    $0x4,%eax
     ae8:	80 bc 05 b0 00 00 00 	cmpb   $0x1,0xb0(%ebp,%eax,1)
     aef:	01 
     af0:	74 c8                	je     aba <tifm_startio+0x4a>
     af2:	a1 00 00 00 00       	mov    0x0,%eax
			af3: R_386_32	LEDWriteBlinkCnt
     af7:	85 c0                	test   %eax,%eax
     af9:	0f 84 a1 00 00 00    	je     ba0 <tifm_startio+0x130>
     aff:	8d 44 24 1b          	lea    0x1b(%esp),%eax
     b03:	89 44 24 14          	mov    %eax,0x14(%esp)
     b07:	8b 44 b5 50          	mov    0x50(%ebp,%esi,4),%eax
     b0b:	89 44 24 10          	mov    %eax,0x10(%esp)
     b0f:	0f b7 43 08          	movzwl 0x8(%ebx),%eax
     b13:	89 44 24 0c          	mov    %eax,0xc(%esp)
     b17:	8b 43 04             	mov    0x4(%ebx),%eax
     b1a:	89 74 24 04          	mov    %esi,0x4(%esp)
     b1e:	89 0c 24             	mov    %ecx,(%esp)
     b21:	89 44 24 08          	mov    %eax,0x8(%esp)
     b25:	e8 fc ff ff ff       	call   b26 <tifm_startio+0xb6>
			b26: R_386_PC32	WriteFM
     b2a:	84 c0                	test   %al,%al
     b2c:	75 07                	jne    b35 <tifm_startio+0xc5>
     b2e:	80 7c 24 1b 00       	cmpb   $0x0,0x1b(%esp)
     b33:	74 35                	je     b6a <tifm_startio+0xfa>
     b35:	0f b6 c0             	movzbl %al,%eax
     b38:	89 44 24 0c          	mov    %eax,0xc(%esp)
     b3c:	8b 43 04             	mov    0x4(%ebx),%eax
     b3f:	c7 04 24 c0 01 00 00 	movl   $0x1c0,(%esp)
			b42: R_386_32	.rodata.str1.32
     b46:	89 44 24 08          	mov    %eax,0x8(%esp)
     b4a:	b8 74 00 00 00       	mov    $0x74,%eax
			b4b: R_386_32	.rodata
     b4f:	89 44 24 04          	mov    %eax,0x4(%esp)
     b53:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
     b59:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     b60:	e8 fc ff ff ff       	call   b61 <tifm_startio+0xf1>
			b61: R_386_PC32	printk
     b65:	e9 50 ff ff ff       	jmp    aba <tifm_startio+0x4a>
     b6a:	89 74 24 04          	mov    %esi,0x4(%esp)
     b6e:	31 c0                	xor    %eax,%eax
     b70:	89 44 24 08          	mov    %eax,0x8(%esp)
     b74:	8b 85 a0 00 00 00    	mov    0xa0(%ebp),%eax
     b7a:	89 04 24             	mov    %eax,(%esp)
     b7d:	e8 fc ff ff ff       	call   b7e <tifm_startio+0x10e>
			b7e: R_386_PC32	LED
     b82:	8b 15 00 00 00 00    	mov    0x0,%edx
			b84: R_386_32	LEDWriteBlinkCnt
     b88:	31 c0                	xor    %eax,%eax
     b8a:	42                   	inc    %edx
     b8b:	83 fa 10             	cmp    $0x10,%edx
     b8e:	0f 4c c2             	cmovl  %edx,%eax
     b91:	a3 00 00 00 00       	mov    %eax,0x0
			b92: R_386_32	LEDWriteBlinkCnt
     b96:	b8 01 00 00 00       	mov    $0x1,%eax
     b9b:	e9 1c ff ff ff       	jmp    abc <tifm_startio+0x4c>
     ba0:	89 0c 24             	mov    %ecx,(%esp)
     ba3:	b8 01 00 00 00       	mov    $0x1,%eax
     ba8:	89 44 24 08          	mov    %eax,0x8(%esp)
     bac:	89 74 24 04          	mov    %esi,0x4(%esp)
     bb0:	e8 fc ff ff ff       	call   bb1 <tifm_startio+0x141>
			bb1: R_386_PC32	LED
     bb5:	8b 8d a0 00 00 00    	mov    0xa0(%ebp),%ecx
     bbb:	e9 3f ff ff ff       	jmp    aff <tifm_startio+0x8f>
     bc0:	8b 8d a0 00 00 00    	mov    0xa0(%ebp),%ecx
     bc6:	0f b6 fa             	movzbl %dl,%edi
     bc9:	8b 44 b9 0c          	mov    0xc(%ecx,%edi,4),%eax
     bcd:	80 78 04 00          	cmpb   $0x0,0x4(%eax)
     bd1:	0f 84 e3 fe ff ff    	je     aba <tifm_startio+0x4a>
     bd7:	89 f8                	mov    %edi,%eax
     bd9:	c1 e0 04             	shl    $0x4,%eax
     bdc:	80 bc 05 b0 00 00 00 	cmpb   $0x1,0xb0(%ebp,%eax,1)
     be3:	01 
     be4:	0f 84 d0 fe ff ff    	je     aba <tifm_startio+0x4a>
     bea:	a1 00 00 00 00       	mov    0x0,%eax
			beb: R_386_32	LEDReadBlinkCnt
     bef:	85 c0                	test   %eax,%eax
     bf1:	0f 84 88 00 00 00    	je     c7f <tifm_startio+0x20f>
     bf7:	8d 44 24 1b          	lea    0x1b(%esp),%eax
     bfb:	89 44 24 14          	mov    %eax,0x14(%esp)
     bff:	8b 44 bd 50          	mov    0x50(%ebp,%edi,4),%eax
     c03:	89 44 24 10          	mov    %eax,0x10(%esp)
     c07:	0f b7 43 08          	movzwl 0x8(%ebx),%eax
     c0b:	89 44 24 0c          	mov    %eax,0xc(%esp)
     c0f:	8b 43 04             	mov    0x4(%ebx),%eax
     c12:	89 7c 24 04          	mov    %edi,0x4(%esp)
     c16:	89 0c 24             	mov    %ecx,(%esp)
     c19:	89 44 24 08          	mov    %eax,0x8(%esp)
     c1d:	e8 fc ff ff ff       	call   c1e <tifm_startio+0x1ae>
			c1e: R_386_PC32	ReadFM
     c22:	84 c0                	test   %al,%al
     c24:	75 07                	jne    c2d <tifm_startio+0x1bd>
     c26:	80 7c 24 1b 00       	cmpb   $0x0,0x1b(%esp)
     c2b:	74 23                	je     c50 <tifm_startio+0x1e0>
     c2d:	0f b6 c0             	movzbl %al,%eax
     c30:	ba 74 00 00 00       	mov    $0x74,%edx
			c31: R_386_32	.rodata
     c35:	89 44 24 0c          	mov    %eax,0xc(%esp)
     c39:	8b 43 04             	mov    0x4(%ebx),%eax
     c3c:	89 54 24 04          	mov    %edx,0x4(%esp)
     c40:	c7 04 24 00 02 00 00 	movl   $0x200,(%esp)
			c43: R_386_32	.rodata.str1.32
     c47:	89 44 24 08          	mov    %eax,0x8(%esp)
     c4b:	e9 10 ff ff ff       	jmp    b60 <tifm_startio+0xf0>
     c50:	89 7c 24 04          	mov    %edi,0x4(%esp)
     c54:	31 c0                	xor    %eax,%eax
     c56:	89 44 24 08          	mov    %eax,0x8(%esp)
     c5a:	8b 85 a0 00 00 00    	mov    0xa0(%ebp),%eax
     c60:	89 04 24             	mov    %eax,(%esp)
     c63:	e8 fc ff ff ff       	call   c64 <tifm_startio+0x1f4>
			c64: R_386_PC32	LED
     c68:	a1 00 00 00 00       	mov    0x0,%eax
			c69: R_386_32	LEDReadBlinkCnt
     c6d:	40                   	inc    %eax
     c6e:	83 f8 10             	cmp    $0x10,%eax
     c71:	0f 4c f0             	cmovl  %eax,%esi
     c74:	89 35 00 00 00 00    	mov    %esi,0x0
			c76: R_386_32	LEDReadBlinkCnt
     c7a:	e9 17 ff ff ff       	jmp    b96 <tifm_startio+0x126>
     c7f:	89 0c 24             	mov    %ecx,(%esp)
     c82:	b8 01 00 00 00       	mov    $0x1,%eax
     c87:	89 44 24 08          	mov    %eax,0x8(%esp)
     c8b:	89 7c 24 04          	mov    %edi,0x4(%esp)
     c8f:	e8 fc ff ff ff       	call   c90 <tifm_startio+0x220>
			c90: R_386_PC32	LED
     c94:	8b 8d a0 00 00 00    	mov    0xa0(%ebp),%ecx
     c9a:	e9 58 ff ff ff       	jmp    bf7 <tifm_startio+0x187>
     c9f:	90                   	nop    
     ca0:	c7 04 24 40 02 00 00 	movl   $0x240,(%esp)
			ca3: R_386_32	.rodata.str1.32
     ca7:	e9 09 fe ff ff       	jmp    ab5 <tifm_startio+0x45>
     cac:	8d 74 26 00          	lea    0x0(%esi),%esi

00000cb0 <do_tifm_transfer>:
     cb0:	55                   	push   %ebp
     cb1:	57                   	push   %edi
     cb2:	56                   	push   %esi
     cb3:	53                   	push   %ebx
     cb4:	83 ec 50             	sub    $0x50,%esp
     cb7:	89 f6                	mov    %esi,%esi
     cb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     cc0:	8b 44 24 64          	mov    0x64(%esp),%eax
     cc4:	89 04 24             	mov    %eax,(%esp)
     cc7:	e8 fc ff ff ff       	call   cc8 <do_tifm_transfer+0x18>
			cc8: R_386_PC32	elv_next_request
     ccc:	89 44 24 30          	mov    %eax,0x30(%esp)
     cd0:	85 c0                	test   %eax,%eax
     cd2:	0f 84 9f 03 00 00    	je     1077 <do_tifm_transfer+0x3c7>
     cd8:	31 c0                	xor    %eax,%eax
     cda:	31 f6                	xor    %esi,%esi
     cdc:	89 44 24 1c          	mov    %eax,0x1c(%esp)
     ce0:	8b 44 24 30          	mov    0x30(%esp),%eax
     ce4:	f6 40 08 10          	testb  $0x10,0x8(%eax)
     ce8:	0f 84 66 03 00 00    	je     1054 <do_tifm_transfer+0x3a4>
     cee:	8b 4c 24 30          	mov    0x30(%esp),%ecx
     cf2:	8b 41 34             	mov    0x34(%ecx),%eax
     cf5:	8b 58 38             	mov    0x38(%eax),%ebx
     cf8:	89 5c 24 34          	mov    %ebx,0x34(%esp)
     cfc:	8b 50 04             	mov    0x4(%eax),%edx
     cff:	83 fa ff             	cmp    $0xffffffff,%edx
     d02:	8d 42 03             	lea    0x3(%edx),%eax
     d05:	0f 4f c2             	cmovg  %edx,%eax
     d08:	83 e0 fc             	and    $0xfffffffc,%eax
     d0b:	31 ed                	xor    %ebp,%ebp
     d0d:	28 c2                	sub    %al,%dl
     d0f:	0f b6 c2             	movzbl %dl,%eax
     d12:	88 54 24 2b          	mov    %dl,0x2b(%esp)
     d16:	8b 79 0c             	mov    0xc(%ecx),%edi
     d19:	b9 00 18 00 00       	mov    $0x1800,%ecx
     d1e:	89 6c 24 20          	mov    %ebp,0x20(%esp)
     d22:	89 7c 24 24          	mov    %edi,0x24(%esp)
     d26:	8b 7c 83 40          	mov    0x40(%ebx,%eax,4),%edi
     d2a:	8b 44 24 1c          	mov    0x1c(%esp),%eax
     d2e:	f3 ab                	repz stos %eax,%es:(%edi)
     d30:	b9 04 00 00 00       	mov    $0x4,%ecx
     d35:	8d 7c 24 40          	lea    0x40(%esp),%edi
     d39:	f3 ab                	repz stos %eax,%es:(%edi)
     d3b:	8b 54 24 30          	mov    0x30(%esp),%edx
     d3f:	8b 42 24             	mov    0x24(%edx),%eax
     d42:	85 c0                	test   %eax,%eax
     d44:	0f 84 16 01 00 00    	je     e60 <do_tifm_transfer+0x1b0>
     d4a:	89 44 24 1c          	mov    %eax,0x1c(%esp)
     d4e:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
     d52:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
     d56:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
     d5a:	0f b7 41 16          	movzwl 0x16(%ecx),%eax
     d5e:	8b 53 2c             	mov    0x2c(%ebx),%edx
     d61:	8d 0c 40             	lea    (%eax,%eax,2),%ecx
     d64:	89 c5                	mov    %eax,%ebp
     d66:	8d 1c 8a             	lea    (%edx,%ecx,4),%ebx
     d69:	0f b7 47 14          	movzwl 0x14(%edi),%eax
     d6d:	39 c5                	cmp    %eax,%ebp
     d6f:	0f 8d c4 00 00 00    	jge    e39 <do_tifm_transfer+0x189>
     d75:	8d 74 26 00          	lea    0x0(%esi),%esi
     d79:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     d80:	8b 43 04             	mov    0x4(%ebx),%eax
     d83:	c1 e8 09             	shr    $0x9,%eax
     d86:	8d 04 30             	lea    (%eax,%esi,1),%eax
     d89:	89 44 24 18          	mov    %eax,0x18(%esp)
     d8d:	83 f8 30             	cmp    $0x30,%eax
     d90:	0f 87 ca 00 00 00    	ja     e60 <do_tifm_transfer+0x1b0>
     d96:	9c                   	pushf  
     d97:	8f 44 24 3c          	popl   0x3c(%esp)
     d9b:	fa                   	cli    
     d9c:	bf 05 00 00 00       	mov    $0x5,%edi
     da1:	89 7c 24 04          	mov    %edi,0x4(%esp)
     da5:	8b 03                	mov    (%ebx),%eax
     da7:	89 04 24             	mov    %eax,(%esp)
     daa:	e8 fc ff ff ff       	call   dab <do_tifm_transfer+0xfb>
			dab: R_386_PC32	kmap_atomic
     daf:	a9 ff 0f 00 00       	test   $0xfff,%eax
     db4:	0f 85 8d 02 00 00    	jne    1047 <do_tifm_transfer+0x397>
     dba:	8b 73 08             	mov    0x8(%ebx),%esi
     dbd:	8b 54 24 34          	mov    0x34(%esp),%edx
     dc1:	8b 7c 24 20          	mov    0x20(%esp),%edi
     dc5:	01 f0                	add    %esi,%eax
     dc7:	89 44 24 10          	mov    %eax,0x10(%esp)
     dcb:	8b 74 24 10          	mov    0x10(%esp),%esi
     dcf:	0f b6 44 24 2b       	movzbl 0x2b(%esp),%eax
     dd4:	8b 4c 82 40          	mov    0x40(%edx,%eax,4),%ecx
     dd8:	8b 43 04             	mov    0x4(%ebx),%eax
     ddb:	01 cf                	add    %ecx,%edi
     ddd:	89 c1                	mov    %eax,%ecx
     ddf:	c1 e9 02             	shr    $0x2,%ecx
     de2:	f3 a5                	repz movsl %ds:(%esi),%es:(%edi)
     de4:	a8 02                	test   $0x2,%al
     de6:	74 02                	je     dea <do_tifm_transfer+0x13a>
     de8:	66 a5                	movsw  %ds:(%esi),%es:(%edi)
     dea:	a8 01                	test   $0x1,%al
     dec:	74 01                	je     def <do_tifm_transfer+0x13f>
     dee:	a4                   	movsb  %ds:(%esi),%es:(%edi)
     def:	81 64 24 10 00 f0 ff 	andl   $0xfffff000,0x10(%esp)
     df6:	ff 
     df7:	b8 05 00 00 00       	mov    $0x5,%eax
     dfc:	89 44 24 04          	mov    %eax,0x4(%esp)
     e00:	8b 7c 24 10          	mov    0x10(%esp),%edi
     e04:	89 3c 24             	mov    %edi,(%esp)
     e07:	e8 fc ff ff ff       	call   e08 <do_tifm_transfer+0x158>
			e08: R_386_PC32	kunmap_atomic
     e0c:	ff 74 24 3c          	pushl  0x3c(%esp)
     e10:	9d                   	popf   
     e11:	8b 43 04             	mov    0x4(%ebx),%eax
     e14:	8b 54 24 30          	mov    0x30(%esp),%edx
     e18:	8b 74 24 18          	mov    0x18(%esp),%esi
     e1c:	01 44 24 20          	add    %eax,0x20(%esp)
     e20:	39 72 10             	cmp    %esi,0x10(%edx)
     e23:	74 3b                	je     e60 <do_tifm_transfer+0x1b0>
     e25:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
     e29:	45                   	inc    %ebp
     e2a:	83 c3 0c             	add    $0xc,%ebx
     e2d:	0f b7 41 14          	movzwl 0x14(%ecx),%eax
     e31:	39 c5                	cmp    %eax,%ebp
     e33:	0f 8c 47 ff ff ff    	jl     d80 <do_tifm_transfer+0xd0>
     e39:	31 db                	xor    %ebx,%ebx
     e3b:	84 db                	test   %bl,%bl
     e3d:	75 21                	jne    e60 <do_tifm_transfer+0x1b0>
     e3f:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
     e43:	8b 7f 04             	mov    0x4(%edi),%edi
     e46:	85 ff                	test   %edi,%edi
     e48:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
     e4c:	0f 85 fc fe ff ff    	jne    d4e <do_tifm_transfer+0x9e>
     e52:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
     e59:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     e60:	0f b6 4c 24 2b       	movzbl 0x2b(%esp),%ecx
     e65:	8d 7c 24 40          	lea    0x40(%esp),%edi
     e69:	8b 54 24 30          	mov    0x30(%esp),%edx
     e6d:	8b 5c 24 24          	mov    0x24(%esp),%ebx
     e71:	8b 42 08             	mov    0x8(%edx),%eax
     e74:	88 4c 24 40          	mov    %cl,0x40(%esp)
     e78:	89 5c 24 44          	mov    %ebx,0x44(%esp)
     e7c:	83 e0 01             	and    $0x1,%eax
     e7f:	89 44 24 4c          	mov    %eax,0x4c(%esp)
     e83:	8b 44 24 34          	mov    0x34(%esp),%eax
     e87:	89 74 24 48          	mov    %esi,0x48(%esp)
     e8b:	89 7c 24 04          	mov    %edi,0x4(%esp)
     e8f:	89 04 24             	mov    %eax,(%esp)
     e92:	e8 d9 fb ff ff       	call   a70 <tifm_startio>
     e97:	89 44 24 2c          	mov    %eax,0x2c(%esp)
     e9b:	8b 54 24 30          	mov    0x30(%esp),%edx
     e9f:	f6 42 08 01          	testb  $0x1,0x8(%edx)
     ea3:	0f 85 27 01 00 00    	jne    fd0 <do_tifm_transfer+0x320>
     ea9:	85 c0                	test   %eax,%eax
     eab:	0f 84 1f 01 00 00    	je     fd0 <do_tifm_transfer+0x320>
     eb1:	31 ed                	xor    %ebp,%ebp
     eb3:	31 f6                	xor    %esi,%esi
     eb5:	89 6c 24 20          	mov    %ebp,0x20(%esp)
     eb9:	8b 42 24             	mov    0x24(%edx),%eax
     ebc:	85 c0                	test   %eax,%eax
     ebe:	0f 84 0c 01 00 00    	je     fd0 <do_tifm_transfer+0x320>
     ec4:	89 44 24 1c          	mov    %eax,0x1c(%esp)
     ec8:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
     ecc:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
     ed0:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
     ed4:	0f b7 41 16          	movzwl 0x16(%ecx),%eax
     ed8:	8b 53 2c             	mov    0x2c(%ebx),%edx
     edb:	8d 0c 40             	lea    (%eax,%eax,2),%ecx
     ede:	89 c5                	mov    %eax,%ebp
     ee0:	8d 1c 8a             	lea    (%edx,%ecx,4),%ebx
     ee3:	0f b7 47 14          	movzwl 0x14(%edi),%eax
     ee7:	39 c5                	cmp    %eax,%ebp
     ee9:	0f 8d ba 00 00 00    	jge    fa9 <do_tifm_transfer+0x2f9>
     eef:	90                   	nop    
     ef0:	8b 43 04             	mov    0x4(%ebx),%eax
     ef3:	c1 e8 09             	shr    $0x9,%eax
     ef6:	8d 04 30             	lea    (%eax,%esi,1),%eax
     ef9:	89 44 24 14          	mov    %eax,0x14(%esp)
     efd:	83 f8 30             	cmp    $0x30,%eax
     f00:	0f 87 ca 00 00 00    	ja     fd0 <do_tifm_transfer+0x320>
     f06:	9c                   	pushf  
     f07:	8f 44 24 38          	popl   0x38(%esp)
     f0b:	fa                   	cli    
     f0c:	bf 05 00 00 00       	mov    $0x5,%edi
     f11:	89 7c 24 04          	mov    %edi,0x4(%esp)
     f15:	8b 03                	mov    (%ebx),%eax
     f17:	89 04 24             	mov    %eax,(%esp)
     f1a:	e8 fc ff ff ff       	call   f1b <do_tifm_transfer+0x26b>
			f1b: R_386_PC32	kmap_atomic
     f1f:	a9 ff 0f 00 00       	test   $0xfff,%eax
     f24:	0f 85 10 01 00 00    	jne    103a <do_tifm_transfer+0x38a>
     f2a:	8b 73 08             	mov    0x8(%ebx),%esi
     f2d:	8b 54 24 34          	mov    0x34(%esp),%edx
     f31:	01 f0                	add    %esi,%eax
     f33:	89 44 24 0c          	mov    %eax,0xc(%esp)
     f37:	8b 74 24 20          	mov    0x20(%esp),%esi
     f3b:	8b 7c 24 0c          	mov    0xc(%esp),%edi
     f3f:	0f b6 44 24 2b       	movzbl 0x2b(%esp),%eax
     f44:	8b 4c 82 40          	mov    0x40(%edx,%eax,4),%ecx
     f48:	8b 43 04             	mov    0x4(%ebx),%eax
     f4b:	01 ce                	add    %ecx,%esi
     f4d:	89 c1                	mov    %eax,%ecx
     f4f:	c1 e9 02             	shr    $0x2,%ecx
     f52:	f3 a5                	repz movsl %ds:(%esi),%es:(%edi)
     f54:	a8 02                	test   $0x2,%al
     f56:	74 02                	je     f5a <do_tifm_transfer+0x2aa>
     f58:	66 a5                	movsw  %ds:(%esi),%es:(%edi)
     f5a:	a8 01                	test   $0x1,%al
     f5c:	74 01                	je     f5f <do_tifm_transfer+0x2af>
     f5e:	a4                   	movsb  %ds:(%esi),%es:(%edi)
     f5f:	81 64 24 0c 00 f0 ff 	andl   $0xfffff000,0xc(%esp)
     f66:	ff 
     f67:	b8 05 00 00 00       	mov    $0x5,%eax
     f6c:	89 44 24 04          	mov    %eax,0x4(%esp)
     f70:	8b 44 24 0c          	mov    0xc(%esp),%eax
     f74:	89 04 24             	mov    %eax,(%esp)
     f77:	e8 fc ff ff ff       	call   f78 <do_tifm_transfer+0x2c8>
			f78: R_386_PC32	kunmap_atomic
     f7c:	ff 74 24 38          	pushl  0x38(%esp)
     f80:	9d                   	popf   
     f81:	8b 53 04             	mov    0x4(%ebx),%edx
     f84:	8b 4c 24 30          	mov    0x30(%esp),%ecx
     f88:	8b 74 24 14          	mov    0x14(%esp),%esi
     f8c:	01 54 24 20          	add    %edx,0x20(%esp)
     f90:	39 71 10             	cmp    %esi,0x10(%ecx)
     f93:	74 3b                	je     fd0 <do_tifm_transfer+0x320>
     f95:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
     f99:	45                   	inc    %ebp
     f9a:	83 c3 0c             	add    $0xc,%ebx
     f9d:	0f b7 47 14          	movzwl 0x14(%edi),%eax
     fa1:	39 c5                	cmp    %eax,%ebp
     fa3:	0f 8c 47 ff ff ff    	jl     ef0 <do_tifm_transfer+0x240>
     fa9:	31 c0                	xor    %eax,%eax
     fab:	84 c0                	test   %al,%al
     fad:	75 21                	jne    fd0 <do_tifm_transfer+0x320>
     faf:	8b 54 24 1c          	mov    0x1c(%esp),%edx
     fb3:	8b 52 04             	mov    0x4(%edx),%edx
     fb6:	85 d2                	test   %edx,%edx
     fb8:	89 54 24 1c          	mov    %edx,0x1c(%esp)
     fbc:	0f 85 06 ff ff ff    	jne    ec8 <do_tifm_transfer+0x218>
     fc2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
     fc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
     fd0:	89 74 24 08          	mov    %esi,0x8(%esp)
     fd4:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
     fd8:	8b 5c 24 30          	mov    0x30(%esp),%ebx
     fdc:	89 4c 24 04          	mov    %ecx,0x4(%esp)
     fe0:	89 1c 24             	mov    %ebx,(%esp)
     fe3:	e8 fc ff ff ff       	call   fe4 <do_tifm_transfer+0x334>
			fe4: R_386_PC32	end_that_request_first
     fe8:	85 c0                	test   %eax,%eax
     fea:	0f 85 d0 fc ff ff    	jne    cc0 <do_tifm_transfer+0x10>
     ff0:	8b 13                	mov    (%ebx),%edx
     ff2:	39 da                	cmp    %ebx,%edx
     ff4:	74 3a                	je     1030 <do_tifm_transfer+0x380>
     ff6:	8b 74 24 30          	mov    0x30(%esp),%esi
     ffa:	8b 46 04             	mov    0x4(%esi),%eax
     ffd:	89 42 04             	mov    %eax,0x4(%edx)
    1000:	89 10                	mov    %edx,(%eax)
    1002:	8b 46 54             	mov    0x54(%esi),%eax
    1005:	89 36                	mov    %esi,(%esi)
    1007:	89 76 04             	mov    %esi,0x4(%esi)
    100a:	85 c0                	test   %eax,%eax
    100c:	75 11                	jne    101f <do_tifm_transfer+0x36f>
    100e:	8b 7c 24 30          	mov    0x30(%esp),%edi
    1012:	89 3c 24             	mov    %edi,(%esp)
    1015:	e8 fc ff ff ff       	call   1016 <do_tifm_transfer+0x366>
			1016: R_386_PC32	end_that_request_last
    101a:	e9 a1 fc ff ff       	jmp    cc0 <do_tifm_transfer+0x10>
    101f:	89 74 24 04          	mov    %esi,0x4(%esp)
    1023:	8b 46 50             	mov    0x50(%esi),%eax
    1026:	89 04 24             	mov    %eax,(%esp)
    1029:	e8 fc ff ff ff       	call   102a <do_tifm_transfer+0x37a>
			102a: R_386_PC32	elv_remove_request
    102e:	eb de                	jmp    100e <do_tifm_transfer+0x35e>
    1030:	0f 0b                	ud2a   
    1032:	40                   	inc    %eax
    1033:	02 05 00 00 00 eb    	add    0xeb000000,%al
			1034: R_386_32	.rodata.str1.1
    1039:	bc 0f 0b 2f 01       	mov    $0x12f0b0f,%esp
    103e:	1c 00                	sbb    $0x0,%al
			103e: R_386_32	.rodata.str1.1
    1040:	00 00                	add    %al,(%eax)
    1042:	e9 e3 fe ff ff       	jmp    f2a <do_tifm_transfer+0x27a>
    1047:	0f 0b                	ud2a   
    1049:	2f                   	das    
    104a:	01 1c 00             	add    %ebx,(%eax,%eax,1)
			104b: R_386_32	.rodata.str1.1
    104d:	00 00                	add    %al,(%eax)
    104f:	e9 66 fd ff ff       	jmp    dba <do_tifm_transfer+0x10a>
    1054:	c7 04 24 80 02 00 00 	movl   $0x280,(%esp)
			1057: R_386_32	.rodata.str1.32
    105b:	e8 fc ff ff ff       	call   105c <do_tifm_transfer+0x3ac>
			105c: R_386_PC32	printk
    1060:	8b 54 24 30          	mov    0x30(%esp),%edx
    1064:	31 c0                	xor    %eax,%eax
    1066:	89 44 24 04          	mov    %eax,0x4(%esp)
    106a:	89 14 24             	mov    %edx,(%esp)
    106d:	e8 fc ff ff ff       	call   106e <do_tifm_transfer+0x3be>
			106e: R_386_PC32	end_request
    1072:	e9 49 fc ff ff       	jmp    cc0 <do_tifm_transfer+0x10>
    1077:	83 c4 50             	add    $0x50,%esp
    107a:	5b                   	pop    %ebx
    107b:	5e                   	pop    %esi
    107c:	5f                   	pop    %edi
    107d:	5d                   	pop    %ebp
    107e:	c3                   	ret    
    107f:	90                   	nop    

00001080 <do_tifm_request>:
    1080:	e9 2b fc ff ff       	jmp    cb0 <do_tifm_transfer>
    1085:	8d 74 26 00          	lea    0x0(%esi),%esi
    1089:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00001090 <gendisk_free>:
    1090:	83 ec 0c             	sub    $0xc,%esp
    1093:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1097:	89 74 24 08          	mov    %esi,0x8(%esp)
    109b:	0f b6 74 24 14       	movzbl 0x14(%esp),%esi
    10a0:	8b 44 24 10          	mov    0x10(%esp),%eax
    10a4:	c1 e6 04             	shl    $0x4,%esi
    10a7:	01 c6                	add    %eax,%esi
    10a9:	8d 9e a4 00 00 00    	lea    0xa4(%esi),%ebx
    10af:	8b 43 04             	mov    0x4(%ebx),%eax
    10b2:	85 c0                	test   %eax,%eax
    10b4:	75 0e                	jne    10c4 <gendisk_free+0x34>
    10b6:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    10ba:	31 c0                	xor    %eax,%eax
    10bc:	8b 74 24 08          	mov    0x8(%esp),%esi
    10c0:	83 c4 0c             	add    $0xc,%esp
    10c3:	c3                   	ret    
    10c4:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)
    10cb:	8b 43 04             	mov    0x4(%ebx),%eax
    10ce:	89 04 24             	mov    %eax,(%esp)
    10d1:	e8 fc ff ff ff       	call   10d2 <gendisk_free+0x42>
			10d2: R_386_PC32	del_gendisk
    10d6:	8b 43 04             	mov    0x4(%ebx),%eax
    10d9:	89 04 24             	mov    %eax,(%esp)
    10dc:	e8 fc ff ff ff       	call   10dd <gendisk_free+0x4d>
			10dd: R_386_PC32	put_disk
    10e1:	8b 86 a4 00 00 00    	mov    0xa4(%esi),%eax
    10e7:	89 04 24             	mov    %eax,(%esp)
    10ea:	e8 fc ff ff ff       	call   10eb <gendisk_free+0x5b>
			10eb: R_386_PC32	blk_cleanup_queue
    10ef:	eb c5                	jmp    10b6 <gendisk_free+0x26>
    10f1:	eb 0d                	jmp    1100 <gendisk_cleanup>
    10f3:	90                   	nop    
    10f4:	90                   	nop    
    10f5:	90                   	nop    
    10f6:	90                   	nop    
    10f7:	90                   	nop    
    10f8:	90                   	nop    
    10f9:	90                   	nop    
    10fa:	90                   	nop    
    10fb:	90                   	nop    
    10fc:	90                   	nop    
    10fd:	90                   	nop    
    10fe:	90                   	nop    
    10ff:	90                   	nop    

00001100 <gendisk_cleanup>:
    1100:	83 ec 10             	sub    $0x10,%esp
    1103:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    1107:	0f b6 4c 24 18       	movzbl 0x18(%esp),%ecx
    110c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    1111:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    1115:	89 c8                	mov    %ecx,%eax
    1117:	c1 e0 04             	shl    $0x4,%eax
    111a:	01 d8                	add    %ebx,%eax
    111c:	89 c3                	mov    %eax,%ebx
    111e:	81 c3 a4 00 00 00    	add    $0xa4,%ebx
    1124:	74 4a                	je     1170 <gendisk_cleanup+0x70>
    1126:	0f b6 15 00 00 00 00 	movzbl 0x0,%edx
			1129: R_386_32	cardstatus
    112d:	b8 10 00 00 00       	mov    $0x10,%eax
    1132:	d3 e0                	shl    %cl,%eax
    1134:	80 e2 0f             	and    $0xf,%dl
    1137:	08 c2                	or     %al,%dl
    1139:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    113e:	d3 c0                	rol    %cl,%eax
    1140:	20 c2                	and    %al,%dl
    1142:	88 15 00 00 00 00    	mov    %dl,0x0
			1144: R_386_32	cardstatus
    1148:	ba 01 00 00 00       	mov    $0x1,%edx
    114d:	b8 03 00 00 00       	mov    $0x3,%eax
    1152:	89 44 24 04          	mov    %eax,0x4(%esp)
    1156:	a1 00 00 00 00       	mov    0x0,%eax
			1157: R_386_32	daemon_pid
    115b:	89 54 24 08          	mov    %edx,0x8(%esp)
    115f:	89 04 24             	mov    %eax,(%esp)
    1162:	e8 fc ff ff ff       	call   1163 <gendisk_cleanup+0x63>
			1163: R_386_PC32	kill_proc
    1167:	8b 43 08             	mov    0x8(%ebx),%eax
    116a:	85 c0                	test   %eax,%eax
    116c:	75 12                	jne    1180 <gendisk_cleanup+0x80>
    116e:	31 d2                	xor    %edx,%edx
    1170:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    1174:	89 d0                	mov    %edx,%eax
    1176:	83 c4 10             	add    $0x10,%esp
    1179:	c3                   	ret    
    117a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1180:	c6 43 0c 01          	movb   $0x1,0xc(%ebx)
    1184:	b8 01 00 00 00       	mov    $0x1,%eax
    1189:	89 44 24 04          	mov    %eax,0x4(%esp)
    118d:	8b 43 08             	mov    0x8(%ebx),%eax
    1190:	89 04 24             	mov    %eax,(%esp)
    1193:	e8 fc ff ff ff       	call   1194 <gendisk_cleanup+0x94>
			1194: R_386_PC32	invalidate_bdev
    1198:	eb d4                	jmp    116e <gendisk_cleanup+0x6e>
    119a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000011a0 <gendisk_init>:
    11a0:	55                   	push   %ebp
    11a1:	31 c9                	xor    %ecx,%ecx
    11a3:	57                   	push   %edi
    11a4:	56                   	push   %esi
    11a5:	31 f6                	xor    %esi,%esi
    11a7:	53                   	push   %ebx
    11a8:	83 ec 24             	sub    $0x24,%esp
    11ab:	0f b6 44 24 3c       	movzbl 0x3c(%esp),%eax
    11b0:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    11b4:	88 44 24 0f          	mov    %al,0xf(%esp)
    11b8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    11bd:	8b 54 24 38          	mov    0x38(%esp),%edx
    11c1:	85 d2                	test   %edx,%edx
    11c3:	0f 84 80 01 00 00    	je     1349 <gendisk_init+0x1a9>
    11c9:	0f b6 7c 24 0f       	movzbl 0xf(%esp),%edi
    11ce:	8b 5c 24 38          	mov    0x38(%esp),%ebx
    11d2:	89 f8                	mov    %edi,%eax
    11d4:	c1 e0 04             	shl    $0x4,%eax
    11d7:	01 c3                	add    %eax,%ebx
    11d9:	89 dd                	mov    %ebx,%ebp
    11db:	81 c5 a4 00 00 00    	add    $0xa4,%ebp
    11e1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    11e6:	0f 84 5d 01 00 00    	je     1349 <gendisk_init+0x1a9>
    11ec:	89 7c 24 04          	mov    %edi,0x4(%esp)
    11f0:	8b 54 24 38          	mov    0x38(%esp),%edx
    11f4:	8d 44 24 10          	lea    0x10(%esp),%eax
    11f8:	89 44 24 08          	mov    %eax,0x8(%esp)
    11fc:	8b 82 a0 00 00 00    	mov    0xa0(%edx),%eax
    1202:	89 04 24             	mov    %eax,(%esp)
    1205:	e8 fc ff ff ff       	call   1206 <gendisk_init+0x66>
			1206: R_386_PC32	GetFMDiskSize
    120a:	85 c0                	test   %eax,%eax
    120c:	0f 85 8e 01 00 00    	jne    13a0 <gendisk_init+0x200>
    1212:	8b 45 04             	mov    0x4(%ebp),%eax
    1215:	85 c0                	test   %eax,%eax
    1217:	0f 85 53 01 00 00    	jne    1370 <gendisk_init+0x1d0>
    121d:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    1221:	c7 04 24 80 10 00 00 	movl   $0x1080,(%esp)
			1224: R_386_32	.text
    1228:	e8 fc ff ff ff       	call   1229 <gendisk_init+0x89>
			1229: R_386_PC32	blk_init_queue
    122d:	89 83 a4 00 00 00    	mov    %eax,0xa4(%ebx)
    1233:	85 c0                	test   %eax,%eax
    1235:	0f 84 29 01 00 00    	je     1364 <gendisk_init+0x1c4>
    123b:	b8 00 02 00 00       	mov    $0x200,%eax
    1240:	89 44 24 04          	mov    %eax,0x4(%esp)
    1244:	8b 83 a4 00 00 00    	mov    0xa4(%ebx),%eax
    124a:	89 04 24             	mov    %eax,(%esp)
    124d:	e8 fc ff ff ff       	call   124e <gendisk_init+0xae>
			124e: R_386_PC32	blk_queue_hardsect_size
    1252:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
    1259:	e8 fc ff ff ff       	call   125a <gendisk_init+0xba>
			125a: R_386_PC32	alloc_disk
    125e:	89 45 04             	mov    %eax,0x4(%ebp)
    1261:	85 c0                	test   %eax,%eax
    1263:	89 c2                	mov    %eax,%edx
    1265:	0f 84 e6 00 00 00    	je     1351 <gendisk_init+0x1b1>
    126b:	a1 14 00 00 00       	mov    0x14,%eax
			126c: R_386_32	.bss
    1270:	89 02                	mov    %eax,(%edx)
    1272:	8b 4c 24 38          	mov    0x38(%esp),%ecx
    1276:	8b 5d 04             	mov    0x4(%ebp),%ebx
    1279:	0f be 41 3b          	movsbl 0x3b(%ecx),%eax
    127d:	89 04 24             	mov    %eax,(%esp)
    1280:	e8 fc ff ff ff       	call   1281 <gendisk_init+0xe1>
			1281: R_386_PC32	int_of
    1285:	8d 04 87             	lea    (%edi,%eax,4),%eax
    1288:	89 43 04             	mov    %eax,0x4(%ebx)
    128b:	8b 45 04             	mov    0x4(%ebp),%eax
    128e:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
			1291: R_386_32	ti_bd_op
    1295:	8b 45 04             	mov    0x4(%ebp),%eax
    1298:	8b 54 24 38          	mov    0x38(%esp),%edx
    129c:	89 50 38             	mov    %edx,0x38(%eax)
    129f:	90                   	nop    
    12a0:	8b 4c 24 38          	mov    0x38(%esp),%ecx
    12a4:	0f b6 44 31 39       	movzbl 0x39(%ecx,%esi,1),%eax
    12a9:	88 44 34 14          	mov    %al,0x14(%esp,%esi,1)
    12ad:	46                   	inc    %esi
    12ae:	83 fe 02             	cmp    $0x2,%esi
    12b1:	7e ed                	jle    12a0 <gendisk_init+0x100>
    12b3:	0f b6 5c 24 0f       	movzbl 0xf(%esp),%ebx
    12b8:	89 1c 24             	mov    %ebx,(%esp)
    12bb:	e8 fc ff ff ff       	call   12bc <gendisk_init+0x11c>
			12bc: R_386_PC32	char_of
    12c0:	88 44 24 17          	mov    %al,0x17(%esp)
    12c4:	8d 74 24 14          	lea    0x14(%esp),%esi
    12c8:	c6 44 24 18 00       	movb   $0x0,0x18(%esp)
    12cd:	8b 7d 04             	mov    0x4(%ebp),%edi
    12d0:	83 c7 0c             	add    $0xc,%edi
    12d3:	ac                   	lods   %ds:(%esi),%al
    12d4:	aa                   	stos   %al,%es:(%edi)
    12d5:	84 c0                	test   %al,%al
    12d7:	75 fa                	jne    12d3 <gendisk_init+0x133>
    12d9:	8b 45 04             	mov    0x4(%ebp),%eax
    12dc:	83 48 40 01          	orl    $0x1,0x40(%eax)
    12e0:	8b 44 24 10          	mov    0x10(%esp),%eax
    12e4:	8b 55 04             	mov    0x4(%ebp),%edx
    12e7:	c1 e0 0a             	shl    $0xa,%eax
    12ea:	c1 e8 09             	shr    $0x9,%eax
    12ed:	89 42 3c             	mov    %eax,0x3c(%edx)
    12f0:	8b 55 04             	mov    0x4(%ebp),%edx
    12f3:	8b 45 00             	mov    0x0(%ebp),%eax
    12f6:	89 42 34             	mov    %eax,0x34(%edx)
    12f9:	8b 45 04             	mov    0x4(%ebp),%eax
    12fc:	89 04 24             	mov    %eax,(%esp)
    12ff:	e8 fc ff ff ff       	call   1300 <gendisk_init+0x160>
			1300: R_386_PC32	add_disk
    1304:	0f b6 15 00 00 00 00 	movzbl 0x0,%edx
			1307: R_386_32	cardstatus
    130b:	88 d9                	mov    %bl,%cl
    130d:	b8 10 00 00 00       	mov    $0x10,%eax
    1312:	d3 e0                	shl    %cl,%eax
    1314:	80 e2 0f             	and    $0xf,%dl
    1317:	08 c2                	or     %al,%dl
    1319:	b8 01 00 00 00       	mov    $0x1,%eax
    131e:	d3 e0                	shl    %cl,%eax
    1320:	08 c2                	or     %al,%dl
    1322:	88 15 00 00 00 00    	mov    %dl,0x0
			1324: R_386_32	cardstatus
    1328:	bf 01 00 00 00       	mov    $0x1,%edi
    132d:	a1 00 00 00 00       	mov    0x0,%eax
			132e: R_386_32	daemon_pid
    1332:	89 7c 24 08          	mov    %edi,0x8(%esp)
    1336:	be 02 00 00 00       	mov    $0x2,%esi
    133b:	89 74 24 04          	mov    %esi,0x4(%esp)
    133f:	89 04 24             	mov    %eax,(%esp)
    1342:	e8 fc ff ff ff       	call   1343 <gendisk_init+0x1a3>
			1343: R_386_PC32	kill_proc
    1347:	31 c0                	xor    %eax,%eax
    1349:	83 c4 24             	add    $0x24,%esp
    134c:	5b                   	pop    %ebx
    134d:	5e                   	pop    %esi
    134e:	5f                   	pop    %edi
    134f:	5d                   	pop    %ebp
    1350:	c3                   	ret    
    1351:	c7 04 24 c0 02 00 00 	movl   $0x2c0,(%esp)
			1354: R_386_32	.rodata.str1.32
    1358:	e8 fc ff ff ff       	call   1359 <gendisk_init+0x1b9>
			1359: R_386_PC32	printk
    135d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1362:	eb e5                	jmp    1349 <gendisk_init+0x1a9>
    1364:	c7 04 24 00 03 00 00 	movl   $0x300,(%esp)
			1367: R_386_32	.rodata.str1.32
    136b:	eb eb                	jmp    1358 <gendisk_init+0x1b8>
    136d:	8d 76 00             	lea    0x0(%esi),%esi
    1370:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)
    1377:	8b 45 04             	mov    0x4(%ebp),%eax
    137a:	89 04 24             	mov    %eax,(%esp)
    137d:	e8 fc ff ff ff       	call   137e <gendisk_init+0x1de>
			137e: R_386_PC32	del_gendisk
    1382:	8b 45 04             	mov    0x4(%ebp),%eax
    1385:	89 04 24             	mov    %eax,(%esp)
    1388:	e8 fc ff ff ff       	call   1389 <gendisk_init+0x1e9>
			1389: R_386_PC32	put_disk
    138d:	8b 83 a4 00 00 00    	mov    0xa4(%ebx),%eax
    1393:	89 04 24             	mov    %eax,(%esp)
    1396:	e8 fc ff ff ff       	call   1397 <gendisk_init+0x1f7>
			1397: R_386_PC32	blk_cleanup_queue
    139b:	e9 7d fe ff ff       	jmp    121d <gendisk_init+0x7d>
    13a0:	c7 04 24 40 03 00 00 	movl   $0x340,(%esp)
			13a3: R_386_32	.rodata.str1.32
    13a7:	eb af                	jmp    1358 <gendisk_init+0x1b8>
    13a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

000013b0 <ti_atoi>:
    13b0:	55                   	push   %ebp
    13b1:	31 ed                	xor    %ebp,%ebp
    13b3:	57                   	push   %edi
    13b4:	56                   	push   %esi
    13b5:	53                   	push   %ebx
    13b6:	83 ec 04             	sub    $0x4,%esp
    13b9:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    13bd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
    13c4:	0f b6 13             	movzbl (%ebx),%edx
    13c7:	84 d2                	test   %dl,%dl
    13c9:	74 1e                	je     13e9 <ti_atoi+0x39>
    13cb:	90                   	nop    
    13cc:	8d 74 26 00          	lea    0x0(%esi),%esi
    13d0:	0f b6 c2             	movzbl %dl,%eax
    13d3:	f6 80 00 00 00 00 04 	testb  $0x4,0x0(%eax)
			13d5: R_386_32	_ctype
    13da:	75 0d                	jne    13e9 <ti_atoi+0x39>
    13dc:	80 fa 2d             	cmp    $0x2d,%dl
    13df:	74 5d                	je     143e <ti_atoi+0x8e>
    13e1:	43                   	inc    %ebx
    13e2:	0f b6 13             	movzbl (%ebx),%edx
    13e5:	84 d2                	test   %dl,%dl
    13e7:	75 e7                	jne    13d0 <ti_atoi+0x20>
    13e9:	80 fa 2d             	cmp    $0x2d,%dl
    13ec:	74 50                	je     143e <ti_atoi+0x8e>
    13ee:	31 c0                	xor    %eax,%eax
    13f0:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    13f5:	89 df                	mov    %ebx,%edi
    13f7:	f2 ae                	repnz scas %es:(%edi),%al
    13f9:	f7 d1                	not    %ecx
    13fb:	49                   	dec    %ecx
    13fc:	89 ce                	mov    %ecx,%esi
    13fe:	31 c9                	xor    %ecx,%ecx
    1400:	39 f1                	cmp    %esi,%ecx
    1402:	7d 2c                	jge    1430 <ti_atoi+0x80>
    1404:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    140a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
    1410:	0f b6 14 19          	movzbl (%ecx,%ebx,1),%edx
    1414:	0f b6 c2             	movzbl %dl,%eax
    1417:	f6 80 00 00 00 00 04 	testb  $0x4,0x0(%eax)
			1419: R_386_32	_ctype
    141e:	74 10                	je     1430 <ti_atoi+0x80>
    1420:	41                   	inc    %ecx
    1421:	0f be d2             	movsbl %dl,%edx
    1424:	8d 44 ad 00          	lea    0x0(%ebp,%ebp,4),%eax
    1428:	39 f1                	cmp    %esi,%ecx
    142a:	8d 6c 42 d0          	lea    0xffffffd0(%edx,%eax,2),%ebp
    142e:	7c e0                	jl     1410 <ti_atoi+0x60>
    1430:	8b 34 24             	mov    (%esp),%esi
    1433:	5b                   	pop    %ebx
    1434:	0f af ee             	imul   %esi,%ebp
    1437:	5b                   	pop    %ebx
    1438:	89 e8                	mov    %ebp,%eax
    143a:	5e                   	pop    %esi
    143b:	5f                   	pop    %edi
    143c:	5d                   	pop    %ebp
    143d:	c3                   	ret    
    143e:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
    1445:	43                   	inc    %ebx
    1446:	eb a6                	jmp    13ee <ti_atoi+0x3e>
    1448:	90                   	nop    
    1449:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00001450 <proc_write_daemonpid>:
    1450:	56                   	push   %esi
    1451:	31 c0                	xor    %eax,%eax
    1453:	53                   	push   %ebx
    1454:	83 ec 1c             	sub    $0x1c,%esp
    1457:	8b 54 24 30          	mov    0x30(%esp),%edx
    145b:	90                   	nop    
    145c:	8d 74 26 00          	lea    0x0(%esi),%esi
    1460:	c6 44 04 0c 00       	movb   $0x0,0xc(%esp,%eax,1)
    1465:	40                   	inc    %eax
    1466:	83 f8 09             	cmp    $0x9,%eax
    1469:	7e f5                	jle    1460 <proc_write_daemonpid+0x10>
    146b:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    146f:	83 fa 0b             	cmp    $0xb,%edx
    1472:	be 0a 00 00 00       	mov    $0xa,%esi
    1477:	0f 42 f2             	cmovb  %edx,%esi
    147a:	8d 5c 24 0c          	lea    0xc(%esp),%ebx
    147e:	89 74 24 08          	mov    %esi,0x8(%esp)
    1482:	89 44 24 04          	mov    %eax,0x4(%esp)
    1486:	89 1c 24             	mov    %ebx,(%esp)
    1489:	e8 fc ff ff ff       	call   148a <proc_write_daemonpid+0x3a>
			148a: R_386_PC32	copy_from_user
    148e:	85 c0                	test   %eax,%eax
    1490:	ba f2 ff ff ff       	mov    $0xfffffff2,%edx
    1495:	75 28                	jne    14bf <proc_write_daemonpid+0x6f>
    1497:	89 1c 24             	mov    %ebx,(%esp)
    149a:	e8 fc ff ff ff       	call   149b <proc_write_daemonpid+0x4b>
			149b: R_386_PC32	ti_atoi
    149f:	a3 00 00 00 00       	mov    %eax,0x0
			14a0: R_386_32	daemon_pid
    14a4:	89 44 24 08          	mov    %eax,0x8(%esp)
    14a8:	b8 81 00 00 00       	mov    $0x81,%eax
			14a9: R_386_32	.rodata
    14ad:	89 44 24 04          	mov    %eax,0x4(%esp)
    14b1:	c7 04 24 80 03 00 00 	movl   $0x380,(%esp)
			14b4: R_386_32	.rodata.str1.32
    14b8:	e8 fc ff ff ff       	call   14b9 <proc_write_daemonpid+0x69>
			14b9: R_386_PC32	printk
    14bd:	89 f2                	mov    %esi,%edx
    14bf:	83 c4 1c             	add    $0x1c,%esp
    14c2:	89 d0                	mov    %edx,%eax
    14c4:	5b                   	pop    %ebx
    14c5:	5e                   	pop    %esi
    14c6:	c3                   	ret    
    14c7:	89 f6                	mov    %esi,%esi
    14c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000014d0 <proc_read_cardstatus>:
    14d0:	0f b6 05 00 00 00 00 	movzbl 0x0,%eax
			14d3: R_386_32	cardstatus
    14d7:	89 44 24 0c          	mov    %eax,0xc(%esp)
    14db:	b8 30 00 00 00       	mov    $0x30,%eax
			14dc: R_386_32	.rodata.str1.1
    14e0:	89 44 24 08          	mov    %eax,0x8(%esp)
    14e4:	e9 fc ff ff ff       	jmp    14e5 <proc_read_cardstatus+0x15>
			14e5: R_386_PC32	sprintf
    14e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

000014f0 <tifm_drv_init>:
    14f0:	53                   	push   %ebx
    14f1:	83 ec 0c             	sub    $0xc,%esp
    14f4:	ba 20 00 00 00       	mov    $0x20,%edx
			14f5: R_386_32	.data
    14f9:	89 54 24 04          	mov    %edx,0x4(%esp)
    14fd:	31 db                	xor    %ebx,%ebx
    14ff:	c7 04 24 33 00 00 00 	movl   $0x33,(%esp)
			1502: R_386_32	.rodata.str1.1
    1506:	e8 fc ff ff ff       	call   1507 <tifm_drv_init+0x17>
			1507: R_386_PC32	printk
    150b:	ff 05 00 00 00 00    	incl   0x0
			150d: R_386_32	ModuleLoadCnt
    1511:	eb 0d                	jmp    1520 <tifm_drv_init+0x30>
    1513:	90                   	nop    
    1514:	90                   	nop    
    1515:	90                   	nop    
    1516:	90                   	nop    
    1517:	90                   	nop    
    1518:	90                   	nop    
    1519:	90                   	nop    
    151a:	90                   	nop    
    151b:	90                   	nop    
    151c:	90                   	nop    
    151d:	90                   	nop    
    151e:	90                   	nop    
    151f:	90                   	nop    
    1520:	31 c0                	xor    %eax,%eax
    1522:	89 04 9d 20 00 00 00 	mov    %eax,0x20(,%ebx,4)
			1525: R_386_32	.bss
    1529:	43                   	inc    %ebx
    152a:	83 fb 0f             	cmp    $0xf,%ebx
    152d:	7e f1                	jle    1520 <tifm_drv_init+0x30>
    152f:	e8 bc ee ff ff       	call   3f0 <tifm_pci_detect>
    1534:	85 c0                	test   %eax,%eax
    1536:	89 c2                	mov    %eax,%edx
    1538:	0f 85 a4 00 00 00    	jne    15e2 <tifm_drv_init+0xf2>
    153e:	31 db                	xor    %ebx,%ebx
    1540:	3b 05 18 00 00 00    	cmp    0x18,%eax
			1542: R_386_32	.bss
    1546:	7d 26                	jge    156e <tifm_drv_init+0x7e>
    1548:	90                   	nop    
    1549:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    1550:	8b 04 9d 20 00 00 00 	mov    0x20(,%ebx,4),%eax
			1553: R_386_32	.bss
    1557:	89 04 24             	mov    %eax,(%esp)
    155a:	e8 01 f0 ff ff       	call   560 <tifm_cntrl_init>
    155f:	85 c0                	test   %eax,%eax
    1561:	89 c2                	mov    %eax,%edx
    1563:	75 7d                	jne    15e2 <tifm_drv_init+0xf2>
    1565:	43                   	inc    %ebx
    1566:	3b 1d 18 00 00 00    	cmp    0x18,%ebx
			1568: R_386_32	.bss
    156c:	7c e2                	jl     1550 <tifm_drv_init+0x60>
    156e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    1575:	b8 00 00 00 00       	mov    $0x0,%eax
			1576: R_386_32	.rodata.str1.1
    157a:	89 44 24 04          	mov    %eax,0x4(%esp)
    157e:	e8 fc ff ff ff       	call   157f <tifm_drv_init+0x8f>
			157f: R_386_PC32	register_blkdev
    1583:	a3 14 00 00 00       	mov    %eax,0x14
			1584: R_386_32	.bss
    1588:	85 c0                	test   %eax,%eax
    158a:	7e 5d                	jle    15e9 <tifm_drv_init+0xf9>
    158c:	c7 04 24 37 00 00 00 	movl   $0x37,(%esp)
			158f: R_386_32	.rodata.str1.1
    1593:	31 c0                	xor    %eax,%eax
    1595:	89 44 24 08          	mov    %eax,0x8(%esp)
    1599:	b8 b6 01 00 00       	mov    $0x1b6,%eax
    159e:	89 44 24 04          	mov    %eax,0x4(%esp)
    15a2:	e8 fc ff ff ff       	call   15a3 <tifm_drv_init+0xb3>
			15a3: R_386_PC32	create_proc_entry
    15a7:	a3 1c 00 00 00       	mov    %eax,0x1c
			15a8: R_386_32	.bss
    15ac:	85 c0                	test   %eax,%eax
    15ae:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
    15b3:	74 2d                	je     15e2 <tifm_drv_init+0xf2>
    15b5:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)
    15bc:	31 d2                	xor    %edx,%edx
    15be:	a1 1c 00 00 00       	mov    0x1c,%eax
			15bf: R_386_32	.bss
    15c3:	c7 40 3c d0 14 00 00 	movl   $0x14d0,0x3c(%eax)
			15c6: R_386_32	.text
    15ca:	a1 1c 00 00 00       	mov    0x1c,%eax
			15cb: R_386_32	.bss
    15cf:	c7 40 40 50 14 00 00 	movl   $0x1450,0x40(%eax)
			15d2: R_386_32	.text
    15d6:	a1 1c 00 00 00       	mov    0x1c,%eax
			15d7: R_386_32	.bss
    15db:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
			15de: R_386_32	__this_module
    15e2:	83 c4 0c             	add    $0xc,%esp
    15e5:	89 d0                	mov    %edx,%eax
    15e7:	5b                   	pop    %ebx
    15e8:	c3                   	ret    
    15e9:	c7 04 24 c0 03 00 00 	movl   $0x3c0,(%esp)
			15ec: R_386_32	.rodata.str1.32
    15f0:	e8 fc ff ff ff       	call   15f1 <tifm_drv_init+0x101>
			15f1: R_386_PC32	printk
    15f5:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
    15fa:	eb e6                	jmp    15e2 <tifm_drv_init+0xf2>
    15fc:	8d 74 26 00          	lea    0x0(%esi),%esi

00001600 <tifm_drv_exit>:
    1600:	57                   	push   %edi
    1601:	31 ff                	xor    %edi,%edi
    1603:	56                   	push   %esi
    1604:	53                   	push   %ebx
    1605:	83 ec 08             	sub    $0x8,%esp
    1608:	90                   	nop    
    1609:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    1610:	8b 34 bd 20 00 00 00 	mov    0x20(,%edi,4),%esi
			1613: R_386_32	.bss
    1617:	85 f6                	test   %esi,%esi
    1619:	74 22                	je     163d <tifm_drv_exit+0x3d>
    161b:	31 db                	xor    %ebx,%ebx
    161d:	8d 76 00             	lea    0x0(%esi),%esi
    1620:	89 34 24             	mov    %esi,(%esp)
    1623:	0f b6 c3             	movzbl %bl,%eax
    1626:	43                   	inc    %ebx
    1627:	89 44 24 04          	mov    %eax,0x4(%esp)
    162b:	e8 fc ff ff ff       	call   162c <tifm_drv_exit+0x2c>
			162c: R_386_PC32	gendisk_free
    1630:	83 fb 03             	cmp    $0x3,%ebx
    1633:	7e eb                	jle    1620 <tifm_drv_exit+0x20>
    1635:	89 34 24             	mov    %esi,(%esp)
    1638:	e8 e3 ec ff ff       	call   320 <tifm_dev_free>
    163d:	47                   	inc    %edi
    163e:	83 ff 0f             	cmp    $0xf,%edi
    1641:	7e cd                	jle    1610 <tifm_drv_exit+0x10>
    1643:	c7 04 24 37 00 00 00 	movl   $0x37,(%esp)
			1646: R_386_32	.rodata.str1.1
    164a:	31 f6                	xor    %esi,%esi
    164c:	bb 00 00 00 00       	mov    $0x0,%ebx
			164d: R_386_32	.rodata.str1.1
    1651:	89 74 24 04          	mov    %esi,0x4(%esp)
    1655:	e8 fc ff ff ff       	call   1656 <tifm_drv_exit+0x56>
			1656: R_386_PC32	remove_proc_entry
    165a:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    165e:	a1 14 00 00 00       	mov    0x14,%eax
			165f: R_386_32	.bss
    1663:	89 04 24             	mov    %eax,(%esp)
    1666:	e8 fc ff ff ff       	call   1667 <tifm_drv_exit+0x67>
			1667: R_386_PC32	unregister_blkdev
    166b:	c7 04 24 3d 00 00 00 	movl   $0x3d,(%esp)
			166e: R_386_32	.rodata.str1.1
    1672:	b9 20 00 00 00       	mov    $0x20,%ecx
			1673: R_386_32	.data
    1677:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    167b:	e8 fc ff ff ff       	call   167c <tifm_drv_exit+0x7c>
			167c: R_386_PC32	printk
    1680:	83 c4 08             	add    $0x8,%esp
    1683:	5b                   	pop    %ebx
    1684:	5e                   	pop    %esi
    1685:	5f                   	pop    %edi
    1686:	c3                   	ret    
    1687:	89 f6                	mov    %esi,%esi
    1689:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00001690 <ti7x20_suspend>:
    1690:	83 ec 08             	sub    $0x8,%esp
    1693:	c7 04 24 00 04 00 00 	movl   $0x400,(%esp)
			1696: R_386_32	.rodata.str1.32
    169a:	e8 fc ff ff ff       	call   169b <ti7x20_suspend+0xb>
			169b: R_386_PC32	printk
    169f:	a1 20 00 00 00       	mov    0x20,%eax
			16a0: R_386_32	.bss
    16a4:	8b 90 a0 00 00 00    	mov    0xa0(%eax),%edx
    16aa:	c6 42 08 01          	movb   $0x1,0x8(%edx)
    16ae:	ba 00 00 00 80       	mov    $0x80000000,%edx
    16b3:	89 54 24 04          	mov    %edx,0x4(%esp)
    16b7:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
    16bd:	89 04 24             	mov    %eax,(%esp)
    16c0:	e8 fc ff ff ff       	call   16c1 <ti7x20_suspend+0x31>
			16c1: R_386_PC32	INTERRUPT_ENABLE_CLEAR_FM
    16c5:	31 c0                	xor    %eax,%eax
    16c7:	83 c4 08             	add    $0x8,%esp
    16ca:	c3                   	ret    
    16cb:	90                   	nop    
    16cc:	8d 74 26 00          	lea    0x0(%esi),%esi

000016d0 <ti7x20_resume>:
    16d0:	56                   	push   %esi
    16d1:	53                   	push   %ebx
    16d2:	83 ec 0c             	sub    $0xc,%esp
    16d5:	c7 04 24 60 04 00 00 	movl   $0x460,(%esp)
			16d8: R_386_32	.rodata.str1.32
    16dc:	e8 fc ff ff ff       	call   16dd <ti7x20_resume+0xd>
			16dd: R_386_PC32	printk
    16e1:	8b 35 20 00 00 00    	mov    0x20,%esi
			16e3: R_386_32	.bss
    16e7:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    16ed:	c6 40 08 00          	movb   $0x0,0x8(%eax)
    16f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    16f6:	89 44 24 04          	mov    %eax,0x4(%esp)
    16fa:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    1700:	89 04 24             	mov    %eax,(%esp)
    1703:	e8 fc ff ff ff       	call   1704 <ti7x20_resume+0x34>
			1704: R_386_PC32	INTERRUPT_CLEAR_FM
    1708:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    170d:	89 44 24 04          	mov    %eax,0x4(%esp)
    1711:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    1717:	89 04 24             	mov    %eax,(%esp)
    171a:	e8 fc ff ff ff       	call   171b <ti7x20_resume+0x4b>
			171b: R_386_PC32	INTERRUPT_ENABLE_CLEAR_FM
    171f:	b8 00 00 00 80       	mov    $0x80000000,%eax
    1724:	89 44 24 04          	mov    %eax,0x4(%esp)
    1728:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    172e:	89 04 24             	mov    %eax,(%esp)
    1731:	e8 fc ff ff ff       	call   1732 <ti7x20_resume+0x62>
			1732: R_386_PC32	INTERRUPT_ENABLE_SET_FM
    1736:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
    173b:	90                   	nop    
    173c:	8d 74 26 00          	lea    0x0(%esi),%esi
    1740:	0f b6 5c 24 0b       	movzbl 0xb(%esp),%ebx
    1745:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    174b:	8b 44 98 0c          	mov    0xc(%eax,%ebx,4),%eax
    174f:	85 c0                	test   %eax,%eax
    1751:	75 2d                	jne    1780 <ti7x20_resume+0xb0>
    1753:	fe 44 24 0b          	incb   0xb(%esp)
    1757:	80 7c 24 0b 03       	cmpb   $0x3,0xb(%esp)
    175c:	76 e2                	jbe    1740 <ti7x20_resume+0x70>
    175e:	b9 0e 00 00 80       	mov    $0x8000000e,%ecx
    1763:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    1767:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    176d:	89 04 24             	mov    %eax,(%esp)
    1770:	e8 fc ff ff ff       	call   1771 <ti7x20_resume+0xa1>
			1771: R_386_PC32	INTERRUPT_ENABLE_SET_FM
    1775:	31 c0                	xor    %eax,%eax
    1777:	83 c4 0c             	add    $0xc,%esp
    177a:	5b                   	pop    %ebx
    177b:	5e                   	pop    %esi
    177c:	c3                   	ret    
    177d:	8d 76 00             	lea    0x0(%esi),%esi
    1780:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1784:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    178a:	89 04 24             	mov    %eax,(%esp)
    178d:	e8 fc ff ff ff       	call   178e <ti7x20_resume+0xbe>
			178e: R_386_PC32	CardDetectionFM
    1792:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1796:	89 34 24             	mov    %esi,(%esp)
    1799:	e8 fc ff ff ff       	call   179a <ti7x20_resume+0xca>
			179a: R_386_PC32	InitializeCardFM
    179e:	3c a1                	cmp    $0xa1,%al
    17a0:	74 0e                	je     17b0 <ti7x20_resume+0xe0>
    17a2:	84 c0                	test   %al,%al
    17a4:	74 ad                	je     1753 <ti7x20_resume+0x83>
    17a6:	89 34 24             	mov    %esi,(%esp)
    17a9:	e8 fc ff ff ff       	call   17aa <ti7x20_resume+0xda>
			17aa: R_386_PC32	RemoveDevice
    17ae:	eb a3                	jmp    1753 <ti7x20_resume+0x83>
    17b0:	31 c0                	xor    %eax,%eax
    17b2:	eb ee                	jmp    17a2 <ti7x20_resume+0xd2>
    17b4:	90                   	nop    
    17b5:	90                   	nop    
    17b6:	90                   	nop    
    17b7:	90                   	nop    
    17b8:	90                   	nop    
    17b9:	90                   	nop    
    17ba:	90                   	nop    
    17bb:	90                   	nop    
    17bc:	90                   	nop    
    17bd:	90                   	nop    
    17be:	90                   	nop    
    17bf:	90                   	nop    

000017c0 <GetSocketInfo>:
    17c0:	57                   	push   %edi
    17c1:	56                   	push   %esi
    17c2:	53                   	push   %ebx
    17c3:	8b 7c 24 10          	mov    0x10(%esp),%edi
    17c7:	31 db                	xor    %ebx,%ebx
    17c9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    17ce:	85 ff                	test   %edi,%edi
    17d0:	74 45                	je     1817 <GetSocketInfo+0x57>
    17d2:	8b 47 34             	mov    0x34(%edi),%eax
    17d5:	8b 70 04             	mov    0x4(%eax),%esi
    17d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    17dd:	83 fe ff             	cmp    $0xffffffff,%esi
    17e0:	74 35                	je     1817 <GetSocketInfo+0x57>
    17e2:	b9 0f 00 00 00       	mov    $0xf,%ecx
    17e7:	ba 06 00 00 00       	mov    $0x6,%edx
    17ec:	8d 74 26 00          	lea    0x0(%esi),%esi
    17f0:	85 f1                	test   %esi,%ecx
    17f2:	8d 43 01             	lea    0x1(%ebx),%eax
    17f5:	0f 45 d8             	cmovne %eax,%ebx
    17f8:	c1 e1 04             	shl    $0x4,%ecx
    17fb:	4a                   	dec    %edx
    17fc:	79 f2                	jns    17f0 <GetSocketInfo+0x30>
    17fe:	88 5f 38             	mov    %bl,0x38(%edi)
    1801:	85 db                	test   %ebx,%ebx
    1803:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1808:	74 0d                	je     1817 <GetSocketInfo+0x57>
    180a:	31 d2                	xor    %edx,%edx
    180c:	39 da                	cmp    %ebx,%edx
    180e:	7d 05                	jge    1815 <GetSocketInfo+0x55>
    1810:	42                   	inc    %edx
    1811:	39 da                	cmp    %ebx,%edx
    1813:	7c fb                	jl     1810 <GetSocketInfo+0x50>
    1815:	31 c0                	xor    %eax,%eax
    1817:	5b                   	pop    %ebx
    1818:	5e                   	pop    %esi
    1819:	5f                   	pop    %edi
    181a:	c3                   	ret    
    181b:	90                   	nop    
    181c:	8d 74 26 00          	lea    0x0(%esi),%esi

00001820 <MapSocketRegisters>:
    1820:	55                   	push   %ebp
    1821:	57                   	push   %edi
    1822:	56                   	push   %esi
    1823:	53                   	push   %ebx
    1824:	83 ec 1c             	sub    $0x1c,%esp
    1827:	8b 4c 24 30          	mov    0x30(%esp),%ecx
    182b:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    1830:	85 c9                	test   %ecx,%ecx
    1832:	0f 84 82 00 00 00    	je     18ba <MapSocketRegisters+0x9a>
    1838:	31 c0                	xor    %eax,%eax
    183a:	89 44 24 08          	mov    %eax,0x8(%esp)
    183e:	0f b6 41 38          	movzbl 0x38(%ecx),%eax
    1842:	39 44 24 08          	cmp    %eax,0x8(%esp)
    1846:	7d 70                	jge    18b8 <MapSocketRegisters+0x98>
    1848:	89 44 24 04          	mov    %eax,0x4(%esp)
    184c:	bd 51 00 00 00       	mov    $0x51,%ebp
			184d: R_386_32	.rodata.str1.1
    1851:	bb 03 00 00 00       	mov    $0x3,%ebx
    1856:	8b 49 34             	mov    0x34(%ecx),%ecx
    1859:	89 0c 24             	mov    %ecx,(%esp)
    185c:	8d 74 26 00          	lea    0x0(%esi),%esi
    1860:	8b 14 24             	mov    (%esp),%edx
    1863:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax
    1869:	ba 03 00 00 00       	mov    $0x3,%edx
    186e:	89 f6                	mov    %esi,%esi
    1870:	88 44 14 0c          	mov    %al,0xc(%esp,%edx,1)
    1874:	c1 e8 08             	shr    $0x8,%eax
    1877:	4a                   	dec    %edx
    1878:	79 f6                	jns    1870 <MapSocketRegisters+0x50>
    187a:	c6 44 24 10 00       	movb   $0x0,0x10(%esp)
    187f:	8d 74 24 0c          	lea    0xc(%esp),%esi
    1883:	89 ef                	mov    %ebp,%edi
    1885:	89 d9                	mov    %ebx,%ecx
    1887:	49                   	dec    %ecx
    1888:	78 08                	js     1892 <MapSocketRegisters+0x72>
    188a:	ac                   	lods   %ds:(%esi),%al
    188b:	ae                   	scas   %es:(%edi),%al
    188c:	75 08                	jne    1896 <MapSocketRegisters+0x76>
    188e:	84 c0                	test   %al,%al
    1890:	75 f5                	jne    1887 <MapSocketRegisters+0x67>
    1892:	31 c0                	xor    %eax,%eax
    1894:	eb 04                	jmp    189a <MapSocketRegisters+0x7a>
    1896:	19 c0                	sbb    %eax,%eax
    1898:	0c 01                	or     $0x1,%al
    189a:	85 c0                	test   %eax,%eax
    189c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    18a1:	75 17                	jne    18ba <MapSocketRegisters+0x9a>
    18a3:	ff 44 24 08          	incl   0x8(%esp)
    18a7:	8b 44 24 04          	mov    0x4(%esp),%eax
    18ab:	81 04 24 00 04 00 00 	addl   $0x400,(%esp)
    18b2:	39 44 24 08          	cmp    %eax,0x8(%esp)
    18b6:	7c a8                	jl     1860 <MapSocketRegisters+0x40>
    18b8:	31 d2                	xor    %edx,%edx
    18ba:	83 c4 1c             	add    $0x1c,%esp
    18bd:	89 d0                	mov    %edx,%eax
    18bf:	5b                   	pop    %ebx
    18c0:	5e                   	pop    %esi
    18c1:	5f                   	pop    %edi
    18c2:	5d                   	pop    %ebp
    18c3:	c3                   	ret    
    18c4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    18ca:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000018d0 <InitializeFM>:
    18d0:	83 ec 0c             	sub    $0xc,%esp
    18d3:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    18d7:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    18db:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    18e0:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    18e4:	89 1c 24             	mov    %ebx,(%esp)
    18e7:	e8 fc ff ff ff       	call   18e8 <InitializeFM+0x18>
			18e8: R_386_PC32	INTERRUPT_ENABLE_CLEAR_FM
    18ec:	89 1c 24             	mov    %ebx,(%esp)
    18ef:	ba 0e 00 00 80       	mov    $0x8000000e,%edx
    18f4:	89 54 24 04          	mov    %edx,0x4(%esp)
    18f8:	e8 fc ff ff ff       	call   18f9 <InitializeFM+0x29>
			18f9: R_386_PC32	INTERRUPT_ENABLE_SET_FM
    18fd:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    1901:	83 c4 0c             	add    $0xc,%esp
    1904:	c3                   	ret    
    1905:	8d 74 26 00          	lea    0x0(%esi),%esi
    1909:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00001910 <CSocket_destroy>:
    1910:	8b 44 24 04          	mov    0x4(%esp),%eax
    1914:	85 c0                	test   %eax,%eax
    1916:	74 08                	je     1920 <CSocket_destroy+0x10>
    1918:	e9 fc ff ff ff       	jmp    1919 <CSocket_destroy+0x9>
			1919: R_386_PC32	kfree
    191d:	8d 76 00             	lea    0x0(%esi),%esi
    1920:	c3                   	ret    
    1921:	eb 0d                	jmp    1930 <CFlash_destroy>
    1923:	90                   	nop    
    1924:	90                   	nop    
    1925:	90                   	nop    
    1926:	90                   	nop    
    1927:	90                   	nop    
    1928:	90                   	nop    
    1929:	90                   	nop    
    192a:	90                   	nop    
    192b:	90                   	nop    
    192c:	90                   	nop    
    192d:	90                   	nop    
    192e:	90                   	nop    
    192f:	90                   	nop    

00001930 <CFlash_destroy>:
    1930:	83 ec 08             	sub    $0x8,%esp
    1933:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1937:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    193b:	85 db                	test   %ebx,%ebx
    193d:	74 21                	je     1960 <CFlash_destroy+0x30>
    193f:	8b 43 28             	mov    0x28(%ebx),%eax
    1942:	89 04 24             	mov    %eax,(%esp)
    1945:	e8 c6 ff ff ff       	call   1910 <CSocket_destroy>
    194a:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    194e:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    1952:	83 c4 08             	add    $0x8,%esp
    1955:	e9 fc ff ff ff       	jmp    1956 <CFlash_destroy+0x26>
			1956: R_386_PC32	kfree
    195a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1960:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    1964:	83 c4 08             	add    $0x8,%esp
    1967:	c3                   	ret    
    1968:	90                   	nop    
    1969:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00001970 <CARD_destroy>:
    1970:	83 ec 0c             	sub    $0xc,%esp
    1973:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    1977:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    197b:	85 db                	test   %ebx,%ebx
    197d:	0f 84 8e 00 00 00    	je     1a11 <CARD_destroy+0xa1>
    1983:	0f b6 43 05          	movzbl 0x5(%ebx),%eax
    1987:	0f b6 d0             	movzbl %al,%edx
    198a:	83 fa 03             	cmp    $0x3,%edx
    198d:	74 72                	je     1a01 <CARD_destroy+0x91>
    198f:	7f 46                	jg     19d7 <CARD_destroy+0x67>
    1991:	83 fa 02             	cmp    $0x2,%edx
    1994:	74 31                	je     19c7 <CARD_destroy+0x57>
    1996:	c7 04 24 c0 04 00 00 	movl   $0x4c0,(%esp)
			1999: R_386_32	.rodata.str1.32
    199d:	0f b6 c0             	movzbl %al,%eax
    19a0:	89 44 24 04          	mov    %eax,0x4(%esp)
    19a4:	e8 fc ff ff ff       	call   19a5 <CARD_destroy+0x35>
			19a5: R_386_PC32	printk
    19a9:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    19af:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
    19b3:	c6 43 05 00          	movb   $0x0,0x5(%ebx)
    19b7:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    19bb:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    19bf:	83 c4 0c             	add    $0xc,%esp
    19c2:	e9 fc ff ff ff       	jmp    19c3 <CARD_destroy+0x53>
			19c3: R_386_PC32	kfree
    19c7:	8b 03                	mov    (%ebx),%eax
    19c9:	85 c0                	test   %eax,%eax
    19cb:	74 dc                	je     19a9 <CARD_destroy+0x39>
    19cd:	89 04 24             	mov    %eax,(%esp)
    19d0:	e8 fc ff ff ff       	call   19d1 <CARD_destroy+0x61>
			19d1: R_386_PC32	CMSTICK_destroy
    19d5:	eb d2                	jmp    19a9 <CARD_destroy+0x39>
    19d7:	83 fa 12             	cmp    $0x12,%edx
    19da:	74 15                	je     19f1 <CARD_destroy+0x81>
    19dc:	83 fa 22             	cmp    $0x22,%edx
    19df:	75 b5                	jne    1996 <CARD_destroy+0x26>
    19e1:	8b 03                	mov    (%ebx),%eax
    19e3:	85 c0                	test   %eax,%eax
    19e5:	74 c2                	je     19a9 <CARD_destroy+0x39>
    19e7:	89 04 24             	mov    %eax,(%esp)
    19ea:	e8 fc ff ff ff       	call   19eb <CARD_destroy+0x7b>
			19eb: R_386_PC32	CMSPRO_destroy
    19ef:	eb b8                	jmp    19a9 <CARD_destroy+0x39>
    19f1:	8b 03                	mov    (%ebx),%eax
    19f3:	85 c0                	test   %eax,%eax
    19f5:	74 b2                	je     19a9 <CARD_destroy+0x39>
    19f7:	89 04 24             	mov    %eax,(%esp)
    19fa:	e8 fc ff ff ff       	call   19fb <CARD_destroy+0x8b>
			19fb: R_386_PC32	CMS_destroy
    19ff:	eb a8                	jmp    19a9 <CARD_destroy+0x39>
    1a01:	8b 03                	mov    (%ebx),%eax
    1a03:	85 c0                	test   %eax,%eax
    1a05:	74 a2                	je     19a9 <CARD_destroy+0x39>
    1a07:	89 04 24             	mov    %eax,(%esp)
    1a0a:	e8 fc ff ff ff       	call   1a0b <CARD_destroy+0x9b>
			1a0b: R_386_PC32	CMMCSD_destroy
    1a0f:	eb 98                	jmp    19a9 <CARD_destroy+0x39>
    1a11:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    1a15:	83 c4 0c             	add    $0xc,%esp
    1a18:	c3                   	ret    
    1a19:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00001a20 <tifm_destroy>:
    1a20:	56                   	push   %esi
    1a21:	53                   	push   %ebx
    1a22:	83 ec 08             	sub    $0x8,%esp
    1a25:	8b 74 24 14          	mov    0x14(%esp),%esi
    1a29:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    1a2e:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1a32:	31 db                	xor    %ebx,%ebx
    1a34:	89 34 24             	mov    %esi,(%esp)
    1a37:	e8 fc ff ff ff       	call   1a38 <tifm_destroy+0x18>
			1a38: R_386_PC32	INTERRUPT_ENABLE_CLEAR_FM
    1a3c:	0f b6 56 09          	movzbl 0x9(%esi),%edx
    1a40:	38 d3                	cmp    %dl,%bl
    1a42:	73 29                	jae    1a6d <tifm_destroy+0x4d>
    1a44:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1a4a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
    1a50:	0f b6 c3             	movzbl %bl,%eax
    1a53:	8b 44 86 0c          	mov    0xc(%esi,%eax,4),%eax
    1a57:	85 c0                	test   %eax,%eax
    1a59:	74 0c                	je     1a67 <tifm_destroy+0x47>
    1a5b:	89 04 24             	mov    %eax,(%esp)
    1a5e:	e8 0d ff ff ff       	call   1970 <CARD_destroy>
    1a63:	0f b6 56 09          	movzbl 0x9(%esi),%edx
    1a67:	fe c3                	inc    %bl
    1a69:	38 d3                	cmp    %dl,%bl
    1a6b:	72 e3                	jb     1a50 <tifm_destroy+0x30>
    1a6d:	89 74 24 14          	mov    %esi,0x14(%esp)
    1a71:	83 c4 08             	add    $0x8,%esp
    1a74:	5b                   	pop    %ebx
    1a75:	5e                   	pop    %esi
    1a76:	e9 fc ff ff ff       	jmp    1a77 <tifm_destroy+0x57>
			1a77: R_386_PC32	kfree
    1a7b:	90                   	nop    
    1a7c:	8d 74 26 00          	lea    0x0(%esi),%esi

00001a80 <RemoveDevice>:
    1a80:	83 ec 08             	sub    $0x8,%esp
    1a83:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1a87:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    1a8b:	8b 83 a0 00 00 00    	mov    0xa0(%ebx),%eax
    1a91:	85 c0                	test   %eax,%eax
    1a93:	75 0b                	jne    1aa0 <RemoveDevice+0x20>
    1a95:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    1a99:	83 c4 08             	add    $0x8,%esp
    1a9c:	c3                   	ret    
    1a9d:	8d 76 00             	lea    0x0(%esi),%esi
    1aa0:	89 04 24             	mov    %eax,(%esp)
    1aa3:	e8 78 ff ff ff       	call   1a20 <tifm_destroy>
    1aa8:	31 c0                	xor    %eax,%eax
    1aaa:	89 83 a0 00 00 00    	mov    %eax,0xa0(%ebx)
    1ab0:	eb e3                	jmp    1a95 <RemoveDevice+0x15>
    1ab2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    1ab9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00001ac0 <tifm_init>:
    1ac0:	57                   	push   %edi
    1ac1:	56                   	push   %esi
    1ac2:	53                   	push   %ebx
    1ac3:	83 ec 0c             	sub    $0xc,%esp
    1ac6:	8b 74 24 20          	mov    0x20(%esp),%esi
    1aca:	89 f0                	mov    %esi,%eax
    1acc:	88 44 24 0b          	mov    %al,0xb(%esp)
    1ad0:	bb 20 00 00 00       	mov    $0x20,%ebx
    1ad5:	a1 04 00 00 00       	mov    0x4,%eax
			1ad6: R_386_32	malloc_sizes
    1ada:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1ade:	89 04 24             	mov    %eax,(%esp)
    1ae1:	e8 fc ff ff ff       	call   1ae2 <tifm_init+0x22>
			1ae2: R_386_PC32	kmem_cache_alloc
    1ae6:	89 c3                	mov    %eax,%ebx
    1ae8:	31 c0                	xor    %eax,%eax
    1aea:	85 db                	test   %ebx,%ebx
    1aec:	74 45                	je     1b33 <tifm_init+0x73>
    1aee:	b9 07 00 00 00       	mov    $0x7,%ecx
    1af3:	89 df                	mov    %ebx,%edi
    1af5:	f3 ab                	repz stos %eax,%es:(%edi)
    1af7:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    1afb:	31 d2                	xor    %edx,%edx
    1afd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    1b04:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
    1b08:	89 03                	mov    %eax,(%ebx)
    1b0a:	89 f0                	mov    %esi,%eax
    1b0c:	88 43 09             	mov    %al,0x9(%ebx)
    1b0f:	3a 54 24 0b          	cmp    0xb(%esp),%dl
    1b13:	73 1c                	jae    1b31 <tifm_init+0x71>
    1b15:	8d 74 26 00          	lea    0x0(%esi),%esi
    1b19:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    1b20:	0f b6 c2             	movzbl %dl,%eax
    1b23:	31 c9                	xor    %ecx,%ecx
    1b25:	fe c2                	inc    %dl
    1b27:	89 4c 83 0c          	mov    %ecx,0xc(%ebx,%eax,4)
    1b2b:	3a 54 24 0b          	cmp    0xb(%esp),%dl
    1b2f:	72 ef                	jb     1b20 <tifm_init+0x60>
    1b31:	89 d8                	mov    %ebx,%eax
    1b33:	83 c4 0c             	add    $0xc,%esp
    1b36:	5b                   	pop    %ebx
    1b37:	5e                   	pop    %esi
    1b38:	5f                   	pop    %edi
    1b39:	c3                   	ret    
    1b3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00001b40 <SetupDevice>:
    1b40:	83 ec 0c             	sub    $0xc,%esp
    1b43:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    1b47:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    1b4b:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    1b50:	85 db                	test   %ebx,%ebx
    1b52:	74 2c                	je     1b80 <SetupDevice+0x40>
    1b54:	0f b6 43 38          	movzbl 0x38(%ebx),%eax
    1b58:	89 44 24 04          	mov    %eax,0x4(%esp)
    1b5c:	8b 43 34             	mov    0x34(%ebx),%eax
    1b5f:	89 04 24             	mov    %eax,(%esp)
    1b62:	e8 59 ff ff ff       	call   1ac0 <tifm_init>
    1b67:	89 83 a0 00 00 00    	mov    %eax,0xa0(%ebx)
    1b6d:	85 c0                	test   %eax,%eax
    1b6f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    1b74:	74 0a                	je     1b80 <SetupDevice+0x40>
    1b76:	89 04 24             	mov    %eax,(%esp)
    1b79:	e8 52 fd ff ff       	call   18d0 <InitializeFM>
    1b7e:	31 d2                	xor    %edx,%edx
    1b80:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    1b84:	89 d0                	mov    %edx,%eax
    1b86:	83 c4 0c             	add    $0xc,%esp
    1b89:	c3                   	ret    
    1b8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00001b90 <GetFlashMediaType>:
    1b90:	c3                   	ret    
    1b91:	eb 0d                	jmp    1ba0 <SocketValidFM>
    1b93:	90                   	nop    
    1b94:	90                   	nop    
    1b95:	90                   	nop    
    1b96:	90                   	nop    
    1b97:	90                   	nop    
    1b98:	90                   	nop    
    1b99:	90                   	nop    
    1b9a:	90                   	nop    
    1b9b:	90                   	nop    
    1b9c:	90                   	nop    
    1b9d:	90                   	nop    
    1b9e:	90                   	nop    
    1b9f:	90                   	nop    

00001ba0 <SocketValidFM>:
    1ba0:	0f b6 44 24 08       	movzbl 0x8(%esp),%eax
    1ba5:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    1ba9:	ba ff 00 00 00       	mov    $0xff,%edx
    1bae:	85 c9                	test   %ecx,%ecx
    1bb0:	74 1f                	je     1bd1 <SocketValidFM+0x31>
    1bb2:	3c 03                	cmp    $0x3,%al
    1bb4:	ba a0 00 00 00       	mov    $0xa0,%edx
    1bb9:	77 16                	ja     1bd1 <SocketValidFM+0x31>
    1bbb:	0f b6 c0             	movzbl %al,%eax
    1bbe:	ba a1 00 00 00       	mov    $0xa1,%edx
    1bc3:	8b 44 81 0c          	mov    0xc(%ecx,%eax,4),%eax
    1bc7:	85 c0                	test   %eax,%eax
    1bc9:	b8 00 00 00 00       	mov    $0x0,%eax
    1bce:	0f 45 d0             	cmovne %eax,%edx
    1bd1:	89 d0                	mov    %edx,%eax
    1bd3:	c3                   	ret    
    1bd4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1bda:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00001be0 <GetFlashPointer>:
    1be0:	8b 54 24 04          	mov    0x4(%esp),%edx
    1be4:	31 c0                	xor    %eax,%eax
    1be6:	85 d2                	test   %edx,%edx
    1be8:	74 26                	je     1c10 <GetFlashPointer+0x30>
    1bea:	0f b6 42 05          	movzbl 0x5(%edx),%eax
    1bee:	83 f8 43             	cmp    $0x43,%eax
    1bf1:	77 4d                	ja     1c40 <GetFlashPointer+0x60>
    1bf3:	ff 24 85 98 00 00 00 	jmp    *0x98(,%eax,4)
			1bf6: R_386_32	.rodata
    1bfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1c00:	8b 12                	mov    (%edx),%edx
    1c02:	31 c0                	xor    %eax,%eax
    1c04:	85 d2                	test   %edx,%edx
    1c06:	74 08                	je     1c10 <GetFlashPointer+0x30>
    1c08:	8b 42 50             	mov    0x50(%edx),%eax
    1c0b:	c3                   	ret    
    1c0c:	8d 74 26 00          	lea    0x0(%esi),%esi
    1c10:	c3                   	ret    
    1c11:	8b 12                	mov    (%edx),%edx
    1c13:	31 c0                	xor    %eax,%eax
    1c15:	85 d2                	test   %edx,%edx
    1c17:	74 f7                	je     1c10 <GetFlashPointer+0x30>
    1c19:	8b 42 3c             	mov    0x3c(%edx),%eax
    1c1c:	c3                   	ret    
    1c1d:	8d 76 00             	lea    0x0(%esi),%esi
    1c20:	8b 12                	mov    (%edx),%edx
    1c22:	31 c0                	xor    %eax,%eax
    1c24:	85 d2                	test   %edx,%edx
    1c26:	74 e8                	je     1c10 <GetFlashPointer+0x30>
    1c28:	8b 82 64 44 00 00    	mov    0x4464(%edx),%eax
    1c2e:	8b 40 3c             	mov    0x3c(%eax),%eax
    1c31:	c3                   	ret    
    1c32:	8b 12                	mov    (%edx),%edx
    1c34:	31 c0                	xor    %eax,%eax
    1c36:	85 d2                	test   %edx,%edx
    1c38:	74 d6                	je     1c10 <GetFlashPointer+0x30>
    1c3a:	8b 42 04             	mov    0x4(%edx),%eax
    1c3d:	eb ef                	jmp    1c2e <GetFlashPointer+0x4e>
    1c3f:	90                   	nop    
    1c40:	31 c0                	xor    %eax,%eax
    1c42:	eb cc                	jmp    1c10 <GetFlashPointer+0x30>
    1c44:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1c4a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00001c50 <WriteProtectedFM>:
    1c50:	83 ec 10             	sub    $0x10,%esp
    1c53:	0f b6 44 24 18       	movzbl 0x18(%esp),%eax
    1c58:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    1c5c:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    1c60:	89 74 24 0c          	mov    %esi,0xc(%esp)
    1c64:	ba 01 00 00 00       	mov    $0x1,%edx
    1c69:	85 db                	test   %ebx,%ebx
    1c6b:	74 43                	je     1cb0 <WriteProtectedFM+0x60>
    1c6d:	89 1c 24             	mov    %ebx,(%esp)
    1c70:	0f b6 f0             	movzbl %al,%esi
    1c73:	89 74 24 04          	mov    %esi,0x4(%esp)
    1c77:	e8 24 ff ff ff       	call   1ba0 <SocketValidFM>
    1c7c:	84 c0                	test   %al,%al
    1c7e:	ba 01 00 00 00       	mov    $0x1,%edx
    1c83:	75 2b                	jne    1cb0 <WriteProtectedFM+0x60>
    1c85:	8b 44 b3 0c          	mov    0xc(%ebx,%esi,4),%eax
    1c89:	89 04 24             	mov    %eax,(%esp)
    1c8c:	e8 4f ff ff ff       	call   1be0 <GetFlashPointer>
    1c91:	85 c0                	test   %eax,%eax
    1c93:	ba 01 00 00 00       	mov    $0x1,%edx
    1c98:	74 16                	je     1cb0 <WriteProtectedFM+0x60>
    1c9a:	89 04 24             	mov    %eax,(%esp)
    1c9d:	e8 fc ff ff ff       	call   1c9e <WriteProtectedFM+0x4e>
			1c9e: R_386_PC32	WriteProtectedFlash
    1ca2:	0f b6 d0             	movzbl %al,%edx
    1ca5:	8d 74 26 00          	lea    0x0(%esi),%esi
    1ca9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    1cb0:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    1cb4:	89 d0                	mov    %edx,%eax
    1cb6:	8b 74 24 0c          	mov    0xc(%esp),%esi
    1cba:	83 c4 10             	add    $0x10,%esp
    1cbd:	c3                   	ret    
    1cbe:	89 f6                	mov    %esi,%esi

00001cc0 <GetFMDiskSize>:
    1cc0:	83 ec 14             	sub    $0x14,%esp
    1cc3:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
    1cc8:	89 74 24 0c          	mov    %esi,0xc(%esp)
    1ccc:	8b 74 24 18          	mov    0x18(%esp),%esi
    1cd0:	89 7c 24 10          	mov    %edi,0x10(%esp)
    1cd4:	8b 7c 24 20          	mov    0x20(%esp),%edi
    1cd8:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    1cdc:	85 f6                	test   %esi,%esi
    1cde:	74 50                	je     1d30 <GetFMDiskSize+0x70>
    1ce0:	85 ff                	test   %edi,%edi
    1ce2:	74 4c                	je     1d30 <GetFMDiskSize+0x70>
    1ce4:	89 34 24             	mov    %esi,(%esp)
    1ce7:	0f b6 d8             	movzbl %al,%ebx
    1cea:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1cee:	e8 ad fe ff ff       	call   1ba0 <SocketValidFM>
    1cf3:	84 c0                	test   %al,%al
    1cf5:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    1cfa:	75 20                	jne    1d1c <GetFMDiskSize+0x5c>
    1cfc:	8b 44 9e 0c          	mov    0xc(%esi,%ebx,4),%eax
    1d00:	89 04 24             	mov    %eax,(%esp)
    1d03:	e8 d8 fe ff ff       	call   1be0 <GetFlashPointer>
    1d08:	85 c0                	test   %eax,%eax
    1d0a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    1d0f:	74 0b                	je     1d1c <GetFMDiskSize+0x5c>
    1d11:	0f b7 40 10          	movzwl 0x10(%eax),%eax
    1d15:	c1 e0 0a             	shl    $0xa,%eax
    1d18:	89 07                	mov    %eax,(%edi)
    1d1a:	31 d2                	xor    %edx,%edx
    1d1c:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    1d20:	89 d0                	mov    %edx,%eax
    1d22:	8b 74 24 0c          	mov    0xc(%esp),%esi
    1d26:	8b 7c 24 10          	mov    0x10(%esp),%edi
    1d2a:	83 c4 14             	add    $0x14,%esp
    1d2d:	c3                   	ret    
    1d2e:	89 f6                	mov    %esi,%esi
    1d30:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    1d35:	eb e5                	jmp    1d1c <GetFMDiskSize+0x5c>
    1d37:	89 f6                	mov    %esi,%esi
    1d39:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00001d40 <GetFMGeometry>:
    1d40:	83 ec 14             	sub    $0x14,%esp
    1d43:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
    1d48:	89 74 24 0c          	mov    %esi,0xc(%esp)
    1d4c:	8b 74 24 18          	mov    0x18(%esp),%esi
    1d50:	89 7c 24 10          	mov    %edi,0x10(%esp)
    1d54:	8b 7c 24 20          	mov    0x20(%esp),%edi
    1d58:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    1d5c:	85 f6                	test   %esi,%esi
    1d5e:	74 63                	je     1dc3 <GetFMGeometry+0x83>
    1d60:	85 ff                	test   %edi,%edi
    1d62:	74 5f                	je     1dc3 <GetFMGeometry+0x83>
    1d64:	89 34 24             	mov    %esi,(%esp)
    1d67:	0f b6 d8             	movzbl %al,%ebx
    1d6a:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1d6e:	e8 2d fe ff ff       	call   1ba0 <SocketValidFM>
    1d73:	84 c0                	test   %al,%al
    1d75:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    1d7a:	75 35                	jne    1db1 <GetFMGeometry+0x71>
    1d7c:	8b 44 9e 0c          	mov    0xc(%esi,%ebx,4),%eax
    1d80:	89 04 24             	mov    %eax,(%esp)
    1d83:	e8 58 fe ff ff       	call   1be0 <GetFlashPointer>
    1d88:	85 c0                	test   %eax,%eax
    1d8a:	89 c2                	mov    %eax,%edx
    1d8c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    1d91:	74 1e                	je     1db1 <GetFMGeometry+0x71>
    1d93:	0f b7 40 12          	movzwl 0x12(%eax),%eax
    1d97:	31 c9                	xor    %ecx,%ecx
    1d99:	66 89 47 02          	mov    %ax,0x2(%edi)
    1d9d:	0f b6 42 14          	movzbl 0x14(%edx),%eax
    1da1:	88 07                	mov    %al,(%edi)
    1da3:	0f b6 42 16          	movzbl 0x16(%edx),%eax
    1da7:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
    1dae:	88 47 01             	mov    %al,0x1(%edi)
    1db1:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    1db5:	89 c8                	mov    %ecx,%eax
    1db7:	8b 74 24 0c          	mov    0xc(%esp),%esi
    1dbb:	8b 7c 24 10          	mov    0x10(%esp),%edi
    1dbf:	83 c4 14             	add    $0x14,%esp
    1dc2:	c3                   	ret    
    1dc3:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    1dc8:	eb e7                	jmp    1db1 <GetFMGeometry+0x71>
    1dca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00001dd0 <GetMediaIDSock>:
    1dd0:	8b 54 24 04          	mov    0x4(%esp),%edx
    1dd4:	b8 ff 00 00 00       	mov    $0xff,%eax
    1dd9:	85 d2                	test   %edx,%edx
    1ddb:	74 04                	je     1de1 <GetMediaIDSock+0x11>
    1ddd:	0f b6 42 04          	movzbl 0x4(%edx),%eax
    1de1:	c3                   	ret    
    1de2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    1de9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00001df0 <GetMediaIDFM>:
    1df0:	83 ec 10             	sub    $0x10,%esp
    1df3:	0f b6 54 24 18       	movzbl 0x18(%esp),%edx
    1df8:	89 74 24 0c          	mov    %esi,0xc(%esp)
    1dfc:	8b 74 24 14          	mov    0x14(%esp),%esi
    1e00:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    1e04:	b9 ff 00 00 00       	mov    $0xff,%ecx
    1e09:	85 f6                	test   %esi,%esi
    1e0b:	74 36                	je     1e43 <GetMediaIDFM+0x53>
    1e0d:	89 34 24             	mov    %esi,(%esp)
    1e10:	0f b6 da             	movzbl %dl,%ebx
    1e13:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1e17:	e8 84 fd ff ff       	call   1ba0 <SocketValidFM>
    1e1c:	84 c0                	test   %al,%al
    1e1e:	75 20                	jne    1e40 <GetMediaIDFM+0x50>
    1e20:	8b 44 9e 0c          	mov    0xc(%esi,%ebx,4),%eax
    1e24:	89 04 24             	mov    %eax,(%esp)
    1e27:	e8 b4 fd ff ff       	call   1be0 <GetFlashPointer>
    1e2c:	85 c0                	test   %eax,%eax
    1e2e:	b9 ff 00 00 00       	mov    $0xff,%ecx
    1e33:	74 0e                	je     1e43 <GetMediaIDFM+0x53>
    1e35:	8b 40 28             	mov    0x28(%eax),%eax
    1e38:	89 04 24             	mov    %eax,(%esp)
    1e3b:	e8 90 ff ff ff       	call   1dd0 <GetMediaIDSock>
    1e40:	0f b6 c8             	movzbl %al,%ecx
    1e43:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    1e47:	89 c8                	mov    %ecx,%eax
    1e49:	8b 74 24 0c          	mov    0xc(%esp),%esi
    1e4d:	83 c4 10             	add    $0x10,%esp
    1e50:	c3                   	ret    
    1e51:	eb 0d                	jmp    1e60 <LED>
    1e53:	90                   	nop    
    1e54:	90                   	nop    
    1e55:	90                   	nop    
    1e56:	90                   	nop    
    1e57:	90                   	nop    
    1e58:	90                   	nop    
    1e59:	90                   	nop    
    1e5a:	90                   	nop    
    1e5b:	90                   	nop    
    1e5c:	90                   	nop    
    1e5d:	90                   	nop    
    1e5e:	90                   	nop    
    1e5f:	90                   	nop    

00001e60 <LED>:
    1e60:	83 ec 14             	sub    $0x14,%esp
    1e63:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    1e67:	0f b6 5c 24 1c       	movzbl 0x1c(%esp),%ebx
    1e6c:	89 74 24 10          	mov    %esi,0x10(%esp)
    1e70:	8b 74 24 18          	mov    0x18(%esp),%esi
    1e74:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    1e78:	89 34 24             	mov    %esi,(%esp)
    1e7b:	e8 20 fd ff ff       	call   1ba0 <SocketValidFM>
    1e80:	84 c0                	test   %al,%al
    1e82:	74 0f                	je     1e93 <LED+0x33>
    1e84:	0f b6 c0             	movzbl %al,%eax
    1e87:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    1e8b:	8b 74 24 10          	mov    0x10(%esp),%esi
    1e8f:	83 c4 14             	add    $0x14,%esp
    1e92:	c3                   	ret    
    1e93:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    1e97:	8b 44 24 20          	mov    0x20(%esp),%eax
    1e9b:	89 34 24             	mov    %esi,(%esp)
    1e9e:	89 44 24 04          	mov    %eax,0x4(%esp)
    1ea2:	e8 fc ff ff ff       	call   1ea3 <LED+0x43>
			1ea3: R_386_PC32	Power
    1ea7:	31 c0                	xor    %eax,%eax
    1ea9:	eb dc                	jmp    1e87 <LED+0x27>
    1eab:	90                   	nop    
    1eac:	8d 74 26 00          	lea    0x0(%esi),%esi

00001eb0 <Power>:
    1eb0:	83 ec 10             	sub    $0x10,%esp
    1eb3:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    1eb7:	0f b6 54 24 1c       	movzbl 0x1c(%esp),%edx
    1ebc:	8b 44 24 14          	mov    0x14(%esp),%eax
    1ec0:	8b 4c 90 0c          	mov    0xc(%eax,%edx,4),%ecx
    1ec4:	0f b6 41 05          	movzbl 0x5(%ecx),%eax
    1ec8:	0f b6 d0             	movzbl %al,%edx
    1ecb:	83 fa 12             	cmp    $0x12,%edx
    1ece:	0f 84 b1 00 00 00    	je     1f85 <Power+0xd5>
    1ed4:	0f 8f 86 00 00 00    	jg     1f60 <Power+0xb0>
    1eda:	83 fa 03             	cmp    $0x3,%edx
    1edd:	74 29                	je     1f08 <Power+0x58>
    1edf:	c7 04 24 00 05 00 00 	movl   $0x500,(%esp)
			1ee2: R_386_32	.rodata.str1.32
    1ee6:	0f b6 c0             	movzbl %al,%eax
    1ee9:	b9 a8 01 00 00       	mov    $0x1a8,%ecx
			1eea: R_386_32	.rodata
    1eee:	89 44 24 08          	mov    %eax,0x8(%esp)
    1ef2:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    1ef6:	e8 fc ff ff ff       	call   1ef7 <Power+0x47>
			1ef7: R_386_PC32	printk
    1efb:	b8 01 00 00 00       	mov    $0x1,%eax
    1f00:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    1f04:	83 c4 10             	add    $0x10,%esp
    1f07:	c3                   	ret    
    1f08:	8b 11                	mov    (%ecx),%edx
    1f0a:	b8 01 00 00 00       	mov    $0x1,%eax
    1f0f:	85 d2                	test   %edx,%edx
    1f11:	74 ed                	je     1f00 <Power+0x50>
    1f13:	8b 42 50             	mov    0x50(%edx),%eax
    1f16:	8d 76 00             	lea    0x0(%esi),%esi
    1f19:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    1f20:	8b 58 28             	mov    0x28(%eax),%ebx
    1f23:	b8 01 00 00 00       	mov    $0x1,%eax
    1f28:	85 db                	test   %ebx,%ebx
    1f2a:	74 d4                	je     1f00 <Power+0x50>
    1f2c:	89 1c 24             	mov    %ebx,(%esp)
    1f2f:	e8 fc ff ff ff       	call   1f30 <Power+0x80>
			1f30: R_386_PC32	SOCKET_CONTROL_SOCK1
    1f34:	8b 54 24 18          	mov    0x18(%esp),%edx
    1f38:	0f b7 c0             	movzwl %ax,%eax
    1f3b:	85 d2                	test   %edx,%edx
    1f3d:	74 13                	je     1f52 <Power+0xa2>
    1f3f:	83 c8 40             	or     $0x40,%eax
    1f42:	89 44 24 04          	mov    %eax,0x4(%esp)
    1f46:	89 1c 24             	mov    %ebx,(%esp)
    1f49:	e8 fc ff ff ff       	call   1f4a <Power+0x9a>
			1f4a: R_386_PC32	SOCKET_CONTROL_SOCK2
    1f4e:	31 c0                	xor    %eax,%eax
    1f50:	eb ae                	jmp    1f00 <Power+0x50>
    1f52:	25 bf ff 00 00       	and    $0xffbf,%eax
    1f57:	eb e9                	jmp    1f42 <Power+0x92>
    1f59:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    1f60:	83 fa 22             	cmp    $0x22,%edx
    1f63:	0f 85 76 ff ff ff    	jne    1edf <Power+0x2f>
    1f69:	8b 11                	mov    (%ecx),%edx
    1f6b:	b8 01 00 00 00       	mov    $0x1,%eax
    1f70:	85 d2                	test   %edx,%edx
    1f72:	74 8c                	je     1f00 <Power+0x50>
    1f74:	8b 42 04             	mov    0x4(%edx),%eax
    1f77:	89 f6                	mov    %esi,%esi
    1f79:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    1f80:	8b 40 3c             	mov    0x3c(%eax),%eax
    1f83:	eb 9b                	jmp    1f20 <Power+0x70>
    1f85:	8b 11                	mov    (%ecx),%edx
    1f87:	b8 01 00 00 00       	mov    $0x1,%eax
    1f8c:	85 d2                	test   %edx,%edx
    1f8e:	0f 84 6c ff ff ff    	je     1f00 <Power+0x50>
    1f94:	8b 82 64 44 00 00    	mov    0x4464(%edx),%eax
    1f9a:	eb e4                	jmp    1f80 <Power+0xd0>
    1f9c:	8d 74 26 00          	lea    0x0(%esi),%esi

00001fa0 <CSocket_init>:
    1fa0:	57                   	push   %edi
    1fa1:	53                   	push   %ebx
    1fa2:	83 ec 08             	sub    $0x8,%esp
    1fa5:	b8 20 00 00 00       	mov    $0x20,%eax
    1faa:	89 44 24 04          	mov    %eax,0x4(%esp)
    1fae:	a1 04 00 00 00       	mov    0x4,%eax
			1faf: R_386_32	malloc_sizes
    1fb3:	89 04 24             	mov    %eax,(%esp)
    1fb6:	e8 fc ff ff ff       	call   1fb7 <CSocket_init+0x17>
			1fb7: R_386_PC32	kmem_cache_alloc
    1fbb:	89 c3                	mov    %eax,%ebx
    1fbd:	31 c0                	xor    %eax,%eax
    1fbf:	85 db                	test   %ebx,%ebx
    1fc1:	74 52                	je     2015 <CSocket_init+0x75>
    1fc3:	b9 03 00 00 00       	mov    $0x3,%ecx
    1fc8:	89 df                	mov    %ebx,%edi
    1fca:	f3 ab                	repz stos %eax,%es:(%edi)
    1fcc:	8b 44 24 14          	mov    0x14(%esp),%eax
    1fd0:	89 03                	mov    %eax,(%ebx)
    1fd2:	b8 00 0e 00 00       	mov    $0xe00,%eax
    1fd7:	89 44 24 04          	mov    %eax,0x4(%esp)
    1fdb:	89 1c 24             	mov    %ebx,(%esp)
    1fde:	e8 fc ff ff ff       	call   1fdf <CSocket_init+0x3f>
			1fdf: R_386_PC32	SOCKET_CONTROL_SOCK2
    1fe3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1fe9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    1ff0:	89 1c 24             	mov    %ebx,(%esp)
    1ff3:	e8 fc ff ff ff       	call   1ff4 <CSocket_init+0x54>
			1ff4: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    1ff8:	84 c0                	test   %al,%al
    1ffa:	78 f4                	js     1ff0 <CSocket_init+0x50>
    1ffc:	c7 43 08 00 2d 31 01 	movl   $0x1312d00,0x8(%ebx)
    2003:	89 1c 24             	mov    %ebx,(%esp)
    2006:	e8 fc ff ff ff       	call   2007 <CSocket_init+0x67>
			2007: R_386_PC32	CardInsertedSock
    200b:	84 c0                	test   %al,%al
    200d:	75 0c                	jne    201b <CSocket_init+0x7b>
    200f:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
    2013:	89 d8                	mov    %ebx,%eax
    2015:	83 c4 08             	add    $0x8,%esp
    2018:	5b                   	pop    %ebx
    2019:	5f                   	pop    %edi
    201a:	c3                   	ret    
    201b:	89 1c 24             	mov    %ebx,(%esp)
    201e:	e8 fc ff ff ff       	call   201f <CSocket_init+0x7f>
			201f: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    2023:	89 1c 24             	mov    %ebx,(%esp)
    2026:	0d 00 0c 00 00       	or     $0xc00,%eax
    202b:	25 07 0c 00 00       	and    $0xc07,%eax
    2030:	89 44 24 04          	mov    %eax,0x4(%esp)
    2034:	e8 fc ff ff ff       	call   2035 <CSocket_init+0x95>
			2035: R_386_PC32	SOCKET_CONTROL_SOCK2
    2039:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    2040:	89 1c 24             	mov    %ebx,(%esp)
    2043:	e8 fc ff ff ff       	call   2044 <CSocket_init+0xa4>
			2044: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    2048:	84 c0                	test   %al,%al
    204a:	79 f4                	jns    2040 <CSocket_init+0xa0>
    204c:	89 1c 24             	mov    %ebx,(%esp)
    204f:	b8 07 00 00 00       	mov    $0x7,%eax
    2054:	bf 01 00 00 00       	mov    $0x1,%edi
    2059:	89 44 24 04          	mov    %eax,0x4(%esp)
    205d:	e8 fc ff ff ff       	call   205e <CSocket_init+0xbe>
			205e: R_386_PC32	FIFO_PAGE_SIZE_SOCK2
    2062:	89 7c 24 04          	mov    %edi,0x4(%esp)
    2066:	89 1c 24             	mov    %ebx,(%esp)
    2069:	e8 fc ff ff ff       	call   206a <CSocket_init+0xca>
			206a: R_386_PC32	FIFO_CONTROL_SOCK2
    206e:	89 1c 24             	mov    %ebx,(%esp)
    2071:	e8 fc ff ff ff       	call   2072 <CSocket_init+0xd2>
			2072: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    2076:	83 e0 70             	and    $0x70,%eax
    2079:	c1 f8 04             	sar    $0x4,%eax
    207c:	88 43 04             	mov    %al,0x4(%ebx)
    207f:	eb 92                	jmp    2013 <CSocket_init+0x73>
    2081:	eb 0d                	jmp    2090 <CFlash_init>
    2083:	90                   	nop    
    2084:	90                   	nop    
    2085:	90                   	nop    
    2086:	90                   	nop    
    2087:	90                   	nop    
    2088:	90                   	nop    
    2089:	90                   	nop    
    208a:	90                   	nop    
    208b:	90                   	nop    
    208c:	90                   	nop    
    208d:	90                   	nop    
    208e:	90                   	nop    
    208f:	90                   	nop    

00002090 <CFlash_init>:
    2090:	57                   	push   %edi
    2091:	53                   	push   %ebx
    2092:	83 ec 18             	sub    $0x18,%esp
    2095:	b8 20 00 00 00       	mov    $0x20,%eax
    209a:	89 44 24 04          	mov    %eax,0x4(%esp)
    209e:	a1 10 00 00 00       	mov    0x10,%eax
			209f: R_386_32	malloc_sizes
    20a3:	89 04 24             	mov    %eax,(%esp)
    20a6:	e8 fc ff ff ff       	call   20a7 <CFlash_init+0x17>
			20a7: R_386_PC32	kmem_cache_alloc
    20ab:	31 d2                	xor    %edx,%edx
    20ad:	89 c3                	mov    %eax,%ebx
    20af:	85 c0                	test   %eax,%eax
    20b1:	74 64                	je     2117 <CFlash_init+0x87>
    20b3:	31 c0                	xor    %eax,%eax
    20b5:	b9 0b 00 00 00       	mov    $0xb,%ecx
    20ba:	89 df                	mov    %ebx,%edi
    20bc:	f3 ab                	repz stos %eax,%es:(%edi)
    20be:	8b 44 24 24          	mov    0x24(%esp),%eax
    20c2:	89 04 24             	mov    %eax,(%esp)
    20c5:	e8 d6 fe ff ff       	call   1fa0 <CSocket_init>
    20ca:	89 43 28             	mov    %eax,0x28(%ebx)
    20cd:	31 d2                	xor    %edx,%edx
    20cf:	85 c0                	test   %eax,%eax
    20d1:	74 44                	je     2117 <CFlash_init+0x87>
    20d3:	66 c7 03 00 00       	movw   $0x0,(%ebx)
    20d8:	8d 43 1c             	lea    0x1c(%ebx),%eax
    20db:	89 da                	mov    %ebx,%edx
    20dd:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
    20e1:	c6 43 03 00          	movb   $0x0,0x3(%ebx)
    20e5:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
    20e9:	c6 43 05 01          	movb   $0x1,0x5(%ebx)
    20ed:	c6 43 06 00          	movb   $0x0,0x6(%ebx)
    20f1:	c6 43 07 00          	movb   $0x0,0x7(%ebx)
    20f5:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
    20f9:	c6 43 09 00          	movb   $0x0,0x9(%ebx)
    20fd:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    2104:	89 43 1c             	mov    %eax,0x1c(%ebx)
    2107:	89 40 04             	mov    %eax,0x4(%eax)
    210a:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    2111:	66 c7 43 10 00 00    	movw   $0x0,0x10(%ebx)
    2117:	83 c4 18             	add    $0x18,%esp
    211a:	89 d0                	mov    %edx,%eax
    211c:	5b                   	pop    %ebx
    211d:	5f                   	pop    %edi
    211e:	c3                   	ret    
    211f:	90                   	nop    

00002120 <CARD_init>:
    2120:	83 ec 10             	sub    $0x10,%esp
    2123:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    2127:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    212b:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    212f:	b8 20 00 00 00       	mov    $0x20,%eax
    2134:	89 44 24 04          	mov    %eax,0x4(%esp)
    2138:	a1 04 00 00 00       	mov    0x4,%eax
			2139: R_386_32	malloc_sizes
    213d:	89 04 24             	mov    %eax,(%esp)
    2140:	e8 fc ff ff ff       	call   2141 <CARD_init+0x21>
			2141: R_386_PC32	kmem_cache_alloc
    2145:	89 c2                	mov    %eax,%edx
    2147:	31 c0                	xor    %eax,%eax
    2149:	85 d2                	test   %edx,%edx
    214b:	74 12                	je     215f <CARD_init+0x3f>
    214d:	b9 02 00 00 00       	mov    $0x2,%ecx
    2152:	89 d7                	mov    %edx,%edi
    2154:	f3 ab                	repz stos %eax,%es:(%edi)
    2156:	c6 42 04 01          	movb   $0x1,0x4(%edx)
    215a:	89 d0                	mov    %edx,%eax
    215c:	88 5a 05             	mov    %bl,0x5(%edx)
    215f:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    2163:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    2167:	83 c4 10             	add    $0x10,%esp
    216a:	c3                   	ret    
    216b:	90                   	nop    
    216c:	8d 74 26 00          	lea    0x0(%esi),%esi

00002170 <InitializeFlash>:
    2170:	83 ec 18             	sub    $0x18,%esp
    2173:	0f b6 44 24 20       	movzbl 0x20(%esp),%eax
    2178:	89 74 24 14          	mov    %esi,0x14(%esp)
    217c:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    2180:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    2184:	c6 44 24 0f ff       	movb   $0xff,0xf(%esp)
    2189:	ba ff 00 00 00       	mov    $0xff,%edx
    218e:	85 f6                	test   %esi,%esi
    2190:	74 3d                	je     21cf <InitializeFlash+0x5f>
    2192:	0f b6 d8             	movzbl %al,%ebx
    2195:	89 d8                	mov    %ebx,%eax
    2197:	c1 e0 04             	shl    $0x4,%eax
    219a:	0f b6 44 06 68       	movzbl 0x68(%esi,%eax,1),%eax
    219f:	0f b6 d0             	movzbl %al,%edx
    21a2:	83 fa 02             	cmp    $0x2,%edx
    21a5:	74 5c                	je     2203 <InitializeFlash+0x93>
    21a7:	7e 05                	jle    21ae <InitializeFlash+0x3e>
    21a9:	83 fa 03             	cmp    $0x3,%edx
    21ac:	74 32                	je     21e0 <InitializeFlash+0x70>
    21ae:	c7 04 24 40 05 00 00 	movl   $0x540,(%esp)
			21b1: R_386_32	.rodata.str1.32
    21b5:	0f b6 c0             	movzbl %al,%eax
    21b8:	89 44 24 08          	mov    %eax,0x8(%esp)
    21bc:	b8 ae 01 00 00       	mov    $0x1ae,%eax
			21bd: R_386_32	.rodata
    21c1:	89 44 24 04          	mov    %eax,0x4(%esp)
    21c5:	e8 fc ff ff ff       	call   21c6 <InitializeFlash+0x56>
			21c6: R_386_PC32	printk
    21ca:	0f b6 54 24 0f       	movzbl 0xf(%esp),%edx
    21cf:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    21d3:	89 d0                	mov    %edx,%eax
    21d5:	8b 74 24 14          	mov    0x14(%esp),%esi
    21d9:	83 c4 18             	add    $0x18,%esp
    21dc:	c3                   	ret    
    21dd:	8d 76 00             	lea    0x0(%esi),%esi
    21e0:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    21e6:	ba ff 00 00 00       	mov    $0xff,%edx
    21eb:	8b 44 98 0c          	mov    0xc(%eax,%ebx,4),%eax
    21ef:	8b 00                	mov    (%eax),%eax
    21f1:	85 c0                	test   %eax,%eax
    21f3:	74 da                	je     21cf <InitializeFlash+0x5f>
    21f5:	89 04 24             	mov    %eax,(%esp)
    21f8:	e8 fc ff ff ff       	call   21f9 <InitializeFlash+0x89>
			21f9: R_386_PC32	InitializeCardMMCSD
    21fd:	88 44 24 0f          	mov    %al,0xf(%esp)
    2201:	eb c7                	jmp    21ca <InitializeFlash+0x5a>
    2203:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    2209:	ba ff 00 00 00       	mov    $0xff,%edx
    220e:	8b 44 98 0c          	mov    0xc(%eax,%ebx,4),%eax
    2212:	8b 00                	mov    (%eax),%eax
    2214:	85 c0                	test   %eax,%eax
    2216:	74 b7                	je     21cf <InitializeFlash+0x5f>
    2218:	89 04 24             	mov    %eax,(%esp)
    221b:	e8 fc ff ff ff       	call   221c <InitializeFlash+0xac>
			221c: R_386_PC32	InitializeCardMSTICK
    2220:	88 44 24 0f          	mov    %al,0xf(%esp)
    2224:	84 c0                	test   %al,%al
    2226:	75 a2                	jne    21ca <InitializeFlash+0x5a>
    2228:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    222c:	89 34 24             	mov    %esi,(%esp)
    222f:	e8 fc ff ff ff       	call   2230 <InitializeFlash+0xc0>
			2230: R_386_PC32	InitializeSubCardMSTICK
    2234:	eb c7                	jmp    21fd <InitializeFlash+0x8d>
    2236:	8d 76 00             	lea    0x0(%esi),%esi
    2239:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00002240 <InitializeCardFM>:
    2240:	83 ec 10             	sub    $0x10,%esp
    2243:	0f b6 44 24 18       	movzbl 0x18(%esp),%eax
    2248:	89 74 24 0c          	mov    %esi,0xc(%esp)
    224c:	8b 74 24 14          	mov    0x14(%esp),%esi
    2250:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    2254:	ba ff 00 00 00       	mov    $0xff,%edx
    2259:	85 f6                	test   %esi,%esi
    225b:	74 40                	je     229d <InitializeCardFM+0x5d>
    225d:	0f b6 d8             	movzbl %al,%ebx
    2260:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    2264:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    226a:	89 04 24             	mov    %eax,(%esp)
    226d:	e8 2e f9 ff ff       	call   1ba0 <SocketValidFM>
    2272:	84 c0                	test   %al,%al
    2274:	0f b6 d0             	movzbl %al,%edx
    2277:	75 24                	jne    229d <InitializeCardFM+0x5d>
    2279:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    227f:	8b 44 98 0c          	mov    0xc(%eax,%ebx,4),%eax
    2283:	89 04 24             	mov    %eax,(%esp)
    2286:	e8 55 f9 ff ff       	call   1be0 <GetFlashPointer>
    228b:	85 c0                	test   %eax,%eax
    228d:	74 4a                	je     22d9 <InitializeCardFM+0x99>
    228f:	89 04 24             	mov    %eax,(%esp)
    2292:	e8 fc ff ff ff       	call   2293 <InitializeCardFM+0x53>
			2293: R_386_PC32	InitializedFlash
    2297:	31 d2                	xor    %edx,%edx
    2299:	84 c0                	test   %al,%al
    229b:	74 13                	je     22b0 <InitializeCardFM+0x70>
    229d:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    22a1:	89 d0                	mov    %edx,%eax
    22a3:	8b 74 24 0c          	mov    0xc(%esp),%esi
    22a7:	83 c4 10             	add    $0x10,%esp
    22aa:	c3                   	ret    
    22ab:	90                   	nop    
    22ac:	8d 74 26 00          	lea    0x0(%esi),%esi
    22b0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    22b4:	89 34 24             	mov    %esi,(%esp)
    22b7:	e8 b4 fe ff ff       	call   2170 <InitializeFlash>
    22bc:	31 d2                	xor    %edx,%edx
    22be:	84 c0                	test   %al,%al
    22c0:	74 db                	je     229d <InitializeCardFM+0x5d>
    22c2:	c7 04 24 80 05 00 00 	movl   $0x580,(%esp)
			22c5: R_386_32	.rodata.str1.32
    22c9:	0f b6 d8             	movzbl %al,%ebx
    22cc:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    22d0:	e8 fc ff ff ff       	call   22d1 <InitializeCardFM+0x91>
			22d1: R_386_PC32	printk
    22d5:	89 da                	mov    %ebx,%edx
    22d7:	eb c4                	jmp    229d <InitializeCardFM+0x5d>
    22d9:	c7 04 24 c0 05 00 00 	movl   $0x5c0,(%esp)
			22dc: R_386_32	.rodata.str1.32
    22e0:	e8 fc ff ff ff       	call   22e1 <InitializeCardFM+0xa1>
			22e1: R_386_PC32	printk
    22e5:	ba ff 00 00 00       	mov    $0xff,%edx
    22ea:	eb b1                	jmp    229d <InitializeCardFM+0x5d>
    22ec:	8d 74 26 00          	lea    0x0(%esi),%esi

000022f0 <do_flash_softinit>:
    22f0:	57                   	push   %edi
    22f1:	56                   	push   %esi
    22f2:	53                   	push   %ebx
    22f3:	83 ec 0c             	sub    $0xc,%esp
    22f6:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    22fa:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
    22ff:	31 c0                	xor    %eax,%eax
    2301:	3a 46 38             	cmp    0x38(%esi),%al
    2304:	72 0a                	jb     2310 <do_flash_softinit+0x20>
    2306:	83 c4 0c             	add    $0xc,%esp
    2309:	5b                   	pop    %ebx
    230a:	5e                   	pop    %esi
    230b:	5f                   	pop    %edi
    230c:	c3                   	ret    
    230d:	8d 76 00             	lea    0x0(%esi),%esi
    2310:	0f b6 5c 24 0b       	movzbl 0xb(%esp),%ebx
    2315:	89 34 24             	mov    %esi,(%esp)
    2318:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    231c:	e8 fc ff ff ff       	call   231d <do_flash_softinit+0x2d>
			231d: R_386_PC32	IsFMValid
    2321:	84 c0                	test   %al,%al
    2323:	74 10                	je     2335 <do_flash_softinit+0x45>
    2325:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    2329:	89 34 24             	mov    %esi,(%esp)
    232c:	e8 fc ff ff ff       	call   232d <do_flash_softinit+0x3d>
			232d: R_386_PC32	IsFMInitialized
    2331:	84 c0                	test   %al,%al
    2333:	74 6b                	je     23a0 <do_flash_softinit+0xb0>
    2335:	0f b6 5c 24 0b       	movzbl 0xb(%esp),%ebx
    233a:	89 34 24             	mov    %esi,(%esp)
    233d:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    2341:	e8 fc ff ff ff       	call   2342 <do_flash_softinit+0x52>
			2342: R_386_PC32	IsFMValid
    2346:	84 c0                	test   %al,%al
    2348:	74 16                	je     2360 <do_flash_softinit+0x70>
    234a:	fe 44 24 0b          	incb   0xb(%esp)
    234e:	0f b6 44 24 0b       	movzbl 0xb(%esp),%eax
    2353:	3a 46 38             	cmp    0x38(%esi),%al
    2356:	72 b8                	jb     2310 <do_flash_softinit+0x20>
    2358:	eb ac                	jmp    2306 <do_flash_softinit+0x16>
    235a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2360:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    2364:	89 34 24             	mov    %esi,(%esp)
    2367:	e8 fc ff ff ff       	call   2368 <do_flash_softinit+0x78>
			2368: R_386_PC32	IsFMInitialized
    236c:	84 c0                	test   %al,%al
    236e:	74 da                	je     234a <do_flash_softinit+0x5a>
    2370:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    2374:	89 34 24             	mov    %esi,(%esp)
    2377:	e8 fc ff ff ff       	call   2378 <do_flash_softinit+0x88>
			2378: R_386_PC32	gendisk_cleanup
    237c:	40                   	inc    %eax
    237d:	74 0a                	je     2389 <do_flash_softinit+0x99>
    237f:	c1 e3 04             	shl    $0x4,%ebx
    2382:	c6 44 1e 61 00       	movb   $0x0,0x61(%esi,%ebx,1)
    2387:	eb c1                	jmp    234a <do_flash_softinit+0x5a>
    2389:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    238d:	c7 04 24 00 06 00 00 	movl   $0x600,(%esp)
			2390: R_386_32	.rodata.str1.32
    2394:	e8 fc ff ff ff       	call   2395 <do_flash_softinit+0xa5>
			2395: R_386_PC32	printk
    2399:	e9 68 ff ff ff       	jmp    2306 <do_flash_softinit+0x16>
    239e:	89 f6                	mov    %esi,%esi
    23a0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    23a4:	89 34 24             	mov    %esi,(%esp)
    23a7:	e8 fc ff ff ff       	call   23a8 <do_flash_softinit+0xb8>
			23a8: R_386_PC32	InitializeCardFM
    23ac:	84 c0                	test   %al,%al
    23ae:	75 26                	jne    23d6 <do_flash_softinit+0xe6>
    23b0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    23b4:	89 34 24             	mov    %esi,(%esp)
    23b7:	e8 fc ff ff ff       	call   23b8 <do_flash_softinit+0xc8>
			23b8: R_386_PC32	gendisk_init
    23bc:	40                   	inc    %eax
    23bd:	74 0a                	je     23c9 <do_flash_softinit+0xd9>
    23bf:	c1 e3 04             	shl    $0x4,%ebx
    23c2:	c6 44 1e 61 01       	movb   $0x1,0x61(%esi,%ebx,1)
    23c7:	eb 81                	jmp    234a <do_flash_softinit+0x5a>
    23c9:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    23cd:	c7 04 24 40 06 00 00 	movl   $0x640,(%esp)
			23d0: R_386_32	.rodata.str1.32
    23d4:	eb be                	jmp    2394 <do_flash_softinit+0xa4>
    23d6:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    23da:	c7 04 24 80 06 00 00 	movl   $0x680,(%esp)
			23dd: R_386_32	.rodata.str1.32
    23e1:	eb b1                	jmp    2394 <do_flash_softinit+0xa4>
    23e3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    23e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000023f0 <OnCardInsertionOrRemoval>:
    23f0:	83 ec 18             	sub    $0x18,%esp
    23f3:	0f b6 44 24 20       	movzbl 0x20(%esp),%eax
    23f8:	89 74 24 14          	mov    %esi,0x14(%esp)
    23fc:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    2400:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    2404:	88 44 24 0f          	mov    %al,0xf(%esp)
    2408:	85 f6                	test   %esi,%esi
    240a:	0f 84 c0 00 00 00    	je     24d0 <OnCardInsertionOrRemoval+0xe0>
    2410:	0f b6 5c 24 0f       	movzbl 0xf(%esp),%ebx
    2415:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    241b:	8b 44 98 0c          	mov    0xc(%eax,%ebx,4),%eax
    241f:	85 c0                	test   %eax,%eax
    2421:	0f 84 a9 00 00 00    	je     24d0 <OnCardInsertionOrRemoval+0xe0>
    2427:	0f b6 50 05          	movzbl 0x5(%eax),%edx
    242b:	88 54 24 0e          	mov    %dl,0xe(%esp)
    242f:	80 78 04 00          	cmpb   $0x0,0x4(%eax)
    2433:	75 50                	jne    2485 <OnCardInsertionOrRemoval+0x95>
    2435:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    2439:	b9 be 01 00 00       	mov    $0x1be,%ecx
			243a: R_386_32	.rodata
    243e:	c1 e3 04             	shl    $0x4,%ebx
    2441:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    2445:	c7 04 24 c0 06 00 00 	movl   $0x6c0,(%esp)
			2448: R_386_32	.rodata.str1.32
    244c:	e8 fc ff ff ff       	call   244d <OnCardInsertionOrRemoval+0x5d>
			244d: R_386_PC32	printk
    2451:	8d 04 1e             	lea    (%esi,%ebx,1),%eax
    2454:	c7 40 64 ff ff ff ff 	movl   $0xffffffff,0x64(%eax)
    245b:	c6 40 60 00          	movb   $0x0,0x60(%eax)
    245f:	c6 40 68 07          	movb   $0x7,0x68(%eax)
    2463:	0f b6 54 24 0f       	movzbl 0xf(%esp),%edx
    2468:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    246c:	8d 04 52             	lea    (%edx,%edx,2),%eax
    246f:	8d 04 82             	lea    (%edx,%eax,4),%eax
    2472:	8d 84 86 e4 00 00 00 	lea    0xe4(%esi,%eax,4),%eax
    2479:	8b 74 24 14          	mov    0x14(%esp),%esi
    247d:	83 c4 18             	add    $0x18,%esp
    2480:	e9 fc ff ff ff       	jmp    2481 <OnCardInsertionOrRemoval+0x91>
			2481: R_386_PC32	schedule_work
    2485:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    2489:	ba be 01 00 00       	mov    $0x1be,%edx
			248a: R_386_32	.rodata
    248e:	89 54 24 04          	mov    %edx,0x4(%esp)
    2492:	c7 04 24 00 07 00 00 	movl   $0x700,(%esp)
			2495: R_386_32	.rodata.str1.32
    2499:	e8 fc ff ff ff       	call   249a <OnCardInsertionOrRemoval+0xaa>
			249a: R_386_PC32	printk
    249e:	89 d8                	mov    %ebx,%eax
    24a0:	c1 e0 04             	shl    $0x4,%eax
    24a3:	01 f0                	add    %esi,%eax
    24a5:	89 58 64             	mov    %ebx,0x64(%eax)
    24a8:	8d 50 60             	lea    0x60(%eax),%edx
    24ab:	c6 40 60 01          	movb   $0x1,0x60(%eax)
    24af:	0f b6 44 24 0e       	movzbl 0xe(%esp),%eax
    24b4:	c6 42 01 00          	movb   $0x0,0x1(%edx)
    24b8:	88 42 08             	mov    %al,0x8(%edx)
    24bb:	0f b6 44 24 0e       	movzbl 0xe(%esp),%eax
    24c0:	89 04 24             	mov    %eax,(%esp)
    24c3:	e8 c8 f6 ff ff       	call   1b90 <GetFlashMediaType>
    24c8:	eb 99                	jmp    2463 <OnCardInsertionOrRemoval+0x73>
    24ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    24d0:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    24d4:	8b 74 24 14          	mov    0x14(%esp),%esi
    24d8:	83 c4 18             	add    $0x18,%esp
    24db:	c3                   	ret    
    24dc:	8d 74 26 00          	lea    0x0(%esi),%esi

000024e0 <CardDetectionFM>:
    24e0:	57                   	push   %edi
    24e1:	56                   	push   %esi
    24e2:	53                   	push   %ebx
    24e3:	83 ec 10             	sub    $0x10,%esp
    24e6:	8b 74 24 20          	mov    0x20(%esp),%esi
    24ea:	0f b6 44 24 24       	movzbl 0x24(%esp),%eax
    24ef:	c6 44 24 0e 00       	movb   $0x0,0xe(%esp)
    24f4:	88 44 24 0f          	mov    %al,0xf(%esp)
    24f8:	b9 ff 00 00 00       	mov    $0xff,%ecx
    24fd:	85 f6                	test   %esi,%esi
    24ff:	0f 84 e0 00 00 00    	je     25e5 <CardDetectionFM+0x105>
    2505:	0f b6 d0             	movzbl %al,%edx
    2508:	8b 0e                	mov    (%esi),%ecx
    250a:	89 d0                	mov    %edx,%eax
    250c:	c1 e0 0a             	shl    $0xa,%eax
    250f:	01 c8                	add    %ecx,%eax
    2511:	8d b8 00 04 00 00    	lea    0x400(%eax),%edi
    2517:	8b 44 96 0c          	mov    0xc(%esi,%edx,4),%eax
    251b:	85 c0                	test   %eax,%eax
    251d:	74 0c                	je     252b <CardDetectionFM+0x4b>
    251f:	0f b6 40 05          	movzbl 0x5(%eax),%eax
    2523:	3c 43                	cmp    $0x43,%al
    2525:	88 44 24 0d          	mov    %al,0xd(%esp)
    2529:	74 2b                	je     2556 <CardDetectionFM+0x76>
    252b:	89 3c 24             	mov    %edi,(%esp)
    252e:	e8 6d fa ff ff       	call   1fa0 <CSocket_init>
    2533:	85 c0                	test   %eax,%eax
    2535:	89 c3                	mov    %eax,%ebx
    2537:	b9 ff 00 00 00       	mov    $0xff,%ecx
    253c:	0f 84 a3 00 00 00    	je     25e5 <CardDetectionFM+0x105>
    2542:	89 04 24             	mov    %eax,(%esp)
    2545:	e8 86 f8 ff ff       	call   1dd0 <GetMediaIDSock>
    254a:	88 44 24 0d          	mov    %al,0xd(%esp)
    254e:	89 1c 24             	mov    %ebx,(%esp)
    2551:	e8 ba f3 ff ff       	call   1910 <CSocket_destroy>
    2556:	0f b6 44 24 0d       	movzbl 0xd(%esp),%eax
    255b:	83 f8 02             	cmp    $0x2,%eax
    255e:	0f 84 9c 01 00 00    	je     2700 <CardDetectionFM+0x220>
    2564:	0f 8f 26 01 00 00    	jg     2690 <CardDetectionFM+0x1b0>
    256a:	85 c0                	test   %eax,%eax
    256c:	74 12                	je     2580 <CardDetectionFM+0xa0>
    256e:	48                   	dec    %eax
    256f:	0f 84 e9 00 00 00    	je     265e <CardDetectionFM+0x17e>
    2575:	8d 74 26 00          	lea    0x0(%esi),%esi
    2579:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    2580:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    2585:	c6 44 24 0e 83       	movb   $0x83,0xe(%esp)
    258a:	83 f8 01             	cmp    $0x1,%eax
    258d:	0f 84 c4 00 00 00    	je     2657 <CardDetectionFM+0x177>
    2593:	0f 8e af 00 00 00    	jle    2648 <CardDetectionFM+0x168>
    2599:	83 f8 02             	cmp    $0x2,%eax
    259c:	0f 84 9f 00 00 00    	je     2641 <CardDetectionFM+0x161>
    25a2:	83 f8 03             	cmp    $0x3,%eax
    25a5:	0f 84 80 00 00 00    	je     262b <CardDetectionFM+0x14b>
    25ab:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    25b0:	8b 44 86 0c          	mov    0xc(%esi,%eax,4),%eax
    25b4:	85 c0                	test   %eax,%eax
    25b6:	74 28                	je     25e0 <CardDetectionFM+0x100>
    25b8:	c6 40 04 00          	movb   $0x0,0x4(%eax)
    25bc:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%esp)
    25c1:	75 1d                	jne    25e0 <CardDetectionFM+0x100>
    25c3:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    25c8:	83 f8 01             	cmp    $0x1,%eax
    25cb:	74 57                	je     2624 <CardDetectionFM+0x144>
    25cd:	7e 46                	jle    2615 <CardDetectionFM+0x135>
    25cf:	83 f8 02             	cmp    $0x2,%eax
    25d2:	74 36                	je     260a <CardDetectionFM+0x12a>
    25d4:	83 f8 03             	cmp    $0x3,%eax
    25d7:	74 15                	je     25ee <CardDetectionFM+0x10e>
    25d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    25e0:	0f b6 4c 24 0e       	movzbl 0xe(%esp),%ecx
    25e5:	83 c4 10             	add    $0x10,%esp
    25e8:	89 c8                	mov    %ecx,%eax
    25ea:	5b                   	pop    %ebx
    25eb:	5e                   	pop    %esi
    25ec:	5f                   	pop    %edi
    25ed:	c3                   	ret    
    25ee:	bb 00 08 08 00       	mov    $0x80800,%ebx
    25f3:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    25f7:	89 f6                	mov    %esi,%esi
    25f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    2600:	89 34 24             	mov    %esi,(%esp)
    2603:	e8 fc ff ff ff       	call   2604 <CardDetectionFM+0x124>
			2604: R_386_PC32	INTERRUPT_ENABLE_SET_FM
    2608:	eb d6                	jmp    25e0 <CardDetectionFM+0x100>
    260a:	bf 00 04 04 00       	mov    $0x40400,%edi
    260f:	89 7c 24 04          	mov    %edi,0x4(%esp)
    2613:	eb eb                	jmp    2600 <CardDetectionFM+0x120>
    2615:	85 c0                	test   %eax,%eax
    2617:	75 c7                	jne    25e0 <CardDetectionFM+0x100>
    2619:	b8 00 01 01 00       	mov    $0x10100,%eax
    261e:	89 44 24 04          	mov    %eax,0x4(%esp)
    2622:	eb dc                	jmp    2600 <CardDetectionFM+0x120>
    2624:	b8 00 02 02 00       	mov    $0x20200,%eax
    2629:	eb f3                	jmp    261e <CardDetectionFM+0x13e>
    262b:	b8 00 08 08 00       	mov    $0x80800,%eax
    2630:	89 44 24 04          	mov    %eax,0x4(%esp)
    2634:	89 34 24             	mov    %esi,(%esp)
    2637:	e8 fc ff ff ff       	call   2638 <CardDetectionFM+0x158>
			2638: R_386_PC32	INTERRUPT_ENABLE_CLEAR_FM
    263c:	e9 6a ff ff ff       	jmp    25ab <CardDetectionFM+0xcb>
    2641:	b8 00 04 04 00       	mov    $0x40400,%eax
    2646:	eb e8                	jmp    2630 <CardDetectionFM+0x150>
    2648:	85 c0                	test   %eax,%eax
    264a:	0f 85 5b ff ff ff    	jne    25ab <CardDetectionFM+0xcb>
    2650:	b8 00 01 01 00       	mov    $0x10100,%eax
    2655:	eb d9                	jmp    2630 <CardDetectionFM+0x150>
    2657:	b8 00 02 02 00       	mov    $0x20200,%eax
    265c:	eb d2                	jmp    2630 <CardDetectionFM+0x150>
    265e:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    2663:	ba d7 01 00 00       	mov    $0x1d7,%edx
			2664: R_386_32	.rodata
    2668:	89 54 24 04          	mov    %edx,0x4(%esp)
    266c:	c7 04 24 40 07 00 00 	movl   $0x740,(%esp)
			266f: R_386_32	.rodata.str1.32
    2673:	89 44 24 08          	mov    %eax,0x8(%esp)
    2677:	89 f6                	mov    %esi,%esi
    2679:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    2680:	e8 fc ff ff ff       	call   2681 <CardDetectionFM+0x1a1>
			2681: R_386_PC32	printk
    2685:	e9 39 ff ff ff       	jmp    25c3 <CardDetectionFM+0xe3>
    268a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2690:	83 f8 03             	cmp    $0x3,%eax
    2693:	0f 85 e7 fe ff ff    	jne    2580 <CardDetectionFM+0xa0>
    2699:	0f b6 5c 24 0f       	movzbl 0xf(%esp),%ebx
    269e:	8b 44 9e 0c          	mov    0xc(%esi,%ebx,4),%eax
    26a2:	89 04 24             	mov    %eax,(%esp)
    26a5:	e8 c6 f2 ff ff       	call   1970 <CARD_destroy>
    26aa:	31 c0                	xor    %eax,%eax
    26ac:	89 44 9e 0c          	mov    %eax,0xc(%esi,%ebx,4)
    26b0:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
    26b7:	e8 64 fa ff ff       	call   2120 <CARD_init>
    26bc:	89 44 9e 0c          	mov    %eax,0xc(%esi,%ebx,4)
    26c0:	85 c0                	test   %eax,%eax
    26c2:	b9 ff 00 00 00       	mov    $0xff,%ecx
    26c7:	0f 84 18 ff ff ff    	je     25e5 <CardDetectionFM+0x105>
    26cd:	89 3c 24             	mov    %edi,(%esp)
    26d0:	e8 fc ff ff ff       	call   26d1 <CardDetectionFM+0x1f1>
			26d1: R_386_PC32	CMMCSD_init
    26d5:	85 c0                	test   %eax,%eax
    26d7:	89 c2                	mov    %eax,%edx
    26d9:	b9 ff 00 00 00       	mov    $0xff,%ecx
    26de:	0f 84 01 ff ff ff    	je     25e5 <CardDetectionFM+0x105>
    26e4:	8b 44 9e 0c          	mov    0xc(%esi,%ebx,4),%eax
    26e8:	89 10                	mov    %edx,(%eax)
    26ea:	b8 d7 01 00 00       	mov    $0x1d7,%eax
			26eb: R_386_32	.rodata
    26ef:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    26f3:	89 44 24 04          	mov    %eax,0x4(%esp)
    26f7:	c7 04 24 80 07 00 00 	movl   $0x780,(%esp)
			26fa: R_386_32	.rodata.str1.32
    26fe:	eb 80                	jmp    2680 <CardDetectionFM+0x1a0>
    2700:	0f b6 5c 24 0f       	movzbl 0xf(%esp),%ebx
    2705:	8b 44 9e 0c          	mov    0xc(%esi,%ebx,4),%eax
    2709:	89 04 24             	mov    %eax,(%esp)
    270c:	e8 5f f2 ff ff       	call   1970 <CARD_destroy>
    2711:	31 c0                	xor    %eax,%eax
    2713:	89 44 9e 0c          	mov    %eax,0xc(%esi,%ebx,4)
    2717:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
    271e:	e8 fd f9 ff ff       	call   2120 <CARD_init>
    2723:	89 44 9e 0c          	mov    %eax,0xc(%esi,%ebx,4)
    2727:	85 c0                	test   %eax,%eax
    2729:	b9 ff 00 00 00       	mov    $0xff,%ecx
    272e:	0f 84 b1 fe ff ff    	je     25e5 <CardDetectionFM+0x105>
    2734:	89 3c 24             	mov    %edi,(%esp)
    2737:	31 c0                	xor    %eax,%eax
    2739:	89 44 24 04          	mov    %eax,0x4(%esp)
    273d:	e8 fc ff ff ff       	call   273e <CardDetectionFM+0x25e>
			273e: R_386_PC32	CMSTICK_init
    2742:	85 c0                	test   %eax,%eax
    2744:	89 c2                	mov    %eax,%edx
    2746:	b9 ff 00 00 00       	mov    $0xff,%ecx
    274b:	0f 84 94 fe ff ff    	je     25e5 <CardDetectionFM+0x105>
    2751:	8b 44 9e 0c          	mov    0xc(%esi,%ebx,4),%eax
    2755:	b9 d7 01 00 00       	mov    $0x1d7,%ecx
			2756: R_386_32	.rodata
    275a:	89 10                	mov    %edx,(%eax)
    275c:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    2760:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    2764:	c7 04 24 c0 07 00 00 	movl   $0x7c0,(%esp)
			2767: R_386_32	.rodata.str1.32
    276b:	e9 10 ff ff ff       	jmp    2680 <CardDetectionFM+0x1a0>

00002770 <InterruptFlash>:
    2770:	83 ec 10             	sub    $0x10,%esp
    2773:	8b 44 24 18          	mov    0x18(%esp),%eax
    2777:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    277b:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    277f:	88 44 24 0b          	mov    %al,0xb(%esp)
    2783:	88 43 03             	mov    %al,0x3(%ebx)
    2786:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    278a:	88 43 02             	mov    %al,0x2(%ebx)
    278d:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    2792:	75 0d                	jne    27a1 <InterruptFlash+0x31>
    2794:	0f b6 44 24 0b       	movzbl 0xb(%esp),%eax
    2799:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    279d:	83 c4 10             	add    $0x10,%esp
    27a0:	c3                   	ret    
    27a1:	8b 43 28             	mov    0x28(%ebx),%eax
    27a4:	89 04 24             	mov    %eax,(%esp)
    27a7:	e8 fc ff ff ff       	call   27a8 <InterruptFlash+0x38>
			27a8: R_386_PC32	DMA_FIFO_STATUS_SOCK
    27ac:	66 89 03             	mov    %ax,(%ebx)
    27af:	0f b7 c0             	movzwl %ax,%eax
    27b2:	89 44 24 04          	mov    %eax,0x4(%esp)
    27b6:	8b 43 28             	mov    0x28(%ebx),%eax
    27b9:	89 04 24             	mov    %eax,(%esp)
    27bc:	e8 fc ff ff ff       	call   27bd <InterruptFlash+0x4d>
			27bd: R_386_PC32	DMA_FIFO_STATUS_CLEAR_SOCK
    27c1:	eb d1                	jmp    2794 <InterruptFlash+0x24>
    27c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    27c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000027d0 <InterruptCard>:
    27d0:	83 ec 10             	sub    $0x10,%esp
    27d3:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    27d7:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    27db:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
    27e0:	0f b6 5c 24 18       	movzbl 0x18(%esp),%ebx
    27e5:	0f b6 51 05          	movzbl 0x5(%ecx),%edx
    27e9:	83 fa 43             	cmp    $0x43,%edx
    27ec:	77 32                	ja     2820 <InterruptCard+0x50>
    27ee:	ff 24 95 e8 01 00 00 	jmp    *0x1e8(,%edx,4)
			27f1: R_386_32	.rodata
    27f5:	8b 11                	mov    (%ecx),%edx
    27f7:	31 c9                	xor    %ecx,%ecx
    27f9:	85 d2                	test   %edx,%edx
    27fb:	74 26                	je     2823 <InterruptCard+0x53>
    27fd:	89 14 24             	mov    %edx,(%esp)
    2800:	0f b6 c0             	movzbl %al,%eax
    2803:	89 44 24 08          	mov    %eax,0x8(%esp)
    2807:	0f b6 c3             	movzbl %bl,%eax
    280a:	89 44 24 04          	mov    %eax,0x4(%esp)
    280e:	e8 fc ff ff ff       	call   280f <InterruptCard+0x3f>
			280f: R_386_PC32	InterruptMMCSD
    2813:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2819:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    2820:	0f b6 cb             	movzbl %bl,%ecx
    2823:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    2827:	89 c8                	mov    %ecx,%eax
    2829:	83 c4 10             	add    $0x10,%esp
    282c:	c3                   	ret    
    282d:	8b 11                	mov    (%ecx),%edx
    282f:	31 c9                	xor    %ecx,%ecx
    2831:	85 d2                	test   %edx,%edx
    2833:	74 ee                	je     2823 <InterruptCard+0x53>
    2835:	89 14 24             	mov    %edx,(%esp)
    2838:	0f b6 c0             	movzbl %al,%eax
    283b:	89 44 24 08          	mov    %eax,0x8(%esp)
    283f:	0f b6 c3             	movzbl %bl,%eax
    2842:	89 44 24 04          	mov    %eax,0x4(%esp)
    2846:	e8 fc ff ff ff       	call   2847 <InterruptCard+0x77>
			2847: R_386_PC32	InterruptMemoryStick
    284b:	eb d3                	jmp    2820 <InterruptCard+0x50>
    284d:	8b 11                	mov    (%ecx),%edx
    284f:	31 c9                	xor    %ecx,%ecx
    2851:	85 d2                	test   %edx,%edx
    2853:	74 ce                	je     2823 <InterruptCard+0x53>
    2855:	8b 92 64 44 00 00    	mov    0x4464(%edx),%edx
    285b:	eb d4                	jmp    2831 <InterruptCard+0x61>
    285d:	8b 11                	mov    (%ecx),%edx
    285f:	31 c9                	xor    %ecx,%ecx
    2861:	85 d2                	test   %edx,%edx
    2863:	74 be                	je     2823 <InterruptCard+0x53>
    2865:	8b 52 04             	mov    0x4(%edx),%edx
    2868:	eb c7                	jmp    2831 <InterruptCard+0x61>
    286a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00002870 <InterruptFM>:
    2870:	83 ec 20             	sub    $0x20,%esp
    2873:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
    2877:	8b 5c 24 24          	mov    0x24(%esp),%ebx
    287b:	31 c0                	xor    %eax,%eax
    287d:	85 db                	test   %ebx,%ebx
    287f:	74 1a                	je     289b <InterruptFM+0x2b>
    2881:	89 1c 24             	mov    %ebx,(%esp)
    2884:	e8 fc ff ff ff       	call   2885 <InterruptFM+0x15>
			2885: R_386_PC32	INTERRUPT_STATUS_FM
    2889:	89 43 04             	mov    %eax,0x4(%ebx)
    288c:	8b 43 04             	mov    0x4(%ebx),%eax
    288f:	40                   	inc    %eax
    2890:	74 07                	je     2899 <InterruptFM+0x29>
    2892:	8b 43 04             	mov    0x4(%ebx),%eax
    2895:	85 c0                	test   %eax,%eax
    2897:	75 0a                	jne    28a3 <InterruptFM+0x33>
    2899:	31 c0                	xor    %eax,%eax
    289b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    289f:	83 c4 20             	add    $0x20,%esp
    28a2:	c3                   	ret    
    28a3:	8b 43 04             	mov    0x4(%ebx),%eax
    28a6:	c1 e8 1f             	shr    $0x1f,%eax
    28a9:	88 44 24 0c          	mov    %al,0xc(%esp)
    28ad:	80 7b 08 00          	cmpb   $0x0,0x8(%ebx)
    28b1:	75 04                	jne    28b7 <InterruptFM+0x47>
    28b3:	84 c0                	test   %al,%al
    28b5:	75 16                	jne    28cd <InterruptFM+0x5d>
    28b7:	8b 43 04             	mov    0x4(%ebx),%eax
    28ba:	89 1c 24             	mov    %ebx,(%esp)
    28bd:	89 44 24 04          	mov    %eax,0x4(%esp)
    28c1:	e8 fc ff ff ff       	call   28c2 <InterruptFM+0x52>
			28c2: R_386_PC32	INTERRUPT_CLEAR_FM
    28c6:	0f b6 44 24 0c       	movzbl 0xc(%esp),%eax
    28cb:	eb ce                	jmp    289b <InterruptFM+0x2b>
    28cd:	89 1c 24             	mov    %ebx,(%esp)
    28d0:	b8 00 00 00 80       	mov    $0x80000000,%eax
    28d5:	89 44 24 04          	mov    %eax,0x4(%esp)
    28d9:	e8 fc ff ff ff       	call   28da <InterruptFM+0x6a>
			28da: R_386_PC32	INTERRUPT_ENABLE_CLEAR_FM
    28de:	8b 4b 0c             	mov    0xc(%ebx),%ecx
    28e1:	85 c9                	test   %ecx,%ecx
    28e3:	74 2d                	je     2912 <InterruptFM+0xa2>
    28e5:	8b 53 04             	mov    0x4(%ebx),%edx
    28e8:	8b 43 04             	mov    0x4(%ebx),%eax
    28eb:	c1 ea 10             	shr    $0x10,%edx
    28ee:	c1 e8 08             	shr    $0x8,%eax
    28f1:	24 01                	and    $0x1,%al
    28f3:	80 e2 01             	and    $0x1,%dl
    28f6:	75 04                	jne    28fc <InterruptFM+0x8c>
    28f8:	84 c0                	test   %al,%al
    28fa:	74 16                	je     2912 <InterruptFM+0xa2>
    28fc:	89 0c 24             	mov    %ecx,(%esp)
    28ff:	0f b6 c0             	movzbl %al,%eax
    2902:	89 44 24 08          	mov    %eax,0x8(%esp)
    2906:	0f b6 c2             	movzbl %dl,%eax
    2909:	89 44 24 04          	mov    %eax,0x4(%esp)
    290d:	e8 be fe ff ff       	call   27d0 <InterruptCard>
    2912:	8b 4b 10             	mov    0x10(%ebx),%ecx
    2915:	85 c9                	test   %ecx,%ecx
    2917:	74 2d                	je     2946 <InterruptFM+0xd6>
    2919:	8b 53 04             	mov    0x4(%ebx),%edx
    291c:	8b 43 04             	mov    0x4(%ebx),%eax
    291f:	c1 ea 11             	shr    $0x11,%edx
    2922:	c1 e8 09             	shr    $0x9,%eax
    2925:	24 01                	and    $0x1,%al
    2927:	80 e2 01             	and    $0x1,%dl
    292a:	75 04                	jne    2930 <InterruptFM+0xc0>
    292c:	84 c0                	test   %al,%al
    292e:	74 16                	je     2946 <InterruptFM+0xd6>
    2930:	89 0c 24             	mov    %ecx,(%esp)
    2933:	0f b6 c0             	movzbl %al,%eax
    2936:	89 44 24 08          	mov    %eax,0x8(%esp)
    293a:	0f b6 c2             	movzbl %dl,%eax
    293d:	89 44 24 04          	mov    %eax,0x4(%esp)
    2941:	e8 8a fe ff ff       	call   27d0 <InterruptCard>
    2946:	8b 4b 14             	mov    0x14(%ebx),%ecx
    2949:	85 c9                	test   %ecx,%ecx
    294b:	74 2d                	je     297a <InterruptFM+0x10a>
    294d:	8b 53 04             	mov    0x4(%ebx),%edx
    2950:	8b 43 04             	mov    0x4(%ebx),%eax
    2953:	c1 ea 12             	shr    $0x12,%edx
    2956:	c1 e8 0a             	shr    $0xa,%eax
    2959:	24 01                	and    $0x1,%al
    295b:	80 e2 01             	and    $0x1,%dl
    295e:	75 04                	jne    2964 <InterruptFM+0xf4>
    2960:	84 c0                	test   %al,%al
    2962:	74 16                	je     297a <InterruptFM+0x10a>
    2964:	89 0c 24             	mov    %ecx,(%esp)
    2967:	0f b6 c0             	movzbl %al,%eax
    296a:	89 44 24 08          	mov    %eax,0x8(%esp)
    296e:	0f b6 c2             	movzbl %dl,%eax
    2971:	89 44 24 04          	mov    %eax,0x4(%esp)
    2975:	e8 56 fe ff ff       	call   27d0 <InterruptCard>
    297a:	8b 4b 18             	mov    0x18(%ebx),%ecx
    297d:	85 c9                	test   %ecx,%ecx
    297f:	0f 84 32 ff ff ff    	je     28b7 <InterruptFM+0x47>
    2985:	8b 53 04             	mov    0x4(%ebx),%edx
    2988:	8b 43 04             	mov    0x4(%ebx),%eax
    298b:	c1 ea 13             	shr    $0x13,%edx
    298e:	c1 e8 0b             	shr    $0xb,%eax
    2991:	24 01                	and    $0x1,%al
    2993:	80 e2 01             	and    $0x1,%dl
    2996:	75 08                	jne    29a0 <InterruptFM+0x130>
    2998:	84 c0                	test   %al,%al
    299a:	0f 84 17 ff ff ff    	je     28b7 <InterruptFM+0x47>
    29a0:	89 0c 24             	mov    %ecx,(%esp)
    29a3:	0f b6 c0             	movzbl %al,%eax
    29a6:	89 44 24 08          	mov    %eax,0x8(%esp)
    29aa:	0f b6 c2             	movzbl %dl,%eax
    29ad:	89 44 24 04          	mov    %eax,0x4(%esp)
    29b1:	e8 1a fe ff ff       	call   27d0 <InterruptCard>
    29b6:	e9 fc fe ff ff       	jmp    28b7 <InterruptFM+0x47>
    29bb:	90                   	nop    
    29bc:	8d 74 26 00          	lea    0x0(%esi),%esi

000029c0 <DPCFlash>:
    29c0:	83 ec 0c             	sub    $0xc,%esp
    29c3:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    29c7:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    29cb:	89 74 24 08          	mov    %esi,0x8(%esp)
    29cf:	31 f6                	xor    %esi,%esi
    29d1:	31 c0                	xor    %eax,%eax
    29d3:	85 db                	test   %ebx,%ebx
    29d5:	74 2a                	je     2a01 <DPCFlash+0x41>
    29d7:	80 7b 03 00          	cmpb   $0x0,0x3(%ebx)
    29db:	74 22                	je     29ff <DPCFlash+0x3f>
    29dd:	0f b7 13             	movzwl (%ebx),%edx
    29e0:	f6 c2 04             	test   $0x4,%dl
    29e3:	74 2b                	je     2a10 <DPCFlash+0x50>
    29e5:	c6 43 07 01          	movb   $0x1,0x7(%ebx)
    29e9:	be 00 02 00 00       	mov    $0x200,%esi
    29ee:	c6 43 03 00          	movb   $0x0,0x3(%ebx)
    29f2:	89 f0                	mov    %esi,%eax
    29f4:	0d 00 01 00 00       	or     $0x100,%eax
    29f9:	f6 c2 01             	test   $0x1,%dl
    29fc:	0f 45 f0             	cmovne %eax,%esi
    29ff:	89 f0                	mov    %esi,%eax
    2a01:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    2a05:	8b 74 24 08          	mov    0x8(%esp),%esi
    2a09:	83 c4 0c             	add    $0xc,%esp
    2a0c:	c3                   	ret    
    2a0d:	8d 76 00             	lea    0x0(%esi),%esi
    2a10:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    2a17:	ba 01 00 00 00       	mov    $0x1,%edx
    2a1c:	8d 43 1c             	lea    0x1c(%ebx),%eax
    2a1f:	b9 01 00 00 00       	mov    $0x1,%ecx
    2a24:	e8 fc ff ff ff       	call   2a25 <DPCFlash+0x65>
			2a25: R_386_PC32	__wake_up
    2a29:	0f b7 13             	movzwl (%ebx),%edx
    2a2c:	eb c0                	jmp    29ee <DPCFlash+0x2e>
    2a2e:	89 f6                	mov    %esi,%esi

00002a30 <DPCCard>:
    2a30:	83 ec 08             	sub    $0x8,%esp
    2a33:	31 c0                	xor    %eax,%eax
    2a35:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    2a39:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    2a3d:	31 db                	xor    %ebx,%ebx
    2a3f:	85 c9                	test   %ecx,%ecx
    2a41:	74 2f                	je     2a72 <DPCCard+0x42>
    2a43:	0f b6 51 05          	movzbl 0x5(%ecx),%edx
    2a47:	83 fa 43             	cmp    $0x43,%edx
    2a4a:	77 24                	ja     2a70 <DPCCard+0x40>
    2a4c:	ff 24 95 f8 02 00 00 	jmp    *0x2f8(,%edx,4)
			2a4f: R_386_32	.rodata
    2a53:	8b 11                	mov    (%ecx),%edx
    2a55:	31 db                	xor    %ebx,%ebx
    2a57:	85 d2                	test   %edx,%edx
    2a59:	74 17                	je     2a72 <DPCCard+0x42>
    2a5b:	89 14 24             	mov    %edx,(%esp)
    2a5e:	e8 fc ff ff ff       	call   2a5f <DPCCard+0x2f>
			2a5f: R_386_PC32	DPCMMCSD
    2a63:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2a69:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    2a70:	89 c3                	mov    %eax,%ebx
    2a72:	89 d8                	mov    %ebx,%eax
    2a74:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    2a78:	83 c4 08             	add    $0x8,%esp
    2a7b:	c3                   	ret    
    2a7c:	8b 11                	mov    (%ecx),%edx
    2a7e:	31 db                	xor    %ebx,%ebx
    2a80:	85 d2                	test   %edx,%edx
    2a82:	74 ee                	je     2a72 <DPCCard+0x42>
    2a84:	89 14 24             	mov    %edx,(%esp)
    2a87:	e8 fc ff ff ff       	call   2a88 <DPCCard+0x58>
			2a88: R_386_PC32	DPCMemoryStick
    2a8c:	eb e2                	jmp    2a70 <DPCCard+0x40>
    2a8e:	8b 11                	mov    (%ecx),%edx
    2a90:	31 db                	xor    %ebx,%ebx
    2a92:	85 d2                	test   %edx,%edx
    2a94:	74 dc                	je     2a72 <DPCCard+0x42>
    2a96:	8b 92 64 44 00 00    	mov    0x4464(%edx),%edx
    2a9c:	eb e2                	jmp    2a80 <DPCCard+0x50>
    2a9e:	8b 11                	mov    (%ecx),%edx
    2aa0:	31 db                	xor    %ebx,%ebx
    2aa2:	85 d2                	test   %edx,%edx
    2aa4:	74 cc                	je     2a72 <DPCCard+0x42>
    2aa6:	8b 52 04             	mov    0x4(%edx),%edx
    2aa9:	eb d5                	jmp    2a80 <DPCCard+0x50>
    2aab:	90                   	nop    
    2aac:	8d 74 26 00          	lea    0x0(%esi),%esi

00002ab0 <DPCFM>:
    2ab0:	83 ec 10             	sub    $0x10,%esp
    2ab3:	8b 54 24 14          	mov    0x14(%esp),%edx
    2ab7:	89 74 24 0c          	mov    %esi,0xc(%esp)
    2abb:	31 f6                	xor    %esi,%esi
    2abd:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    2ac1:	31 c0                	xor    %eax,%eax
    2ac3:	85 d2                	test   %edx,%edx
    2ac5:	74 69                	je     2b30 <DPCFM+0x80>
    2ac7:	8b 9a a0 00 00 00    	mov    0xa0(%edx),%ebx
    2acd:	85 db                	test   %ebx,%ebx
    2acf:	74 5f                	je     2b30 <DPCFM+0x80>
    2ad1:	80 7b 08 00          	cmpb   $0x0,0x8(%ebx)
    2ad5:	75 59                	jne    2b30 <DPCFM+0x80>
    2ad7:	8b 43 0c             	mov    0xc(%ebx),%eax
    2ada:	85 c0                	test   %eax,%eax
    2adc:	0f 85 ed 00 00 00    	jne    2bcf <DPCFM+0x11f>
    2ae2:	8b 43 10             	mov    0x10(%ebx),%eax
    2ae5:	85 c0                	test   %eax,%eax
    2ae7:	0f 85 c7 00 00 00    	jne    2bb4 <DPCFM+0x104>
    2aed:	8b 43 14             	mov    0x14(%ebx),%eax
    2af0:	85 c0                	test   %eax,%eax
    2af2:	0f 85 a1 00 00 00    	jne    2b99 <DPCFM+0xe9>
    2af8:	8b 43 18             	mov    0x18(%ebx),%eax
    2afb:	85 c0                	test   %eax,%eax
    2afd:	75 7f                	jne    2b7e <DPCFM+0xce>
    2aff:	8b 43 04             	mov    0x4(%ebx),%eax
    2b02:	a8 02                	test   $0x2,%al
    2b04:	75 62                	jne    2b68 <DPCFM+0xb8>
    2b06:	8b 43 04             	mov    0x4(%ebx),%eax
    2b09:	a8 04                	test   $0x4,%al
    2b0b:	75 45                	jne    2b52 <DPCFM+0xa2>
    2b0d:	8b 43 04             	mov    0x4(%ebx),%eax
    2b10:	a8 08                	test   $0x8,%al
    2b12:	75 28                	jne    2b3c <DPCFM+0x8c>
    2b14:	89 1c 24             	mov    %ebx,(%esp)
    2b17:	b8 00 00 00 80       	mov    $0x80000000,%eax
    2b1c:	89 44 24 04          	mov    %eax,0x4(%esp)
    2b20:	e8 fc ff ff ff       	call   2b21 <DPCFM+0x71>
			2b21: R_386_PC32	INTERRUPT_ENABLE_SET_FM
    2b25:	89 f0                	mov    %esi,%eax
    2b27:	89 f6                	mov    %esi,%esi
    2b29:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    2b30:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    2b34:	8b 74 24 0c          	mov    0xc(%esp),%esi
    2b38:	83 c4 10             	add    $0x10,%esp
    2b3b:	c3                   	ret    
    2b3c:	89 1c 24             	mov    %ebx,(%esp)
    2b3f:	b8 03 00 00 00       	mov    $0x3,%eax
    2b44:	83 ce 08             	or     $0x8,%esi
    2b47:	89 44 24 04          	mov    %eax,0x4(%esp)
    2b4b:	e8 fc ff ff ff       	call   2b4c <DPCFM+0x9c>
			2b4c: R_386_PC32	CardDetectionFM
    2b50:	eb c2                	jmp    2b14 <DPCFM+0x64>
    2b52:	89 1c 24             	mov    %ebx,(%esp)
    2b55:	b8 02 00 00 00       	mov    $0x2,%eax
    2b5a:	83 ce 04             	or     $0x4,%esi
    2b5d:	89 44 24 04          	mov    %eax,0x4(%esp)
    2b61:	e8 fc ff ff ff       	call   2b62 <DPCFM+0xb2>
			2b62: R_386_PC32	CardDetectionFM
    2b66:	eb a5                	jmp    2b0d <DPCFM+0x5d>
    2b68:	89 1c 24             	mov    %ebx,(%esp)
    2b6b:	b8 01 00 00 00       	mov    $0x1,%eax
    2b70:	83 ce 02             	or     $0x2,%esi
    2b73:	89 44 24 04          	mov    %eax,0x4(%esp)
    2b77:	e8 fc ff ff ff       	call   2b78 <DPCFM+0xc8>
			2b78: R_386_PC32	CardDetectionFM
    2b7c:	eb 88                	jmp    2b06 <DPCFM+0x56>
    2b7e:	89 04 24             	mov    %eax,(%esp)
    2b81:	e8 aa fe ff ff       	call   2a30 <DPCCard>
    2b86:	89 f2                	mov    %esi,%edx
    2b88:	81 ca 00 08 00 00    	or     $0x800,%edx
    2b8e:	f6 c4 01             	test   $0x1,%ah
    2b91:	0f 45 f2             	cmovne %edx,%esi
    2b94:	e9 66 ff ff ff       	jmp    2aff <DPCFM+0x4f>
    2b99:	89 04 24             	mov    %eax,(%esp)
    2b9c:	e8 8f fe ff ff       	call   2a30 <DPCCard>
    2ba1:	89 f2                	mov    %esi,%edx
    2ba3:	81 ca 00 04 00 00    	or     $0x400,%edx
    2ba9:	f6 c4 01             	test   $0x1,%ah
    2bac:	0f 45 f2             	cmovne %edx,%esi
    2baf:	e9 44 ff ff ff       	jmp    2af8 <DPCFM+0x48>
    2bb4:	89 04 24             	mov    %eax,(%esp)
    2bb7:	e8 74 fe ff ff       	call   2a30 <DPCCard>
    2bbc:	89 f2                	mov    %esi,%edx
    2bbe:	81 ca 00 02 00 00    	or     $0x200,%edx
    2bc4:	f6 c4 01             	test   $0x1,%ah
    2bc7:	0f 45 f2             	cmovne %edx,%esi
    2bca:	e9 1e ff ff ff       	jmp    2aed <DPCFM+0x3d>
    2bcf:	89 04 24             	mov    %eax,(%esp)
    2bd2:	e8 59 fe ff ff       	call   2a30 <DPCCard>
    2bd7:	f6 c4 01             	test   $0x1,%ah
    2bda:	b8 00 01 00 00       	mov    $0x100,%eax
    2bdf:	0f 45 f0             	cmovne %eax,%esi
    2be2:	e9 fb fe ff ff       	jmp    2ae2 <DPCFM+0x32>
    2be7:	89 f6                	mov    %esi,%esi
    2be9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00002bf0 <CloseWriteVirtual>:
    2bf0:	83 ec 10             	sub    $0x10,%esp
    2bf3:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    2bf7:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    2bfb:	31 db                	xor    %ebx,%ebx
    2bfd:	b8 ff 00 00 00       	mov    $0xff,%eax
    2c02:	85 c9                	test   %ecx,%ecx
    2c04:	74 39                	je     2c3f <CloseWriteVirtual+0x4f>
    2c06:	0f b6 41 05          	movzbl 0x5(%ecx),%eax
    2c0a:	0f b6 d0             	movzbl %al,%edx
    2c0d:	83 fa 03             	cmp    $0x3,%edx
    2c10:	74 2a                	je     2c3c <CloseWriteVirtual+0x4c>
    2c12:	7e 0c                	jle    2c20 <CloseWriteVirtual+0x30>
    2c14:	83 fa 22             	cmp    $0x22,%edx
    2c17:	74 4b                	je     2c64 <CloseWriteVirtual+0x74>
    2c19:	7f 05                	jg     2c20 <CloseWriteVirtual+0x30>
    2c1b:	83 fa 12             	cmp    $0x12,%edx
    2c1e:	74 27                	je     2c47 <CloseWriteVirtual+0x57>
    2c20:	c7 04 24 00 08 00 00 	movl   $0x800,(%esp)
			2c23: R_386_32	.rodata.str1.32
    2c27:	0f b6 c0             	movzbl %al,%eax
    2c2a:	89 44 24 08          	mov    %eax,0x8(%esp)
    2c2e:	b8 08 04 00 00       	mov    $0x408,%eax
			2c2f: R_386_32	.rodata
    2c33:	89 44 24 04          	mov    %eax,0x4(%esp)
    2c37:	e8 fc ff ff ff       	call   2c38 <CloseWriteVirtual+0x48>
			2c38: R_386_PC32	printk
    2c3c:	0f b6 c3             	movzbl %bl,%eax
    2c3f:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    2c43:	83 c4 10             	add    $0x10,%esp
    2c46:	c3                   	ret    
    2c47:	8b 11                	mov    (%ecx),%edx
    2c49:	b8 ff 00 00 00       	mov    $0xff,%eax
    2c4e:	85 d2                	test   %edx,%edx
    2c50:	74 ed                	je     2c3f <CloseWriteVirtual+0x4f>
    2c52:	89 14 24             	mov    %edx,(%esp)
    2c55:	e8 fc ff ff ff       	call   2c56 <CloseWriteVirtual+0x66>
			2c56: R_386_PC32	CloseWriteMS
    2c5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2c60:	88 c3                	mov    %al,%bl
    2c62:	eb d8                	jmp    2c3c <CloseWriteVirtual+0x4c>
    2c64:	8b 11                	mov    (%ecx),%edx
    2c66:	b8 ff 00 00 00       	mov    $0xff,%eax
    2c6b:	85 d2                	test   %edx,%edx
    2c6d:	74 d0                	je     2c3f <CloseWriteVirtual+0x4f>
    2c6f:	89 14 24             	mov    %edx,(%esp)
    2c72:	e8 fc ff ff ff       	call   2c73 <CloseWriteVirtual+0x83>
			2c73: R_386_PC32	CloseWriteMSPro
    2c77:	eb e7                	jmp    2c60 <CloseWriteVirtual+0x70>
    2c79:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00002c80 <WriteSectorsFM>:
    2c80:	83 ec 28             	sub    $0x28,%esp
    2c83:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
    2c87:	0f b6 44 24 3c       	movzbl 0x3c(%esp),%eax
    2c8c:	89 5c 24 18          	mov    %ebx,0x18(%esp)
    2c90:	b3 ff                	mov    $0xff,%bl
    2c92:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    2c96:	8b 74 24 38          	mov    0x38(%esp),%esi
    2c9a:	89 7c 24 20          	mov    %edi,0x20(%esp)
    2c9e:	8b 7c 24 34          	mov    0x34(%esp),%edi
    2ca2:	89 6c 24 24          	mov    %ebp,0x24(%esp)
    2ca6:	8b 6c 24 30          	mov    0x30(%esp),%ebp
    2caa:	88 44 24 17          	mov    %al,0x17(%esp)
    2cae:	0f b6 41 05          	movzbl 0x5(%ecx),%eax
    2cb2:	0f b6 d0             	movzbl %al,%edx
    2cb5:	83 fa 03             	cmp    $0x3,%edx
    2cb8:	74 6a                	je     2d24 <WriteSectorsFM+0xa4>
    2cba:	7e 14                	jle    2cd0 <WriteSectorsFM+0x50>
    2cbc:	83 fa 22             	cmp    $0x22,%edx
    2cbf:	74 42                	je     2d03 <WriteSectorsFM+0x83>
    2cc1:	7f 0d                	jg     2cd0 <WriteSectorsFM+0x50>
    2cc3:	83 fa 12             	cmp    $0x12,%edx
    2cc6:	74 3b                	je     2d03 <WriteSectorsFM+0x83>
    2cc8:	90                   	nop    
    2cc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    2cd0:	c7 04 24 00 08 00 00 	movl   $0x800,(%esp)
			2cd3: R_386_32	.rodata.str1.32
    2cd7:	0f b6 c0             	movzbl %al,%eax
    2cda:	ba 1a 04 00 00       	mov    $0x41a,%edx
			2cdb: R_386_32	.rodata
    2cdf:	89 44 24 08          	mov    %eax,0x8(%esp)
    2ce3:	89 54 24 04          	mov    %edx,0x4(%esp)
    2ce7:	e8 fc ff ff ff       	call   2ce8 <WriteSectorsFM+0x68>
			2ce8: R_386_PC32	printk
    2cec:	0f b6 c3             	movzbl %bl,%eax
    2cef:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    2cf3:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    2cf7:	8b 7c 24 20          	mov    0x20(%esp),%edi
    2cfb:	8b 6c 24 24          	mov    0x24(%esp),%ebp
    2cff:	83 c4 28             	add    $0x28,%esp
    2d02:	c3                   	ret    
    2d03:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
    2d08:	89 74 24 0c          	mov    %esi,0xc(%esp)
    2d0c:	89 7c 24 08          	mov    %edi,0x8(%esp)
    2d10:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    2d14:	89 44 24 10          	mov    %eax,0x10(%esp)
    2d18:	89 0c 24             	mov    %ecx,(%esp)
    2d1b:	e8 fc ff ff ff       	call   2d1c <WriteSectorsFM+0x9c>
			2d1c: R_386_PC32	WriteSectorsMemoryStick
    2d20:	88 c3                	mov    %al,%bl
    2d22:	eb c8                	jmp    2cec <WriteSectorsFM+0x6c>
    2d24:	8b 11                	mov    (%ecx),%edx
    2d26:	b8 ff 00 00 00       	mov    $0xff,%eax
    2d2b:	85 d2                	test   %edx,%edx
    2d2d:	74 c0                	je     2cef <WriteSectorsFM+0x6f>
    2d2f:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
    2d34:	89 74 24 0c          	mov    %esi,0xc(%esp)
    2d38:	89 7c 24 08          	mov    %edi,0x8(%esp)
    2d3c:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    2d40:	89 14 24             	mov    %edx,(%esp)
    2d43:	89 44 24 10          	mov    %eax,0x10(%esp)
    2d47:	e8 fc ff ff ff       	call   2d48 <WriteSectorsFM+0xc8>
			2d48: R_386_PC32	WriteSectorsMMCSD
    2d4c:	eb d2                	jmp    2d20 <WriteSectorsFM+0xa0>
    2d4e:	89 f6                	mov    %esi,%esi

00002d50 <ReadSectorsFM>:
    2d50:	83 ec 28             	sub    $0x28,%esp
    2d53:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
    2d57:	0f b6 44 24 3c       	movzbl 0x3c(%esp),%eax
    2d5c:	89 5c 24 18          	mov    %ebx,0x18(%esp)
    2d60:	b3 ff                	mov    $0xff,%bl
    2d62:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    2d66:	8b 74 24 38          	mov    0x38(%esp),%esi
    2d6a:	89 7c 24 20          	mov    %edi,0x20(%esp)
    2d6e:	8b 7c 24 34          	mov    0x34(%esp),%edi
    2d72:	89 6c 24 24          	mov    %ebp,0x24(%esp)
    2d76:	8b 6c 24 30          	mov    0x30(%esp),%ebp
    2d7a:	88 44 24 17          	mov    %al,0x17(%esp)
    2d7e:	0f b6 41 05          	movzbl 0x5(%ecx),%eax
    2d82:	0f b6 d0             	movzbl %al,%edx
    2d85:	83 fa 03             	cmp    $0x3,%edx
    2d88:	74 6a                	je     2df4 <ReadSectorsFM+0xa4>
    2d8a:	7e 14                	jle    2da0 <ReadSectorsFM+0x50>
    2d8c:	83 fa 22             	cmp    $0x22,%edx
    2d8f:	74 42                	je     2dd3 <ReadSectorsFM+0x83>
    2d91:	7f 0d                	jg     2da0 <ReadSectorsFM+0x50>
    2d93:	83 fa 12             	cmp    $0x12,%edx
    2d96:	74 3b                	je     2dd3 <ReadSectorsFM+0x83>
    2d98:	90                   	nop    
    2d99:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    2da0:	c7 04 24 00 08 00 00 	movl   $0x800,(%esp)
			2da3: R_386_32	.rodata.str1.32
    2da7:	0f b6 c0             	movzbl %al,%eax
    2daa:	b9 29 04 00 00       	mov    $0x429,%ecx
			2dab: R_386_32	.rodata
    2daf:	89 44 24 08          	mov    %eax,0x8(%esp)
    2db3:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    2db7:	e8 fc ff ff ff       	call   2db8 <ReadSectorsFM+0x68>
			2db8: R_386_PC32	printk
    2dbc:	0f b6 c3             	movzbl %bl,%eax
    2dbf:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    2dc3:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    2dc7:	8b 7c 24 20          	mov    0x20(%esp),%edi
    2dcb:	8b 6c 24 24          	mov    0x24(%esp),%ebp
    2dcf:	83 c4 28             	add    $0x28,%esp
    2dd2:	c3                   	ret    
    2dd3:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
    2dd8:	89 74 24 0c          	mov    %esi,0xc(%esp)
    2ddc:	89 7c 24 08          	mov    %edi,0x8(%esp)
    2de0:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    2de4:	89 44 24 10          	mov    %eax,0x10(%esp)
    2de8:	89 0c 24             	mov    %ecx,(%esp)
    2deb:	e8 fc ff ff ff       	call   2dec <ReadSectorsFM+0x9c>
			2dec: R_386_PC32	ReadSectorsMemoryStick
    2df0:	88 c3                	mov    %al,%bl
    2df2:	eb c8                	jmp    2dbc <ReadSectorsFM+0x6c>
    2df4:	8b 11                	mov    (%ecx),%edx
    2df6:	b8 ff 00 00 00       	mov    $0xff,%eax
    2dfb:	85 d2                	test   %edx,%edx
    2dfd:	74 c0                	je     2dbf <ReadSectorsFM+0x6f>
    2dff:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
    2e04:	89 74 24 0c          	mov    %esi,0xc(%esp)
    2e08:	89 7c 24 08          	mov    %edi,0x8(%esp)
    2e0c:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    2e10:	89 14 24             	mov    %edx,(%esp)
    2e13:	89 44 24 10          	mov    %eax,0x10(%esp)
    2e17:	e8 fc ff ff ff       	call   2e18 <ReadSectorsFM+0xc8>
			2e18: R_386_PC32	ReadSectorsMMCSD
    2e1c:	eb d2                	jmp    2df0 <ReadSectorsFM+0xa0>
    2e1e:	89 f6                	mov    %esi,%esi

00002e20 <WriteFlash>:
    2e20:	55                   	push   %ebp
    2e21:	57                   	push   %edi
    2e22:	56                   	push   %esi
    2e23:	53                   	push   %ebx
    2e24:	83 ec 1c             	sub    $0x1c,%esp
    2e27:	8b 7c 24 34          	mov    0x34(%esp),%edi
    2e2b:	c6 44 24 1b 00       	movb   $0x0,0x1b(%esp)
    2e30:	8b 74 24 38          	mov    0x38(%esp),%esi
    2e34:	8b 6c 24 40          	mov    0x40(%esp),%ebp
    2e38:	c6 44 24 1a 00       	movb   $0x0,0x1a(%esp)
    2e3d:	ba ff 00 00 00       	mov    $0xff,%edx
    2e42:	8b 44 24 30          	mov    0x30(%esp),%eax
    2e46:	85 c0                	test   %eax,%eax
    2e48:	0f 84 1b 02 00 00    	je     3069 <WriteFlash+0x249>
    2e4e:	8b 44 24 30          	mov    0x30(%esp),%eax
    2e52:	89 04 24             	mov    %eax,(%esp)
    2e55:	e8 86 ed ff ff       	call   1be0 <GetFlashPointer>
    2e5a:	85 c0                	test   %eax,%eax
    2e5c:	89 c3                	mov    %eax,%ebx
    2e5e:	ba ff 00 00 00       	mov    $0xff,%edx
    2e63:	0f 84 00 02 00 00    	je     3069 <WriteFlash+0x249>
    2e69:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    2e6d:	ba c0 00 00 00       	mov    $0xc0,%edx
    2e72:	3c 3f                	cmp    $0x3f,%al
    2e74:	0f 87 ef 01 00 00    	ja     3069 <WriteFlash+0x249>
    2e7a:	83 ff ff             	cmp    $0xffffffff,%edi
    2e7d:	0f 84 0d 03 00 00    	je     3190 <WriteFlash+0x370>
    2e83:	0f b7 06             	movzwl (%esi),%eax
    2e86:	66 89 43 1a          	mov    %ax,0x1a(%ebx)
    2e8a:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    2e8e:	66 0f b6 c0          	movzbw %al,%ax
    2e92:	66 39 43 1a          	cmp    %ax,0x1a(%ebx)
    2e96:	73 07                	jae    2e9f <WriteFlash+0x7f>
    2e98:	0f b6 43 1a          	movzbl 0x1a(%ebx),%eax
    2e9c:	88 45 00             	mov    %al,0x0(%ebp)
    2e9f:	80 7b 08 00          	cmpb   $0x0,0x8(%ebx)
    2ea3:	0f 85 ce 02 00 00    	jne    3177 <WriteFlash+0x357>
    2ea9:	c6 43 08 01          	movb   $0x1,0x8(%ebx)
    2ead:	66 83 7b 1a 00       	cmpw   $0x0,0x1a(%ebx)
    2eb2:	0f 84 a8 01 00 00    	je     3060 <WriteFlash+0x240>
    2eb8:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
    2ebc:	0f 84 9e 01 00 00    	je     3060 <WriteFlash+0x240>
    2ec2:	83 ff ff             	cmp    $0xffffffff,%edi
    2ec5:	74 71                	je     2f38 <WriteFlash+0x118>
    2ec7:	8b 43 24             	mov    0x24(%ebx),%eax
    2eca:	40                   	inc    %eax
    2ecb:	39 c7                	cmp    %eax,%edi
    2ecd:	0f 84 80 02 00 00    	je     3153 <WriteFlash+0x333>
    2ed3:	8b 44 24 30          	mov    0x30(%esp),%eax
    2ed7:	89 04 24             	mov    %eax,(%esp)
    2eda:	e8 11 fd ff ff       	call   2bf0 <CloseWriteVirtual>
    2edf:	88 44 24 1b          	mov    %al,0x1b(%esp)
    2ee3:	80 7c 24 1b 00       	cmpb   $0x0,0x1b(%esp)
    2ee8:	0f 85 11 02 00 00    	jne    30ff <WriteFlash+0x2df>
    2eee:	0f b7 06             	movzwl (%esi),%eax
    2ef1:	8d 44 38 ff          	lea    0xffffffff(%eax,%edi,1),%eax
    2ef5:	89 43 24             	mov    %eax,0x24(%ebx)
    2ef8:	b8 ff ff 00 00       	mov    $0xffff,%eax
    2efd:	89 44 24 04          	mov    %eax,0x4(%esp)
    2f01:	8b 43 28             	mov    0x28(%ebx),%eax
    2f04:	89 04 24             	mov    %eax,(%esp)
    2f07:	e8 fc ff ff ff       	call   2f08 <WriteFlash+0xe8>
			2f08: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    2f0c:	b8 01 00 00 00       	mov    $0x1,%eax
    2f11:	89 44 24 04          	mov    %eax,0x4(%esp)
    2f15:	8b 43 28             	mov    0x28(%ebx),%eax
    2f18:	89 04 24             	mov    %eax,(%esp)
    2f1b:	e8 fc ff ff ff       	call   2f1c <WriteFlash+0xfc>
			2f1c: R_386_PC32	FIFO_CONTROL_SOCK2
    2f20:	c6 43 07 00          	movb   $0x0,0x7(%ebx)
    2f24:	b8 05 00 00 00       	mov    $0x5,%eax
    2f29:	89 44 24 04          	mov    %eax,0x4(%esp)
    2f2d:	8b 43 28             	mov    0x28(%ebx),%eax
    2f30:	89 04 24             	mov    %eax,(%esp)
    2f33:	e8 fc ff ff ff       	call   2f34 <WriteFlash+0x114>
			2f34: R_386_PC32	DMA_FIFO_INT_ENABLE_SET_SOCK
    2f38:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    2f3c:	89 44 24 04          	mov    %eax,0x4(%esp)
    2f40:	8b 43 28             	mov    0x28(%ebx),%eax
    2f43:	89 04 24             	mov    %eax,(%esp)
    2f46:	e8 fc ff ff ff       	call   2f47 <WriteFlash+0x127>
			2f47: R_386_PC32	DMA_ADDRESS_SOCK
    2f4b:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    2f4f:	c1 e0 08             	shl    $0x8,%eax
    2f52:	0d 01 80 00 00       	or     $0x8001,%eax
    2f57:	89 44 24 04          	mov    %eax,0x4(%esp)
    2f5b:	8b 43 28             	mov    0x28(%ebx),%eax
    2f5e:	89 04 24             	mov    %eax,(%esp)
    2f61:	e8 fc ff ff ff       	call   2f62 <WriteFlash+0x142>
			2f62: R_386_PC32	DMA_CONTROL_SOCK2
    2f66:	0f b7 53 1a          	movzwl 0x1a(%ebx),%edx
    2f6a:	66 85 d2             	test   %dx,%dx
    2f6d:	0f 84 7d 00 00 00    	je     2ff0 <WriteFlash+0x1d0>
    2f73:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
    2f77:	74 77                	je     2ff0 <WriteFlash+0x1d0>
    2f79:	8d 43 1a             	lea    0x1a(%ebx),%eax
    2f7c:	89 44 24 14          	mov    %eax,0x14(%esp)
    2f80:	0f b6 44 24 1a       	movzbl 0x1a(%esp),%eax
    2f85:	0f b7 f2             	movzwl %dx,%esi
    2f88:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    2f8c:	89 7c 24 04          	mov    %edi,0x4(%esp)
    2f90:	89 44 24 10          	mov    %eax,0x10(%esp)
    2f94:	8b 44 24 14          	mov    0x14(%esp),%eax
    2f98:	89 44 24 08          	mov    %eax,0x8(%esp)
    2f9c:	8b 44 24 30          	mov    0x30(%esp),%eax
    2fa0:	89 04 24             	mov    %eax,(%esp)
    2fa3:	e8 d8 fc ff ff       	call   2c80 <WriteSectorsFM>
    2fa8:	88 44 24 1b          	mov    %al,0x1b(%esp)
    2fac:	84 c0                	test   %al,%al
    2fae:	0f 85 ed 00 00 00    	jne    30a1 <WriteFlash+0x281>
    2fb4:	80 7b 07 00          	cmpb   $0x0,0x7(%ebx)
    2fb8:	74 05                	je     2fbf <WriteFlash+0x19f>
    2fba:	c6 44 24 1b c2       	movb   $0xc2,0x1b(%esp)
    2fbf:	80 7c 24 1b 00       	cmpb   $0x0,0x1b(%esp)
    2fc4:	0f 85 d7 00 00 00    	jne    30a1 <WriteFlash+0x281>
    2fca:	0f b7 43 1a          	movzwl 0x1a(%ebx),%eax
    2fce:	c6 44 24 1a 01       	movb   $0x1,0x1a(%esp)
    2fd3:	89 c2                	mov    %eax,%edx
    2fd5:	29 d6                	sub    %edx,%esi
    2fd7:	0f b7 c6             	movzwl %si,%eax
    2fda:	83 ff ff             	cmp    $0xffffffff,%edi
    2fdd:	8d 04 38             	lea    (%eax,%edi,1),%eax
    2fe0:	0f 45 f8             	cmovne %eax,%edi
    2fe3:	66 85 d2             	test   %dx,%dx
    2fe6:	74 08                	je     2ff0 <WriteFlash+0x1d0>
    2fe8:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
    2fec:	75 92                	jne    2f80 <WriteFlash+0x160>
    2fee:	89 f6                	mov    %esi,%esi
    2ff0:	f6 03 01             	testb  $0x1,(%ebx)
    2ff3:	75 5c                	jne    3051 <WriteFlash+0x231>
    2ff5:	8d 6b 1c             	lea    0x1c(%ebx),%ebp
    2ff8:	bf 00 e0 ff ff       	mov    $0xffffe000,%edi
    2ffd:	21 e7                	and    %esp,%edi
    2fff:	90                   	nop    
    3000:	b8 01 00 00 00       	mov    $0x1,%eax
    3005:	e8 fc ff ff ff       	call   3006 <WriteFlash+0x1e6>
			3006: R_386_PC32	add_preempt_count
    300a:	ba d0 07 00 00       	mov    $0x7d0,%edx
    300f:	89 e8                	mov    %ebp,%eax
    3011:	e8 fc ff ff ff       	call   3012 <WriteFlash+0x1f2>
			3012: R_386_PC32	interruptible_sleep_on_timeout
    3016:	89 c6                	mov    %eax,%esi
    3018:	b8 01 00 00 00       	mov    $0x1,%eax
    301d:	e8 fc ff ff ff       	call   301e <WriteFlash+0x1fe>
			301e: R_386_PC32	sub_preempt_count
    3022:	8b 47 08             	mov    0x8(%edi),%eax
    3025:	a8 08                	test   $0x8,%al
    3027:	75 71                	jne    309a <WriteFlash+0x27a>
    3029:	89 74 24 08          	mov    %esi,0x8(%esp)
    302d:	b8 37 04 00 00       	mov    $0x437,%eax
			302e: R_386_32	.rodata
    3032:	89 44 24 04          	mov    %eax,0x4(%esp)
    3036:	c7 04 24 40 08 00 00 	movl   $0x840,(%esp)
			3039: R_386_32	.rodata.str1.32
    303d:	e8 fc ff ff ff       	call   303e <WriteFlash+0x21e>
			303e: R_386_PC32	printk
    3042:	85 f6                	test   %esi,%esi
    3044:	74 38                	je     307e <WriteFlash+0x25e>
    3046:	80 7b 06 00          	cmpb   $0x0,0x6(%ebx)
    304a:	75 27                	jne    3073 <WriteFlash+0x253>
    304c:	f6 03 01             	testb  $0x1,(%ebx)
    304f:	74 af                	je     3000 <WriteFlash+0x1e0>
    3051:	66 c7 03 00 00       	movw   $0x0,(%ebx)
    3056:	8d 76 00             	lea    0x0(%esi),%esi
    3059:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    3060:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
    3064:	0f b6 54 24 1b       	movzbl 0x1b(%esp),%edx
    3069:	83 c4 1c             	add    $0x1c,%esp
    306c:	89 d0                	mov    %edx,%eax
    306e:	5b                   	pop    %ebx
    306f:	5e                   	pop    %esi
    3070:	5f                   	pop    %edi
    3071:	5d                   	pop    %ebp
    3072:	c3                   	ret    
    3073:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
    3077:	ba 86 00 00 00       	mov    $0x86,%edx
    307c:	eb eb                	jmp    3069 <WriteFlash+0x249>
    307e:	c7 04 24 80 08 00 00 	movl   $0x880,(%esp)
			3081: R_386_32	.rodata.str1.32
    3085:	ba 37 04 00 00       	mov    $0x437,%edx
			3086: R_386_32	.rodata
    308a:	89 54 24 04          	mov    %edx,0x4(%esp)
    308e:	e8 fc ff ff ff       	call   308f <WriteFlash+0x26f>
			308f: R_386_PC32	printk
    3093:	ba ff 00 00 00       	mov    $0xff,%edx
    3098:	eb cf                	jmp    3069 <WriteFlash+0x249>
    309a:	e8 fc ff ff ff       	call   309b <WriteFlash+0x27b>
			309b: R_386_PC32	preempt_schedule
    309f:	eb 88                	jmp    3029 <WriteFlash+0x209>
    30a1:	8b 43 28             	mov    0x28(%ebx),%eax
    30a4:	89 04 24             	mov    %eax,(%esp)
    30a7:	e8 fc ff ff ff       	call   30a8 <WriteFlash+0x288>
			30a8: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    30ac:	b8 ff ff 00 00       	mov    $0xffff,%eax
    30b1:	89 44 24 04          	mov    %eax,0x4(%esp)
    30b5:	8b 43 28             	mov    0x28(%ebx),%eax
    30b8:	89 04 24             	mov    %eax,(%esp)
    30bb:	e8 fc ff ff ff       	call   30bc <WriteFlash+0x29c>
			30bc: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    30c0:	b8 02 00 00 00       	mov    $0x2,%eax
    30c5:	89 44 24 04          	mov    %eax,0x4(%esp)
    30c9:	8b 43 28             	mov    0x28(%ebx),%eax
    30cc:	89 04 24             	mov    %eax,(%esp)
    30cf:	e8 fc ff ff ff       	call   30d0 <WriteFlash+0x2b0>
			30d0: R_386_PC32	DMA_CONTROL_SOCK2
    30d4:	80 7c 24 1b 82       	cmpb   $0x82,0x1b(%esp)
    30d9:	74 1a                	je     30f5 <WriteFlash+0x2d5>
    30db:	0f b6 44 24 1b       	movzbl 0x1b(%esp),%eax
    30e0:	c7 04 24 c0 08 00 00 	movl   $0x8c0,(%esp)
			30e3: R_386_32	.rodata.str1.32
    30e7:	89 44 24 04          	mov    %eax,0x4(%esp)
    30eb:	e8 fc ff ff ff       	call   30ec <WriteFlash+0x2cc>
			30ec: R_386_PC32	printk
    30f0:	e9 6b ff ff ff       	jmp    3060 <WriteFlash+0x240>
    30f5:	c6 44 24 1b 00       	movb   $0x0,0x1b(%esp)
    30fa:	e9 61 ff ff ff       	jmp    3060 <WriteFlash+0x240>
    30ff:	8b 43 28             	mov    0x28(%ebx),%eax
    3102:	bf 37 04 00 00       	mov    $0x437,%edi
			3103: R_386_32	.rodata
    3107:	be ff ff 00 00       	mov    $0xffff,%esi
    310c:	89 04 24             	mov    %eax,(%esp)
    310f:	e8 fc ff ff ff       	call   3110 <WriteFlash+0x2f0>
			3110: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    3114:	89 7c 24 04          	mov    %edi,0x4(%esp)
    3118:	0f b7 c0             	movzwl %ax,%eax
    311b:	89 44 24 08          	mov    %eax,0x8(%esp)
    311f:	c7 04 24 00 09 00 00 	movl   $0x900,(%esp)
			3122: R_386_32	.rodata.str1.32
    3126:	e8 fc ff ff ff       	call   3127 <WriteFlash+0x307>
			3127: R_386_PC32	printk
    312b:	89 74 24 04          	mov    %esi,0x4(%esp)
    312f:	8b 43 28             	mov    0x28(%ebx),%eax
    3132:	89 04 24             	mov    %eax,(%esp)
    3135:	e8 fc ff ff ff       	call   3136 <WriteFlash+0x316>
			3136: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    313a:	b9 02 00 00 00       	mov    $0x2,%ecx
    313f:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    3143:	8b 43 28             	mov    0x28(%ebx),%eax
    3146:	89 04 24             	mov    %eax,(%esp)
    3149:	e8 fc ff ff ff       	call   314a <WriteFlash+0x32a>
			314a: R_386_PC32	DMA_CONTROL_SOCK2
    314e:	e9 0d ff ff ff       	jmp    3060 <WriteFlash+0x240>
    3153:	8b 43 28             	mov    0x28(%ebx),%eax
    3156:	89 04 24             	mov    %eax,(%esp)
    3159:	e8 72 ec ff ff       	call   1dd0 <GetMediaIDSock>
    315e:	fe c8                	dec    %al
    3160:	0f 85 88 fd ff ff    	jne    2eee <WriteFlash+0xce>
    3166:	c7 04 24 60 09 00 00 	movl   $0x960,(%esp)
			3169: R_386_32	.rodata.str1.32
    316d:	e8 fc ff ff ff       	call   316e <WriteFlash+0x34e>
			316e: R_386_PC32	printk
    3172:	e9 5c fd ff ff       	jmp    2ed3 <WriteFlash+0xb3>
    3177:	c7 04 24 a0 09 00 00 	movl   $0x9a0,(%esp)
			317a: R_386_32	.rodata.str1.32
    317e:	e8 fc ff ff ff       	call   317f <WriteFlash+0x35f>
			317f: R_386_PC32	printk
    3183:	ba c3 00 00 00       	mov    $0xc3,%edx
    3188:	e9 dc fe ff ff       	jmp    3069 <WriteFlash+0x249>
    318d:	8d 76 00             	lea    0x0(%esi),%esi
    3190:	c6 44 24 1a 01       	movb   $0x1,0x1a(%esp)
    3195:	e9 f4 fc ff ff       	jmp    2e8e <WriteFlash+0x6e>
    319a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000031a0 <ReadFlash>:
    31a0:	55                   	push   %ebp
    31a1:	57                   	push   %edi
    31a2:	56                   	push   %esi
    31a3:	53                   	push   %ebx
    31a4:	83 ec 1c             	sub    $0x1c,%esp
    31a7:	8b 7c 24 34          	mov    0x34(%esp),%edi
    31ab:	c6 44 24 1a 00       	movb   $0x0,0x1a(%esp)
    31b0:	8b 5c 24 3c          	mov    0x3c(%esp),%ebx
    31b4:	8b 6c 24 40          	mov    0x40(%esp),%ebp
    31b8:	ba ff 00 00 00       	mov    $0xff,%edx
    31bd:	8b 4c 24 30          	mov    0x30(%esp),%ecx
    31c1:	85 c9                	test   %ecx,%ecx
    31c3:	0f 84 16 02 00 00    	je     33df <ReadFlash+0x23f>
    31c9:	8b 44 24 30          	mov    0x30(%esp),%eax
    31cd:	89 04 24             	mov    %eax,(%esp)
    31d0:	e8 0b ea ff ff       	call   1be0 <GetFlashPointer>
    31d5:	85 c0                	test   %eax,%eax
    31d7:	89 c6                	mov    %eax,%esi
    31d9:	ba ff 00 00 00       	mov    $0xff,%edx
    31de:	0f 84 fb 01 00 00    	je     33df <ReadFlash+0x23f>
    31e4:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    31e8:	ba c0 00 00 00       	mov    $0xc0,%edx
    31ed:	3c 3f                	cmp    $0x3f,%al
    31ef:	0f 87 ea 01 00 00    	ja     33df <ReadFlash+0x23f>
    31f5:	83 ff ff             	cmp    $0xffffffff,%edi
    31f8:	0f 84 32 03 00 00    	je     3530 <ReadFlash+0x390>
    31fe:	8b 54 24 38          	mov    0x38(%esp),%edx
    3202:	0f b7 02             	movzwl (%edx),%eax
    3205:	66 89 46 18          	mov    %ax,0x18(%esi)
    3209:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    320d:	66 0f b6 c0          	movzbw %al,%ax
    3211:	66 39 46 18          	cmp    %ax,0x18(%esi)
    3215:	73 07                	jae    321e <ReadFlash+0x7e>
    3217:	0f b6 46 18          	movzbl 0x18(%esi),%eax
    321b:	88 45 00             	mov    %al,0x0(%ebp)
    321e:	80 7e 08 00          	cmpb   $0x0,0x8(%esi)
    3222:	0f 85 eb 02 00 00    	jne    3513 <ReadFlash+0x373>
    3228:	c6 46 08 01          	movb   $0x1,0x8(%esi)
    322c:	8b 44 24 30          	mov    0x30(%esp),%eax
    3230:	89 04 24             	mov    %eax,(%esp)
    3233:	e8 b8 f9 ff ff       	call   2bf0 <CloseWriteVirtual>
    3238:	88 44 24 1b          	mov    %al,0x1b(%esp)
    323c:	84 c0                	test   %al,%al
    323e:	0f 85 82 02 00 00    	jne    34c6 <ReadFlash+0x326>
    3244:	66 83 7e 18 00       	cmpw   $0x0,0x18(%esi)
    3249:	0f 84 87 01 00 00    	je     33d6 <ReadFlash+0x236>
    324f:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
    3253:	0f 84 7d 01 00 00    	je     33d6 <ReadFlash+0x236>
    3259:	83 ff ff             	cmp    $0xffffffff,%edi
    325c:	74 40                	je     329e <ReadFlash+0xfe>
    325e:	b8 ff ff 00 00       	mov    $0xffff,%eax
    3263:	89 44 24 04          	mov    %eax,0x4(%esp)
    3267:	8b 46 28             	mov    0x28(%esi),%eax
    326a:	89 04 24             	mov    %eax,(%esp)
    326d:	e8 fc ff ff ff       	call   326e <ReadFlash+0xce>
			326e: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    3272:	b9 01 00 00 00       	mov    $0x1,%ecx
    3277:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    327b:	8b 46 28             	mov    0x28(%esi),%eax
    327e:	89 04 24             	mov    %eax,(%esp)
    3281:	e8 fc ff ff ff       	call   3282 <ReadFlash+0xe2>
			3282: R_386_PC32	FIFO_CONTROL_SOCK2
    3286:	c6 46 07 00          	movb   $0x0,0x7(%esi)
    328a:	ba 05 00 00 00       	mov    $0x5,%edx
    328f:	89 54 24 04          	mov    %edx,0x4(%esp)
    3293:	8b 46 28             	mov    0x28(%esi),%eax
    3296:	89 04 24             	mov    %eax,(%esp)
    3299:	e8 fc ff ff ff       	call   329a <ReadFlash+0xfa>
			329a: R_386_PC32	DMA_FIFO_INT_ENABLE_SET_SOCK
    329e:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    32a2:	8b 46 28             	mov    0x28(%esi),%eax
    32a5:	89 04 24             	mov    %eax,(%esp)
    32a8:	e8 fc ff ff ff       	call   32a9 <ReadFlash+0x109>
			32a9: R_386_PC32	DMA_ADDRESS_SOCK
    32ad:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    32b1:	c1 e0 08             	shl    $0x8,%eax
    32b4:	83 c8 01             	or     $0x1,%eax
    32b7:	89 44 24 04          	mov    %eax,0x4(%esp)
    32bb:	8b 46 28             	mov    0x28(%esi),%eax
    32be:	89 04 24             	mov    %eax,(%esp)
    32c1:	e8 fc ff ff ff       	call   32c2 <ReadFlash+0x122>
			32c2: R_386_PC32	DMA_CONTROL_SOCK2
    32c6:	0f b7 56 18          	movzwl 0x18(%esi),%edx
    32ca:	66 85 d2             	test   %dx,%dx
    32cd:	0f 84 97 00 00 00    	je     336a <ReadFlash+0x1ca>
    32d3:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
    32d7:	0f 84 8d 00 00 00    	je     336a <ReadFlash+0x1ca>
    32dd:	8d 46 18             	lea    0x18(%esi),%eax
    32e0:	89 44 24 14          	mov    %eax,0x14(%esp)
    32e4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    32ea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
    32f0:	0f b6 44 24 1a       	movzbl 0x1a(%esp),%eax
    32f5:	0f b7 da             	movzwl %dx,%ebx
    32f8:	8b 54 24 14          	mov    0x14(%esp),%edx
    32fc:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    3300:	89 7c 24 04          	mov    %edi,0x4(%esp)
    3304:	89 44 24 10          	mov    %eax,0x10(%esp)
    3308:	8b 44 24 30          	mov    0x30(%esp),%eax
    330c:	89 54 24 08          	mov    %edx,0x8(%esp)
    3310:	89 04 24             	mov    %eax,(%esp)
    3313:	e8 38 fa ff ff       	call   2d50 <ReadSectorsFM>
    3318:	88 44 24 1b          	mov    %al,0x1b(%esp)
    331c:	84 c0                	test   %al,%al
    331e:	75 10                	jne    3330 <ReadFlash+0x190>
    3320:	80 7e 07 00          	cmpb   $0x0,0x7(%esi)
    3324:	74 0a                	je     3330 <ReadFlash+0x190>
    3326:	c6 44 24 1b c2       	movb   $0xc2,0x1b(%esp)
    332b:	90                   	nop    
    332c:	8d 74 26 00          	lea    0x0(%esi),%esi
    3330:	80 7c 24 1b 68       	cmpb   $0x68,0x1b(%esp)
    3335:	0f 84 49 01 00 00    	je     3484 <ReadFlash+0x2e4>
    333b:	80 7c 24 1b 00       	cmpb   $0x0,0x1b(%esp)
    3340:	0f 85 d1 00 00 00    	jne    3417 <ReadFlash+0x277>
    3346:	0f b7 46 18          	movzwl 0x18(%esi),%eax
    334a:	c6 44 24 1a 01       	movb   $0x1,0x1a(%esp)
    334f:	89 c2                	mov    %eax,%edx
    3351:	29 d3                	sub    %edx,%ebx
    3353:	0f b7 c3             	movzwl %bx,%eax
    3356:	83 ff ff             	cmp    $0xffffffff,%edi
    3359:	8d 04 38             	lea    (%eax,%edi,1),%eax
    335c:	0f 45 f8             	cmovne %eax,%edi
    335f:	66 85 d2             	test   %dx,%dx
    3362:	74 06                	je     336a <ReadFlash+0x1ca>
    3364:	80 7d 00 00          	cmpb   $0x0,0x0(%ebp)
    3368:	75 86                	jne    32f0 <ReadFlash+0x150>
    336a:	f6 06 01             	testb  $0x1,(%esi)
    336d:	75 62                	jne    33d1 <ReadFlash+0x231>
    336f:	8d 6e 1c             	lea    0x1c(%esi),%ebp
    3372:	bf 00 e0 ff ff       	mov    $0xffffe000,%edi
    3377:	21 e7                	and    %esp,%edi
    3379:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    3380:	b8 01 00 00 00       	mov    $0x1,%eax
    3385:	e8 fc ff ff ff       	call   3386 <ReadFlash+0x1e6>
			3386: R_386_PC32	add_preempt_count
    338a:	ba d0 07 00 00       	mov    $0x7d0,%edx
    338f:	89 e8                	mov    %ebp,%eax
    3391:	e8 fc ff ff ff       	call   3392 <ReadFlash+0x1f2>
			3392: R_386_PC32	interruptible_sleep_on_timeout
    3396:	89 c3                	mov    %eax,%ebx
    3398:	b8 01 00 00 00       	mov    $0x1,%eax
    339d:	e8 fc ff ff ff       	call   339e <ReadFlash+0x1fe>
			339e: R_386_PC32	sub_preempt_count
    33a2:	8b 47 08             	mov    0x8(%edi),%eax
    33a5:	a8 08                	test   $0x8,%al
    33a7:	75 67                	jne    3410 <ReadFlash+0x270>
    33a9:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    33ad:	b8 42 04 00 00       	mov    $0x442,%eax
			33ae: R_386_32	.rodata
    33b2:	89 44 24 04          	mov    %eax,0x4(%esp)
    33b6:	c7 04 24 40 08 00 00 	movl   $0x840,(%esp)
			33b9: R_386_32	.rodata.str1.32
    33bd:	e8 fc ff ff ff       	call   33be <ReadFlash+0x21e>
			33be: R_386_PC32	printk
    33c2:	85 db                	test   %ebx,%ebx
    33c4:	74 2e                	je     33f4 <ReadFlash+0x254>
    33c6:	80 7e 06 00          	cmpb   $0x0,0x6(%esi)
    33ca:	75 1d                	jne    33e9 <ReadFlash+0x249>
    33cc:	f6 06 01             	testb  $0x1,(%esi)
    33cf:	74 af                	je     3380 <ReadFlash+0x1e0>
    33d1:	66 c7 06 00 00       	movw   $0x0,(%esi)
    33d6:	c6 46 08 00          	movb   $0x0,0x8(%esi)
    33da:	0f b6 54 24 1b       	movzbl 0x1b(%esp),%edx
    33df:	83 c4 1c             	add    $0x1c,%esp
    33e2:	89 d0                	mov    %edx,%eax
    33e4:	5b                   	pop    %ebx
    33e5:	5e                   	pop    %esi
    33e6:	5f                   	pop    %edi
    33e7:	5d                   	pop    %ebp
    33e8:	c3                   	ret    
    33e9:	c6 46 08 00          	movb   $0x0,0x8(%esi)
    33ed:	ba 86 00 00 00       	mov    $0x86,%edx
    33f2:	eb eb                	jmp    33df <ReadFlash+0x23f>
    33f4:	c7 04 24 80 08 00 00 	movl   $0x880,(%esp)
			33f7: R_386_32	.rodata.str1.32
    33fb:	b8 42 04 00 00       	mov    $0x442,%eax
			33fc: R_386_32	.rodata
    3400:	89 44 24 04          	mov    %eax,0x4(%esp)
    3404:	e8 fc ff ff ff       	call   3405 <ReadFlash+0x265>
			3405: R_386_PC32	printk
    3409:	ba ff 00 00 00       	mov    $0xff,%edx
    340e:	eb cf                	jmp    33df <ReadFlash+0x23f>
    3410:	e8 fc ff ff ff       	call   3411 <ReadFlash+0x271>
			3411: R_386_PC32	preempt_schedule
    3415:	eb 92                	jmp    33a9 <ReadFlash+0x209>
    3417:	c7 04 24 c0 09 00 00 	movl   $0x9c0,(%esp)
			341a: R_386_32	.rodata.str1.32
    341e:	b8 42 04 00 00       	mov    $0x442,%eax
			341f: R_386_32	.rodata
    3423:	89 44 24 04          	mov    %eax,0x4(%esp)
    3427:	e8 fc ff ff ff       	call   3428 <ReadFlash+0x288>
			3428: R_386_PC32	printk
    342c:	8b 46 28             	mov    0x28(%esi),%eax
    342f:	89 04 24             	mov    %eax,(%esp)
    3432:	e8 fc ff ff ff       	call   3433 <ReadFlash+0x293>
			3433: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    3437:	b8 ff ff 00 00       	mov    $0xffff,%eax
    343c:	89 44 24 04          	mov    %eax,0x4(%esp)
    3440:	8b 46 28             	mov    0x28(%esi),%eax
    3443:	89 04 24             	mov    %eax,(%esp)
    3446:	e8 fc ff ff ff       	call   3447 <ReadFlash+0x2a7>
			3447: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    344b:	b8 02 00 00 00       	mov    $0x2,%eax
    3450:	89 44 24 04          	mov    %eax,0x4(%esp)
    3454:	8b 46 28             	mov    0x28(%esi),%eax
    3457:	89 04 24             	mov    %eax,(%esp)
    345a:	e8 fc ff ff ff       	call   345b <ReadFlash+0x2bb>
			345b: R_386_PC32	DMA_CONTROL_SOCK2
    345f:	80 7c 24 1b 82       	cmpb   $0x82,0x1b(%esp)
    3464:	0f 84 6c ff ff ff    	je     33d6 <ReadFlash+0x236>
    346a:	c7 04 24 00 0a 00 00 	movl   $0xa00,(%esp)
			346d: R_386_32	.rodata.str1.32
    3471:	b8 42 04 00 00       	mov    $0x442,%eax
			3472: R_386_32	.rodata
    3476:	89 44 24 04          	mov    %eax,0x4(%esp)
    347a:	e8 fc ff ff ff       	call   347b <ReadFlash+0x2db>
			347b: R_386_PC32	printk
    347f:	e9 52 ff ff ff       	jmp    33d6 <ReadFlash+0x236>
    3484:	8b 54 24 38          	mov    0x38(%esp),%edx
    3488:	31 ff                	xor    %edi,%edi
    348a:	31 db                	xor    %ebx,%ebx
    348c:	66 c7 02 00 00       	movw   $0x0,(%edx)
    3491:	ba ff ff 00 00       	mov    $0xffff,%edx
    3496:	c6 45 00 00          	movb   $0x0,0x0(%ebp)
    349a:	89 54 24 04          	mov    %edx,0x4(%esp)
    349e:	8b 46 28             	mov    0x28(%esi),%eax
    34a1:	89 04 24             	mov    %eax,(%esp)
    34a4:	e8 fc ff ff ff       	call   34a5 <ReadFlash+0x305>
			34a5: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    34a9:	b8 02 00 00 00       	mov    $0x2,%eax
    34ae:	89 44 24 04          	mov    %eax,0x4(%esp)
    34b2:	8b 46 28             	mov    0x28(%esi),%eax
    34b5:	89 04 24             	mov    %eax,(%esp)
    34b8:	e8 fc ff ff ff       	call   34b9 <ReadFlash+0x319>
			34b9: R_386_PC32	DMA_CONTROL_SOCK2
    34bd:	c6 46 08 00          	movb   $0x0,0x8(%esi)
    34c1:	e9 1e fd ff ff       	jmp    31e4 <ReadFlash+0x44>
    34c6:	8b 46 28             	mov    0x28(%esi),%eax
    34c9:	89 04 24             	mov    %eax,(%esp)
    34cc:	e8 fc ff ff ff       	call   34cd <ReadFlash+0x32d>
			34cd: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    34d1:	c7 04 24 20 0a 00 00 	movl   $0xa20,(%esp)
			34d4: R_386_32	.rodata.str1.32
    34d8:	b8 42 04 00 00       	mov    $0x442,%eax
			34d9: R_386_32	.rodata
    34dd:	89 44 24 04          	mov    %eax,0x4(%esp)
    34e1:	e8 fc ff ff ff       	call   34e2 <ReadFlash+0x342>
			34e2: R_386_PC32	printk
    34e6:	b8 ff ff 00 00       	mov    $0xffff,%eax
    34eb:	89 44 24 04          	mov    %eax,0x4(%esp)
    34ef:	8b 46 28             	mov    0x28(%esi),%eax
    34f2:	89 04 24             	mov    %eax,(%esp)
    34f5:	e8 fc ff ff ff       	call   34f6 <ReadFlash+0x356>
			34f6: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    34fa:	b8 02 00 00 00       	mov    $0x2,%eax
    34ff:	89 44 24 04          	mov    %eax,0x4(%esp)
    3503:	8b 46 28             	mov    0x28(%esi),%eax
    3506:	89 04 24             	mov    %eax,(%esp)
    3509:	e8 fc ff ff ff       	call   350a <ReadFlash+0x36a>
			350a: R_386_PC32	DMA_CONTROL_SOCK2
    350e:	e9 c3 fe ff ff       	jmp    33d6 <ReadFlash+0x236>
    3513:	c7 04 24 55 00 00 00 	movl   $0x55,(%esp)
			3516: R_386_32	.rodata.str1.1
    351a:	e8 fc ff ff ff       	call   351b <ReadFlash+0x37b>
			351b: R_386_PC32	printk
    351f:	ba c3 00 00 00       	mov    $0xc3,%edx
    3524:	e9 b6 fe ff ff       	jmp    33df <ReadFlash+0x23f>
    3529:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    3530:	c6 44 24 1a 01       	movb   $0x1,0x1a(%esp)
    3535:	e9 d3 fc ff ff       	jmp    320d <ReadFlash+0x6d>
    353a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00003540 <WriteFM>:
    3540:	83 ec 24             	sub    $0x24,%esp
    3543:	0f b7 44 24 34       	movzwl 0x34(%esp),%eax
    3548:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    354c:	8b 74 24 28          	mov    0x28(%esp),%esi
    3550:	89 7c 24 20          	mov    %edi,0x20(%esp)
    3554:	8b 7c 24 30          	mov    0x30(%esp),%edi
    3558:	89 5c 24 18          	mov    %ebx,0x18(%esp)
    355c:	66 89 44 24 16       	mov    %ax,0x16(%esp)
    3561:	0f b6 5c 24 2c       	movzbl 0x2c(%esp),%ebx
    3566:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    356a:	89 34 24             	mov    %esi,(%esp)
    356d:	e8 2e e6 ff ff       	call   1ba0 <SocketValidFM>
    3572:	84 c0                	test   %al,%al
    3574:	75 32                	jne    35a8 <WriteFM+0x68>
    3576:	83 ff ff             	cmp    $0xffffffff,%edi
    3579:	b8 82 00 00 00       	mov    $0x82,%eax
    357e:	74 2b                	je     35ab <WriteFM+0x6b>
    3580:	89 7c 24 04          	mov    %edi,0x4(%esp)
    3584:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    3588:	89 44 24 10          	mov    %eax,0x10(%esp)
    358c:	8b 44 24 38          	mov    0x38(%esp),%eax
    3590:	89 44 24 0c          	mov    %eax,0xc(%esp)
    3594:	8d 44 24 16          	lea    0x16(%esp),%eax
    3598:	89 44 24 08          	mov    %eax,0x8(%esp)
    359c:	8b 44 9e 0c          	mov    0xc(%esi,%ebx,4),%eax
    35a0:	89 04 24             	mov    %eax,(%esp)
    35a3:	e8 78 f8 ff ff       	call   2e20 <WriteFlash>
    35a8:	0f b6 c0             	movzbl %al,%eax
    35ab:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    35af:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    35b3:	8b 7c 24 20          	mov    0x20(%esp),%edi
    35b7:	83 c4 24             	add    $0x24,%esp
    35ba:	c3                   	ret    
    35bb:	90                   	nop    
    35bc:	8d 74 26 00          	lea    0x0(%esi),%esi

000035c0 <ReadFM>:
    35c0:	83 ec 24             	sub    $0x24,%esp
    35c3:	0f b7 44 24 34       	movzwl 0x34(%esp),%eax
    35c8:	89 74 24 1c          	mov    %esi,0x1c(%esp)
    35cc:	8b 74 24 28          	mov    0x28(%esp),%esi
    35d0:	89 7c 24 20          	mov    %edi,0x20(%esp)
    35d4:	8b 7c 24 30          	mov    0x30(%esp),%edi
    35d8:	89 5c 24 18          	mov    %ebx,0x18(%esp)
    35dc:	66 89 44 24 16       	mov    %ax,0x16(%esp)
    35e1:	0f b6 5c 24 2c       	movzbl 0x2c(%esp),%ebx
    35e6:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    35ea:	89 34 24             	mov    %esi,(%esp)
    35ed:	e8 ae e5 ff ff       	call   1ba0 <SocketValidFM>
    35f2:	84 c0                	test   %al,%al
    35f4:	75 32                	jne    3628 <ReadFM+0x68>
    35f6:	83 ff ff             	cmp    $0xffffffff,%edi
    35f9:	b8 82 00 00 00       	mov    $0x82,%eax
    35fe:	74 2b                	je     362b <ReadFM+0x6b>
    3600:	89 7c 24 04          	mov    %edi,0x4(%esp)
    3604:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    3608:	89 44 24 10          	mov    %eax,0x10(%esp)
    360c:	8b 44 24 38          	mov    0x38(%esp),%eax
    3610:	89 44 24 0c          	mov    %eax,0xc(%esp)
    3614:	8d 44 24 16          	lea    0x16(%esp),%eax
    3618:	89 44 24 08          	mov    %eax,0x8(%esp)
    361c:	8b 44 9e 0c          	mov    0xc(%esi,%ebx,4),%eax
    3620:	89 04 24             	mov    %eax,(%esp)
    3623:	e8 78 fb ff ff       	call   31a0 <ReadFlash>
    3628:	0f b6 c0             	movzbl %al,%eax
    362b:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    362f:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    3633:	8b 7c 24 20          	mov    0x20(%esp),%edi
    3637:	83 c4 24             	add    $0x24,%esp
    363a:	c3                   	ret    
    363b:	90                   	nop    
    363c:	90                   	nop    
    363d:	90                   	nop    
    363e:	90                   	nop    
    363f:	90                   	nop    

00003640 <CMMCSD_destroy>:
    3640:	83 ec 0c             	sub    $0xc,%esp
    3643:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    3647:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    364b:	85 db                	test   %ebx,%ebx
    364d:	74 29                	je     3678 <CMMCSD_destroy+0x38>
    364f:	89 1c 24             	mov    %ebx,(%esp)
    3652:	31 c0                	xor    %eax,%eax
    3654:	89 44 24 04          	mov    %eax,0x4(%esp)
    3658:	e8 fc ff ff ff       	call   3659 <CMMCSD_destroy+0x19>
			3659: R_386_PC32	MMCSD_INT_ENABLE2
    365d:	8b 43 50             	mov    0x50(%ebx),%eax
    3660:	89 04 24             	mov    %eax,(%esp)
    3663:	e8 fc ff ff ff       	call   3664 <CMMCSD_destroy+0x24>
			3664: R_386_PC32	CFlash_destroy
    3668:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    366c:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    3670:	83 c4 0c             	add    $0xc,%esp
    3673:	e9 fc ff ff ff       	jmp    3674 <CMMCSD_destroy+0x34>
			3674: R_386_PC32	kfree
    3678:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    367c:	83 c4 0c             	add    $0xc,%esp
    367f:	c3                   	ret    

00003680 <CMMCSD_init>:
    3680:	57                   	push   %edi
    3681:	53                   	push   %ebx
    3682:	83 ec 18             	sub    $0x18,%esp
    3685:	b9 20 00 00 00       	mov    $0x20,%ecx
    368a:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    368e:	a1 1c 00 00 00       	mov    0x1c,%eax
			368f: R_386_32	malloc_sizes
    3693:	89 04 24             	mov    %eax,(%esp)
    3696:	e8 fc ff ff ff       	call   3697 <CMMCSD_init+0x17>
			3697: R_386_PC32	kmem_cache_alloc
    369b:	89 c3                	mov    %eax,%ebx
    369d:	31 c0                	xor    %eax,%eax
    369f:	85 db                	test   %ebx,%ebx
    36a1:	74 72                	je     3715 <CMMCSD_init+0x95>
    36a3:	b9 15 00 00 00       	mov    $0x15,%ecx
    36a8:	89 df                	mov    %ebx,%edi
    36aa:	f3 ab                	repz stos %eax,%es:(%edi)
    36ac:	8b 44 24 24          	mov    0x24(%esp),%eax
    36b0:	89 04 24             	mov    %eax,(%esp)
    36b3:	e8 fc ff ff ff       	call   36b4 <CMMCSD_init+0x34>
			36b4: R_386_PC32	CFlash_init
    36b8:	89 43 50             	mov    %eax,0x50(%ebx)
    36bb:	85 c0                	test   %eax,%eax
    36bd:	74 5c                	je     371b <CMMCSD_init+0x9b>
    36bf:	66 c7 43 06 00 02    	movw   $0x200,0x6(%ebx)
    36c5:	31 d2                	xor    %edx,%edx
    36c7:	c6 43 18 00          	movb   $0x0,0x18(%ebx)
    36cb:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
    36d2:	8d 43 24             	lea    0x24(%ebx),%eax
    36d5:	c6 43 2c 00          	movb   $0x0,0x2c(%ebx)
    36d9:	89 40 04             	mov    %eax,0x4(%eax)
    36dc:	89 43 24             	mov    %eax,0x24(%ebx)
    36df:	8b 43 50             	mov    0x50(%ebx),%eax
    36e2:	c6 43 2d 00          	movb   $0x0,0x2d(%ebx)
    36e6:	8b 40 28             	mov    0x28(%eax),%eax
    36e9:	c6 40 04 03          	movb   $0x3,0x4(%eax)
    36ed:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
    36f4:	89 54 24 04          	mov    %edx,0x4(%esp)
    36f8:	89 1c 24             	mov    %ebx,(%esp)
    36fb:	e8 fc ff ff ff       	call   36fc <CMMCSD_init+0x7c>
			36fc: R_386_PC32	MMCSD_INT_ENABLE2
    3700:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
    3707:	89 d8                	mov    %ebx,%eax
    3709:	66 c7 43 48 00 00    	movw   $0x0,0x48(%ebx)
    370f:	66 c7 43 4a 00 00    	movw   $0x0,0x4a(%ebx)
    3715:	83 c4 18             	add    $0x18,%esp
    3718:	5b                   	pop    %ebx
    3719:	5f                   	pop    %edi
    371a:	c3                   	ret    
    371b:	89 1c 24             	mov    %ebx,(%esp)
    371e:	e8 fc ff ff ff       	call   371f <CMMCSD_init+0x9f>
			371f: R_386_PC32	kfree
    3723:	31 c0                	xor    %eax,%eax
    3725:	eb ee                	jmp    3715 <CMMCSD_init+0x95>
    3727:	89 f6                	mov    %esi,%esi
    3729:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00003730 <DPCMMCSD>:
    3730:	83 ec 10             	sub    $0x10,%esp
    3733:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    3737:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    373b:	89 74 24 0c          	mov    %esi,0xc(%esp)
    373f:	31 c0                	xor    %eax,%eax
    3741:	85 db                	test   %ebx,%ebx
    3743:	74 55                	je     379a <DPCMMCSD+0x6a>
    3745:	8b 43 50             	mov    0x50(%ebx),%eax
    3748:	89 04 24             	mov    %eax,(%esp)
    374b:	e8 fc ff ff ff       	call   374c <DPCMMCSD+0x1c>
			374c: R_386_PC32	DPCFlash
    3750:	89 c6                	mov    %eax,%esi
    3752:	8b 43 50             	mov    0x50(%ebx),%eax
    3755:	80 78 02 00          	cmpb   $0x0,0x2(%eax)
    3759:	74 3d                	je     3798 <DPCMMCSD+0x68>
    375b:	8b 43 20             	mov    0x20(%ebx),%eax
    375e:	a8 08                	test   $0x8,%al
    3760:	75 44                	jne    37a6 <DPCMMCSD+0x76>
    3762:	8b 43 20             	mov    0x20(%ebx),%eax
    3765:	a8 10                	test   $0x10,%al
    3767:	74 04                	je     376d <DPCMMCSD+0x3d>
    3769:	c6 43 2c 00          	movb   $0x0,0x2c(%ebx)
    376d:	8b 43 20             	mov    0x20(%ebx),%eax
    3770:	a8 04                	test   $0x4,%al
    3772:	74 04                	je     3778 <DPCMMCSD+0x48>
    3774:	c6 43 2c 01          	movb   $0x1,0x2c(%ebx)
    3778:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    377f:	8d 43 24             	lea    0x24(%ebx),%eax
    3782:	b9 01 00 00 00       	mov    $0x1,%ecx
    3787:	ba 01 00 00 00       	mov    $0x1,%edx
    378c:	e8 fc ff ff ff       	call   378d <DPCMMCSD+0x5d>
			378d: R_386_PC32	__wake_up
    3791:	8b 43 50             	mov    0x50(%ebx),%eax
    3794:	c6 40 02 00          	movb   $0x0,0x2(%eax)
    3798:	89 f0                	mov    %esi,%eax
    379a:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    379e:	8b 74 24 0c          	mov    0xc(%esp),%esi
    37a2:	83 c4 10             	add    $0x10,%esp
    37a5:	c3                   	ret    
    37a6:	89 1c 24             	mov    %ebx,(%esp)
    37a9:	e8 fc ff ff ff       	call   37aa <DPCMMCSD+0x7a>
			37aa: R_386_PC32	MMCSD_INT_ENABLE1
    37ae:	89 1c 24             	mov    %ebx,(%esp)
    37b1:	83 c8 14             	or     $0x14,%eax
    37b4:	89 44 24 04          	mov    %eax,0x4(%esp)
    37b8:	e8 fc ff ff ff       	call   37b9 <DPCMMCSD+0x89>
			37b9: R_386_PC32	MMCSD_INT_ENABLE2
    37bd:	c6 43 2c 01          	movb   $0x1,0x2c(%ebx)
    37c1:	eb 9f                	jmp    3762 <DPCMMCSD+0x32>
    37c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    37c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000037d0 <InterruptMMCSD>:
    37d0:	83 ec 1c             	sub    $0x1c,%esp
    37d3:	89 5c 24 14          	mov    %ebx,0x14(%esp)
    37d7:	0f b6 5c 24 28       	movzbl 0x28(%esp),%ebx
    37dc:	89 74 24 18          	mov    %esi,0x18(%esp)
    37e0:	8b 74 24 20          	mov    0x20(%esp),%esi
    37e4:	0f b6 c3             	movzbl %bl,%eax
    37e7:	89 44 24 08          	mov    %eax,0x8(%esp)
    37eb:	0f b6 44 24 24       	movzbl 0x24(%esp),%eax
    37f0:	89 44 24 04          	mov    %eax,0x4(%esp)
    37f4:	8b 46 50             	mov    0x50(%esi),%eax
    37f7:	89 04 24             	mov    %eax,(%esp)
    37fa:	e8 fc ff ff ff       	call   37fb <InterruptMMCSD+0x2b>
			37fb: R_386_PC32	InterruptFlash
    37ff:	88 44 24 0f          	mov    %al,0xf(%esp)
    3803:	84 db                	test   %bl,%bl
    3805:	75 19                	jne    3820 <InterruptMMCSD+0x50>
    3807:	0a 5c 24 0f          	or     0xf(%esp),%bl
    380b:	8b 74 24 18          	mov    0x18(%esp),%esi
    380f:	0f b6 c3             	movzbl %bl,%eax
    3812:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    3816:	83 c4 1c             	add    $0x1c,%esp
    3819:	c3                   	ret    
    381a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3820:	89 34 24             	mov    %esi,(%esp)
    3823:	e8 fc ff ff ff       	call   3824 <InterruptMMCSD+0x54>
			3824: R_386_PC32	MMCSD_STATUS
    3828:	89 44 24 10          	mov    %eax,0x10(%esp)
    382c:	8b 44 24 10          	mov    0x10(%esp),%eax
    3830:	89 44 24 04          	mov    %eax,0x4(%esp)
    3834:	89 34 24             	mov    %esi,(%esp)
    3837:	e8 fc ff ff ff       	call   3838 <InterruptMMCSD+0x68>
			3838: R_386_PC32	MMCSD_STATUS_CLEAR
    383c:	8b 46 1c             	mov    0x1c(%esi),%eax
    383f:	8b 54 24 10          	mov    0x10(%esp),%edx
    3843:	09 d0                	or     %edx,%eax
    3845:	89 46 1c             	mov    %eax,0x1c(%esi)
    3848:	8b 44 24 10          	mov    0x10(%esp),%eax
    384c:	89 46 20             	mov    %eax,0x20(%esi)
    384f:	eb b6                	jmp    3807 <InterruptMMCSD+0x37>
    3851:	eb 0d                	jmp    3860 <WaitForEOCMMCSD>
    3853:	90                   	nop    
    3854:	90                   	nop    
    3855:	90                   	nop    
    3856:	90                   	nop    
    3857:	90                   	nop    
    3858:	90                   	nop    
    3859:	90                   	nop    
    385a:	90                   	nop    
    385b:	90                   	nop    
    385c:	90                   	nop    
    385d:	90                   	nop    
    385e:	90                   	nop    
    385f:	90                   	nop    

00003860 <WaitForEOCMMCSD>:
    3860:	57                   	push   %edi
    3861:	56                   	push   %esi
    3862:	53                   	push   %ebx
    3863:	83 ec 0c             	sub    $0xc,%esp
    3866:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    386a:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
    386f:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3872:	a8 01                	test   $0x1,%al
    3874:	75 52                	jne    38c8 <WaitForEOCMMCSD+0x68>
    3876:	bf 00 e0 ff ff       	mov    $0xffffe000,%edi
    387b:	21 e7                	and    %esp,%edi
    387d:	8d 76 00             	lea    0x0(%esi),%esi
    3880:	8b 43 50             	mov    0x50(%ebx),%eax
    3883:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    3887:	0f 85 9c 00 00 00    	jne    3929 <WaitForEOCMMCSD+0xc9>
    388d:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3890:	f6 c4 40             	test   $0x40,%ah
    3893:	74 05                	je     389a <WaitForEOCMMCSD+0x3a>
    3895:	c6 44 24 0b 2a       	movb   $0x2a,0xb(%esp)
    389a:	8b 43 1c             	mov    0x1c(%ebx),%eax
    389d:	84 c0                	test   %al,%al
    389f:	79 05                	jns    38a6 <WaitForEOCMMCSD+0x46>
    38a1:	c6 44 24 0b 20       	movb   $0x20,0xb(%esp)
    38a6:	8b 43 1c             	mov    0x1c(%ebx),%eax
    38a9:	f6 c4 01             	test   $0x1,%ah
    38ac:	74 05                	je     38b3 <WaitForEOCMMCSD+0x53>
    38ae:	c6 44 24 0b 21       	movb   $0x21,0xb(%esp)
    38b3:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    38b8:	74 1a                	je     38d4 <WaitForEOCMMCSD+0x74>
    38ba:	8b 43 1c             	mov    0x1c(%ebx),%eax
    38bd:	a8 01                	test   $0x1,%al
    38bf:	75 07                	jne    38c8 <WaitForEOCMMCSD+0x68>
    38c1:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    38c6:	74 b8                	je     3880 <WaitForEOCMMCSD+0x20>
    38c8:	0f b6 44 24 0b       	movzbl 0xb(%esp),%eax
    38cd:	83 c4 0c             	add    $0xc,%esp
    38d0:	5b                   	pop    %ebx
    38d1:	5e                   	pop    %esi
    38d2:	5f                   	pop    %edi
    38d3:	c3                   	ret    
    38d4:	b8 01 00 00 00       	mov    $0x1,%eax
    38d9:	e8 fc ff ff ff       	call   38da <WaitForEOCMMCSD+0x7a>
			38da: R_386_PC32	add_preempt_count
    38de:	ba d0 07 00 00       	mov    $0x7d0,%edx
    38e3:	8d 43 24             	lea    0x24(%ebx),%eax
    38e6:	e8 fc ff ff ff       	call   38e7 <WaitForEOCMMCSD+0x87>
			38e7: R_386_PC32	interruptible_sleep_on_timeout
    38eb:	89 c6                	mov    %eax,%esi
    38ed:	b8 01 00 00 00       	mov    $0x1,%eax
    38f2:	e8 fc ff ff ff       	call   38f3 <WaitForEOCMMCSD+0x93>
			38f3: R_386_PC32	sub_preempt_count
    38f7:	8b 47 08             	mov    0x8(%edi),%eax
    38fa:	a8 08                	test   $0x8,%al
    38fc:	75 24                	jne    3922 <WaitForEOCMMCSD+0xc2>
    38fe:	85 f6                	test   %esi,%esi
    3900:	75 b8                	jne    38ba <WaitForEOCMMCSD+0x5a>
    3902:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3905:	a8 01                	test   $0x1,%al
    3907:	75 b1                	jne    38ba <WaitForEOCMMCSD+0x5a>
    3909:	c7 04 24 60 0a 00 00 	movl   $0xa60,(%esp)
			390c: R_386_32	.rodata.str1.32
    3910:	bb 4c 04 00 00       	mov    $0x44c,%ebx
			3911: R_386_32	.rodata
    3915:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    3919:	e8 fc ff ff ff       	call   391a <WaitForEOCMMCSD+0xba>
			391a: R_386_PC32	printk
    391e:	31 c0                	xor    %eax,%eax
    3920:	eb ab                	jmp    38cd <WaitForEOCMMCSD+0x6d>
    3922:	e8 fc ff ff ff       	call   3923 <WaitForEOCMMCSD+0xc3>
			3923: R_386_PC32	preempt_schedule
    3927:	eb d5                	jmp    38fe <WaitForEOCMMCSD+0x9e>
    3929:	b8 86 00 00 00       	mov    $0x86,%eax
    392e:	eb 9d                	jmp    38cd <WaitForEOCMMCSD+0x6d>

00003930 <WaitForAEMMCSD>:
    3930:	57                   	push   %edi
    3931:	56                   	push   %esi
    3932:	53                   	push   %ebx
    3933:	83 ec 10             	sub    $0x10,%esp
    3936:	8b 5c 24 20          	mov    0x20(%esp),%ebx
    393a:	c6 44 24 0f 00       	movb   $0x0,0xf(%esp)
    393f:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3942:	f6 c4 08             	test   $0x8,%ah
    3945:	75 76                	jne    39bd <WaitForAEMMCSD+0x8d>
    3947:	bf 00 e0 ff ff       	mov    $0xffffe000,%edi
    394c:	21 e7                	and    %esp,%edi
    394e:	89 f6                	mov    %esi,%esi
    3950:	8b 43 50             	mov    0x50(%ebx),%eax
    3953:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    3957:	0f 85 d8 00 00 00    	jne    3a35 <WaitForAEMMCSD+0x105>
    395d:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3960:	f6 c4 40             	test   $0x40,%ah
    3963:	74 05                	je     396a <WaitForAEMMCSD+0x3a>
    3965:	c6 44 24 0f 2a       	movb   $0x2a,0xf(%esp)
    396a:	8b 43 1c             	mov    0x1c(%ebx),%eax
    396d:	a8 20                	test   $0x20,%al
    396f:	74 05                	je     3976 <WaitForAEMMCSD+0x46>
    3971:	c6 44 24 0f 22       	movb   $0x22,0xf(%esp)
    3976:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3979:	a8 40                	test   $0x40,%al
    397b:	74 05                	je     3982 <WaitForAEMMCSD+0x52>
    397d:	c6 44 24 0f 23       	movb   $0x23,0xf(%esp)
    3982:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    3987:	74 57                	je     39e0 <WaitForAEMMCSD+0xb0>
    3989:	8b 43 1c             	mov    0x1c(%ebx),%eax
    398c:	f6 c4 08             	test   $0x8,%ah
    398f:	75 3f                	jne    39d0 <WaitForAEMMCSD+0xa0>
    3991:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    3996:	74 b8                	je     3950 <WaitForAEMMCSD+0x20>
    3998:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    399d:	bf 5c 04 00 00       	mov    $0x45c,%edi
			399e: R_386_32	.rodata
    39a2:	89 7c 24 04          	mov    %edi,0x4(%esp)
    39a6:	c7 04 24 a0 0a 00 00 	movl   $0xaa0,(%esp)
			39a9: R_386_32	.rodata.str1.32
    39ad:	89 44 24 08          	mov    %eax,0x8(%esp)
    39b1:	e8 fc ff ff ff       	call   39b2 <WaitForAEMMCSD+0x82>
			39b2: R_386_PC32	printk
    39b6:	80 7c 24 0f 87       	cmpb   $0x87,0xf(%esp)
    39bb:	74 0c                	je     39c9 <WaitForAEMMCSD+0x99>
    39bd:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    39c2:	83 c4 10             	add    $0x10,%esp
    39c5:	5b                   	pop    %ebx
    39c6:	5e                   	pop    %esi
    39c7:	5f                   	pop    %edi
    39c8:	c3                   	ret    
    39c9:	c6 44 24 0f 00       	movb   $0x0,0xf(%esp)
    39ce:	eb ed                	jmp    39bd <WaitForAEMMCSD+0x8d>
    39d0:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    39d5:	74 df                	je     39b6 <WaitForAEMMCSD+0x86>
    39d7:	eb bf                	jmp    3998 <WaitForAEMMCSD+0x68>
    39d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    39e0:	b8 01 00 00 00       	mov    $0x1,%eax
    39e5:	e8 fc ff ff ff       	call   39e6 <WaitForAEMMCSD+0xb6>
			39e6: R_386_PC32	add_preempt_count
    39ea:	ba e8 03 00 00       	mov    $0x3e8,%edx
    39ef:	8d 43 24             	lea    0x24(%ebx),%eax
    39f2:	e8 fc ff ff ff       	call   39f3 <WaitForAEMMCSD+0xc3>
			39f3: R_386_PC32	interruptible_sleep_on_timeout
    39f7:	89 c6                	mov    %eax,%esi
    39f9:	b8 01 00 00 00       	mov    $0x1,%eax
    39fe:	e8 fc ff ff ff       	call   39ff <WaitForAEMMCSD+0xcf>
			39ff: R_386_PC32	sub_preempt_count
    3a03:	8b 47 08             	mov    0x8(%edi),%eax
    3a06:	a8 08                	test   $0x8,%al
    3a08:	75 24                	jne    3a2e <WaitForAEMMCSD+0xfe>
    3a0a:	85 f6                	test   %esi,%esi
    3a0c:	0f 85 77 ff ff ff    	jne    3989 <WaitForAEMMCSD+0x59>
    3a12:	c7 04 24 e0 0a 00 00 	movl   $0xae0,(%esp)
			3a15: R_386_32	.rodata.str1.32
    3a19:	be 5c 04 00 00       	mov    $0x45c,%esi
			3a1a: R_386_32	.rodata
    3a1e:	89 74 24 04          	mov    %esi,0x4(%esp)
    3a22:	e8 fc ff ff ff       	call   3a23 <WaitForAEMMCSD+0xf3>
			3a23: R_386_PC32	printk
    3a27:	b8 22 00 00 00       	mov    $0x22,%eax
    3a2c:	eb 94                	jmp    39c2 <WaitForAEMMCSD+0x92>
    3a2e:	e8 fc ff ff ff       	call   3a2f <WaitForAEMMCSD+0xff>
			3a2f: R_386_PC32	preempt_schedule
    3a33:	eb d5                	jmp    3a0a <WaitForAEMMCSD+0xda>
    3a35:	b8 86 00 00 00       	mov    $0x86,%eax
    3a3a:	eb 86                	jmp    39c2 <WaitForAEMMCSD+0x92>
    3a3c:	8d 74 26 00          	lea    0x0(%esi),%esi

00003a40 <WaitForAFMMCSD>:
    3a40:	57                   	push   %edi
    3a41:	56                   	push   %esi
    3a42:	53                   	push   %ebx
    3a43:	83 ec 10             	sub    $0x10,%esp
    3a46:	8b 5c 24 20          	mov    0x20(%esp),%ebx
    3a4a:	c6 44 24 0f 00       	movb   $0x0,0xf(%esp)
    3a4f:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3a52:	f6 c4 04             	test   $0x4,%ah
    3a55:	75 76                	jne    3acd <WaitForAFMMCSD+0x8d>
    3a57:	bf 00 e0 ff ff       	mov    $0xffffe000,%edi
    3a5c:	21 e7                	and    %esp,%edi
    3a5e:	89 f6                	mov    %esi,%esi
    3a60:	8b 43 50             	mov    0x50(%ebx),%eax
    3a63:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    3a67:	0f 85 d8 00 00 00    	jne    3b45 <WaitForAFMMCSD+0x105>
    3a6d:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3a70:	f6 c4 40             	test   $0x40,%ah
    3a73:	74 05                	je     3a7a <WaitForAFMMCSD+0x3a>
    3a75:	c6 44 24 0f 2a       	movb   $0x2a,0xf(%esp)
    3a7a:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3a7d:	a8 20                	test   $0x20,%al
    3a7f:	74 05                	je     3a86 <WaitForAFMMCSD+0x46>
    3a81:	c6 44 24 0f 22       	movb   $0x22,0xf(%esp)
    3a86:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3a89:	a8 40                	test   $0x40,%al
    3a8b:	74 05                	je     3a92 <WaitForAFMMCSD+0x52>
    3a8d:	c6 44 24 0f 23       	movb   $0x23,0xf(%esp)
    3a92:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    3a97:	74 57                	je     3af0 <WaitForAFMMCSD+0xb0>
    3a99:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3a9c:	f6 c4 04             	test   $0x4,%ah
    3a9f:	75 3f                	jne    3ae0 <WaitForAFMMCSD+0xa0>
    3aa1:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    3aa6:	74 b8                	je     3a60 <WaitForAFMMCSD+0x20>
    3aa8:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    3aad:	c7 04 24 00 0b 00 00 	movl   $0xb00,(%esp)
			3ab0: R_386_32	.rodata.str1.32
    3ab4:	89 44 24 08          	mov    %eax,0x8(%esp)
    3ab8:	b8 6b 04 00 00       	mov    $0x46b,%eax
			3ab9: R_386_32	.rodata
    3abd:	89 44 24 04          	mov    %eax,0x4(%esp)
    3ac1:	e8 fc ff ff ff       	call   3ac2 <WaitForAFMMCSD+0x82>
			3ac2: R_386_PC32	printk
    3ac6:	80 7c 24 0f 87       	cmpb   $0x87,0xf(%esp)
    3acb:	74 0c                	je     3ad9 <WaitForAFMMCSD+0x99>
    3acd:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    3ad2:	83 c4 10             	add    $0x10,%esp
    3ad5:	5b                   	pop    %ebx
    3ad6:	5e                   	pop    %esi
    3ad7:	5f                   	pop    %edi
    3ad8:	c3                   	ret    
    3ad9:	c6 44 24 0f 00       	movb   $0x0,0xf(%esp)
    3ade:	eb ed                	jmp    3acd <WaitForAFMMCSD+0x8d>
    3ae0:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    3ae5:	74 df                	je     3ac6 <WaitForAFMMCSD+0x86>
    3ae7:	eb bf                	jmp    3aa8 <WaitForAFMMCSD+0x68>
    3ae9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    3af0:	b8 01 00 00 00       	mov    $0x1,%eax
    3af5:	e8 fc ff ff ff       	call   3af6 <WaitForAFMMCSD+0xb6>
			3af6: R_386_PC32	add_preempt_count
    3afa:	ba e8 03 00 00       	mov    $0x3e8,%edx
    3aff:	8d 43 24             	lea    0x24(%ebx),%eax
    3b02:	e8 fc ff ff ff       	call   3b03 <WaitForAFMMCSD+0xc3>
			3b03: R_386_PC32	interruptible_sleep_on_timeout
    3b07:	89 c6                	mov    %eax,%esi
    3b09:	b8 01 00 00 00       	mov    $0x1,%eax
    3b0e:	e8 fc ff ff ff       	call   3b0f <WaitForAFMMCSD+0xcf>
			3b0f: R_386_PC32	sub_preempt_count
    3b13:	8b 47 08             	mov    0x8(%edi),%eax
    3b16:	a8 08                	test   $0x8,%al
    3b18:	75 24                	jne    3b3e <WaitForAFMMCSD+0xfe>
    3b1a:	85 f6                	test   %esi,%esi
    3b1c:	0f 85 77 ff ff ff    	jne    3a99 <WaitForAFMMCSD+0x59>
    3b22:	c7 04 24 e0 0a 00 00 	movl   $0xae0,(%esp)
			3b25: R_386_32	.rodata.str1.32
    3b29:	b8 6b 04 00 00       	mov    $0x46b,%eax
			3b2a: R_386_32	.rodata
    3b2e:	89 44 24 04          	mov    %eax,0x4(%esp)
    3b32:	e8 fc ff ff ff       	call   3b33 <WaitForAFMMCSD+0xf3>
			3b33: R_386_PC32	printk
    3b37:	b8 22 00 00 00       	mov    $0x22,%eax
    3b3c:	eb 94                	jmp    3ad2 <WaitForAFMMCSD+0x92>
    3b3e:	e8 fc ff ff ff       	call   3b3f <WaitForAFMMCSD+0xff>
			3b3f: R_386_PC32	preempt_schedule
    3b43:	eb d5                	jmp    3b1a <WaitForAFMMCSD+0xda>
    3b45:	b8 86 00 00 00       	mov    $0x86,%eax
    3b4a:	eb 86                	jmp    3ad2 <WaitForAFMMCSD+0x92>
    3b4c:	8d 74 26 00          	lea    0x0(%esi),%esi

00003b50 <WaitForCardMMCSD>:
    3b50:	57                   	push   %edi
    3b51:	56                   	push   %esi
    3b52:	53                   	push   %ebx
    3b53:	83 ec 08             	sub    $0x8,%esp
    3b56:	8b 74 24 18          	mov    0x18(%esp),%esi
    3b5a:	80 7e 2c 00          	cmpb   $0x0,0x2c(%esi)
    3b5e:	74 4d                	je     3bad <WaitForCardMMCSD+0x5d>
    3b60:	bf 00 e0 ff ff       	mov    $0xffffe000,%edi
    3b65:	21 e7                	and    %esp,%edi
    3b67:	89 f6                	mov    %esi,%esi
    3b69:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    3b70:	8b 46 50             	mov    0x50(%esi),%eax
    3b73:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    3b77:	75 77                	jne    3bf0 <WaitForCardMMCSD+0xa0>
    3b79:	b8 01 00 00 00       	mov    $0x1,%eax
    3b7e:	e8 fc ff ff ff       	call   3b7f <WaitForCardMMCSD+0x2f>
			3b7f: R_386_PC32	add_preempt_count
    3b83:	ba d0 07 00 00       	mov    $0x7d0,%edx
    3b88:	8d 46 24             	lea    0x24(%esi),%eax
    3b8b:	e8 fc ff ff ff       	call   3b8c <WaitForCardMMCSD+0x3c>
			3b8c: R_386_PC32	interruptible_sleep_on_timeout
    3b90:	89 c3                	mov    %eax,%ebx
    3b92:	b8 01 00 00 00       	mov    $0x1,%eax
    3b97:	e8 fc ff ff ff       	call   3b98 <WaitForCardMMCSD+0x48>
			3b98: R_386_PC32	sub_preempt_count
    3b9c:	8b 47 08             	mov    0x8(%edi),%eax
    3b9f:	a8 08                	test   $0x8,%al
    3ba1:	75 46                	jne    3be9 <WaitForCardMMCSD+0x99>
    3ba3:	85 db                	test   %ebx,%ebx
    3ba5:	74 26                	je     3bcd <WaitForCardMMCSD+0x7d>
    3ba7:	80 7e 2c 00          	cmpb   $0x0,0x2c(%esi)
    3bab:	75 c3                	jne    3b70 <WaitForCardMMCSD+0x20>
    3bad:	89 34 24             	mov    %esi,(%esp)
    3bb0:	e8 fc ff ff ff       	call   3bb1 <WaitForCardMMCSD+0x61>
			3bb1: R_386_PC32	MMCSD_INT_ENABLE1
    3bb5:	89 34 24             	mov    %esi,(%esp)
    3bb8:	83 e0 eb             	and    $0xffffffeb,%eax
    3bbb:	89 44 24 04          	mov    %eax,0x4(%esp)
    3bbf:	e8 fc ff ff ff       	call   3bc0 <WaitForCardMMCSD+0x70>
			3bc0: R_386_PC32	MMCSD_INT_ENABLE2
    3bc4:	31 c0                	xor    %eax,%eax
    3bc6:	83 c4 08             	add    $0x8,%esp
    3bc9:	5b                   	pop    %ebx
    3bca:	5e                   	pop    %esi
    3bcb:	5f                   	pop    %edi
    3bcc:	c3                   	ret    
    3bcd:	c7 04 24 e0 0a 00 00 	movl   $0xae0,(%esp)
			3bd0: R_386_32	.rodata.str1.32
    3bd4:	b8 7a 04 00 00       	mov    $0x47a,%eax
			3bd5: R_386_32	.rodata
    3bd9:	89 44 24 04          	mov    %eax,0x4(%esp)
    3bdd:	e8 fc ff ff ff       	call   3bde <WaitForCardMMCSD+0x8e>
			3bde: R_386_PC32	printk
    3be2:	b8 ff 00 00 00       	mov    $0xff,%eax
    3be7:	eb dd                	jmp    3bc6 <WaitForCardMMCSD+0x76>
    3be9:	e8 fc ff ff ff       	call   3bea <WaitForCardMMCSD+0x9a>
			3bea: R_386_PC32	preempt_schedule
    3bee:	eb b3                	jmp    3ba3 <WaitForCardMMCSD+0x53>
    3bf0:	b8 86 00 00 00       	mov    $0x86,%eax
    3bf5:	eb cf                	jmp    3bc6 <WaitForCardMMCSD+0x76>
    3bf7:	89 f6                	mov    %esi,%esi
    3bf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00003c00 <WaitForBRSMMCSD>:
    3c00:	57                   	push   %edi
    3c01:	56                   	push   %esi
    3c02:	53                   	push   %ebx
    3c03:	83 ec 0c             	sub    $0xc,%esp
    3c06:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    3c0a:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
    3c0f:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3c12:	a8 08                	test   $0x8,%al
    3c14:	75 6d                	jne    3c83 <WaitForBRSMMCSD+0x83>
    3c16:	bf 00 e0 ff ff       	mov    $0xffffe000,%edi
    3c1b:	21 e7                	and    %esp,%edi
    3c1d:	8d 76 00             	lea    0x0(%esi),%esi
    3c20:	8b 43 50             	mov    0x50(%ebx),%eax
    3c23:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    3c27:	0f 85 c4 00 00 00    	jne    3cf1 <WaitForBRSMMCSD+0xf1>
    3c2d:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3c30:	f6 c4 40             	test   $0x40,%ah
    3c33:	74 05                	je     3c3a <WaitForBRSMMCSD+0x3a>
    3c35:	c6 44 24 0b 2a       	movb   $0x2a,0xb(%esp)
    3c3a:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3c3d:	a8 20                	test   $0x20,%al
    3c3f:	74 05                	je     3c46 <WaitForBRSMMCSD+0x46>
    3c41:	c6 44 24 0b 22       	movb   $0x22,0xb(%esp)
    3c46:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3c49:	a8 40                	test   $0x40,%al
    3c4b:	74 05                	je     3c52 <WaitForBRSMMCSD+0x52>
    3c4d:	c6 44 24 0b 23       	movb   $0x23,0xb(%esp)
    3c52:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    3c57:	74 47                	je     3ca0 <WaitForBRSMMCSD+0xa0>
    3c59:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3c5c:	a8 08                	test   $0x8,%al
    3c5e:	75 36                	jne    3c96 <WaitForBRSMMCSD+0x96>
    3c60:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    3c65:	74 b9                	je     3c20 <WaitForBRSMMCSD+0x20>
    3c67:	0f b6 44 24 0b       	movzbl 0xb(%esp),%eax
    3c6c:	c7 04 24 40 0b 00 00 	movl   $0xb40,(%esp)
			3c6f: R_386_32	.rodata.str1.32
    3c73:	89 44 24 04          	mov    %eax,0x4(%esp)
    3c77:	e8 fc ff ff ff       	call   3c78 <WaitForBRSMMCSD+0x78>
			3c78: R_386_PC32	printk
    3c7c:	80 7c 24 0b 87       	cmpb   $0x87,0xb(%esp)
    3c81:	74 0c                	je     3c8f <WaitForBRSMMCSD+0x8f>
    3c83:	0f b6 44 24 0b       	movzbl 0xb(%esp),%eax
    3c88:	83 c4 0c             	add    $0xc,%esp
    3c8b:	5b                   	pop    %ebx
    3c8c:	5e                   	pop    %esi
    3c8d:	5f                   	pop    %edi
    3c8e:	c3                   	ret    
    3c8f:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
    3c94:	eb ed                	jmp    3c83 <WaitForBRSMMCSD+0x83>
    3c96:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    3c9b:	74 df                	je     3c7c <WaitForBRSMMCSD+0x7c>
    3c9d:	eb c8                	jmp    3c67 <WaitForBRSMMCSD+0x67>
    3c9f:	90                   	nop    
    3ca0:	b8 01 00 00 00       	mov    $0x1,%eax
    3ca5:	e8 fc ff ff ff       	call   3ca6 <WaitForBRSMMCSD+0xa6>
			3ca6: R_386_PC32	add_preempt_count
    3caa:	ba a0 0f 00 00       	mov    $0xfa0,%edx
    3caf:	8d 43 24             	lea    0x24(%ebx),%eax
    3cb2:	e8 fc ff ff ff       	call   3cb3 <WaitForBRSMMCSD+0xb3>
			3cb3: R_386_PC32	interruptible_sleep_on_timeout
    3cb7:	89 c6                	mov    %eax,%esi
    3cb9:	b8 01 00 00 00       	mov    $0x1,%eax
    3cbe:	e8 fc ff ff ff       	call   3cbf <WaitForBRSMMCSD+0xbf>
			3cbf: R_386_PC32	sub_preempt_count
    3cc3:	8b 47 08             	mov    0x8(%edi),%eax
    3cc6:	a8 08                	test   $0x8,%al
    3cc8:	75 20                	jne    3cea <WaitForBRSMMCSD+0xea>
    3cca:	85 f6                	test   %esi,%esi
    3ccc:	75 8b                	jne    3c59 <WaitForBRSMMCSD+0x59>
    3cce:	c7 04 24 e0 0a 00 00 	movl   $0xae0,(%esp)
			3cd1: R_386_32	.rodata.str1.32
    3cd5:	b8 8b 04 00 00       	mov    $0x48b,%eax
			3cd6: R_386_32	.rodata
    3cda:	89 44 24 04          	mov    %eax,0x4(%esp)
    3cde:	e8 fc ff ff ff       	call   3cdf <WaitForBRSMMCSD+0xdf>
			3cdf: R_386_PC32	printk
    3ce3:	b8 ff 00 00 00       	mov    $0xff,%eax
    3ce8:	eb 9e                	jmp    3c88 <WaitForBRSMMCSD+0x88>
    3cea:	e8 fc ff ff ff       	call   3ceb <WaitForBRSMMCSD+0xeb>
			3ceb: R_386_PC32	preempt_schedule
    3cef:	eb d9                	jmp    3cca <WaitForBRSMMCSD+0xca>
    3cf1:	b8 86 00 00 00       	mov    $0x86,%eax
    3cf6:	eb 90                	jmp    3c88 <WaitForBRSMMCSD+0x88>
    3cf8:	90                   	nop    
    3cf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00003d00 <GetCmdTypeMMCSD>:
    3d00:	57                   	push   %edi
    3d01:	b9 80 00 00 00       	mov    $0x80,%ecx
    3d06:	ba 9c 04 00 00       	mov    $0x49c,%edx
			3d07: R_386_32	.rodata
    3d0b:	53                   	push   %ebx
    3d0c:	81 ec 10 01 00 00    	sub    $0x110,%esp
    3d12:	0f b6 84 24 24 01 00 	movzbl 0x124(%esp),%eax
    3d19:	00 
    3d1a:	0f b6 9c 24 20 01 00 	movzbl 0x120(%esp),%ebx
    3d21:	00 
    3d22:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    3d26:	89 54 24 04          	mov    %edx,0x4(%esp)
    3d2a:	88 44 24 0f          	mov    %al,0xf(%esp)
    3d2e:	8d 84 24 90 00 00 00 	lea    0x90(%esp),%eax
    3d35:	89 04 24             	mov    %eax,(%esp)
    3d38:	e8 fc ff ff ff       	call   3d39 <GetCmdTypeMMCSD+0x39>
			3d39: R_386_PC32	memcpy
    3d3d:	fc                   	cld    
    3d3e:	31 c0                	xor    %eax,%eax
    3d40:	8d 7c 24 10          	lea    0x10(%esp),%edi
    3d44:	b9 20 00 00 00       	mov    $0x20,%ecx
    3d49:	f3 ab                	repz stos %eax,%es:(%edi)
    3d4b:	66 c7 44 24 1c 00 20 	movw   $0x2000,0x1c(%esp)
    3d52:	66 c7 44 24 2a 00 30 	movw   $0x3000,0x2a(%esp)
    3d59:	66 c7 44 24 34 00 30 	movw   $0x3000,0x34(%esp)
    3d60:	66 c7 44 24 3c 00 30 	movw   $0x3000,0x3c(%esp)
    3d67:	66 c7 44 24 3e 00 20 	movw   $0x2000,0x3e(%esp)
    3d6e:	66 c7 44 24 42 00 30 	movw   $0x3000,0x42(%esp)
    3d75:	66 c7 44 24 44 00 30 	movw   $0x3000,0x44(%esp)
    3d7c:	66 c7 44 24 66 00 30 	movw   $0x3000,0x66(%esp)
    3d83:	66 c7 44 24 68 00 30 	movw   $0x3000,0x68(%esp)
    3d8a:	66 c7 44 24 6a 00 30 	movw   $0x3000,0x6a(%esp)
    3d91:	66 c7 44 24 6c 00 30 	movw   $0x3000,0x6c(%esp)
    3d98:	66 c7 44 24 6e 00 30 	movw   $0x3000,0x6e(%esp)
    3d9f:	66 c7 44 24 70 00 30 	movw   $0x3000,0x70(%esp)
    3da6:	66 c7 44 24 72 00 20 	movw   $0x2000,0x72(%esp)
    3dad:	66 c7 44 24 76 00 30 	movw   $0x3000,0x76(%esp)
    3db4:	80 fb 3f             	cmp    $0x3f,%bl
    3db7:	77 17                	ja     3dd0 <GetCmdTypeMMCSD+0xd0>
    3db9:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    3dbe:	74 20                	je     3de0 <GetCmdTypeMMCSD+0xe0>
    3dc0:	0f b6 c3             	movzbl %bl,%eax
    3dc3:	0f b7 44 44 10       	movzwl 0x10(%esp,%eax,2),%eax
    3dc8:	90                   	nop    
    3dc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    3dd0:	81 c4 10 01 00 00    	add    $0x110,%esp
    3dd6:	5b                   	pop    %ebx
    3dd7:	5f                   	pop    %edi
    3dd8:	c3                   	ret    
    3dd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    3de0:	0f b6 c3             	movzbl %bl,%eax
    3de3:	0f b7 84 44 90 00 00 	movzwl 0x90(%esp,%eax,2),%eax
    3dea:	00 
    3deb:	eb e3                	jmp    3dd0 <GetCmdTypeMMCSD+0xd0>
    3ded:	8d 76 00             	lea    0x0(%esi),%esi

00003df0 <CmdMMCSD>:
    3df0:	55                   	push   %ebp
    3df1:	57                   	push   %edi
    3df2:	56                   	push   %esi
    3df3:	53                   	push   %ebx
    3df4:	83 ec 20             	sub    $0x20,%esp
    3df7:	8b 5c 24 34          	mov    0x34(%esp),%ebx
    3dfb:	0f b6 44 24 38       	movzbl 0x38(%esp),%eax
    3e00:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
    3e05:	88 44 24 10          	mov    %al,0x10(%esp)
    3e09:	0f b7 44 24 40       	movzwl 0x40(%esp),%eax
    3e0e:	89 44 24 0c          	mov    %eax,0xc(%esp)
    3e12:	b8 ff 00 00 00       	mov    $0xff,%eax
    3e17:	85 db                	test   %ebx,%ebx
    3e19:	0f 84 7e 00 00 00    	je     3e9d <CmdMMCSD+0xad>
    3e1f:	0f b6 44 24 10       	movzbl 0x10(%esp),%eax
    3e24:	8b 74 24 0c          	mov    0xc(%esp),%esi
    3e28:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
    3e2c:	0f b7 6c 24 3c       	movzwl 0x3c(%esp),%ebp
    3e31:	83 e6 80             	and    $0xffffff80,%esi
    3e34:	83 e0 3f             	and    $0x3f,%eax
    3e37:	09 c6                	or     %eax,%esi
    3e39:	c1 ef 10             	shr    $0x10,%edi
    3e3c:	8d 74 26 00          	lea    0x0(%esi),%esi
    3e40:	89 7c 24 04          	mov    %edi,0x4(%esp)
    3e44:	89 1c 24             	mov    %ebx,(%esp)
    3e47:	e8 fc ff ff ff       	call   3e48 <CmdMMCSD+0x58>
			3e48: R_386_PC32	MMCSD_ARGUMENT_HIGH2
    3e4c:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    3e50:	89 1c 24             	mov    %ebx,(%esp)
    3e53:	e8 fc ff ff ff       	call   3e54 <CmdMMCSD+0x64>
			3e54: R_386_PC32	MMCSD_ARGUMENT_LOW2
    3e58:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
    3e5f:	89 74 24 04          	mov    %esi,0x4(%esp)
    3e63:	89 1c 24             	mov    %ebx,(%esp)
    3e66:	e8 fc ff ff ff       	call   3e67 <CmdMMCSD+0x77>
			3e67: R_386_PC32	MMCSD_COMMAND2
    3e6b:	89 1c 24             	mov    %ebx,(%esp)
    3e6e:	e8 ed f9 ff ff       	call   3860 <WaitForEOCMMCSD>
    3e73:	fe 44 24 0b          	incb   0xb(%esp)
    3e77:	88 c2                	mov    %al,%dl
    3e79:	3c 20                	cmp    $0x20,%al
    3e7b:	75 13                	jne    3e90 <CmdMMCSD+0xa0>
    3e7d:	80 7c 24 0b 01       	cmpb   $0x1,0xb(%esp)
    3e82:	77 0c                	ja     3e90 <CmdMMCSD+0xa0>
    3e84:	8b 43 50             	mov    0x50(%ebx),%eax
    3e87:	8b 40 28             	mov    0x28(%eax),%eax
    3e8a:	80 78 04 03          	cmpb   $0x3,0x4(%eax)
    3e8e:	75 b0                	jne    3e40 <CmdMMCSD+0x50>
    3e90:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
    3e95:	80 fa 2a             	cmp    $0x2a,%dl
    3e98:	74 0b                	je     3ea5 <CmdMMCSD+0xb5>
    3e9a:	0f b6 c2             	movzbl %dl,%eax
    3e9d:	83 c4 20             	add    $0x20,%esp
    3ea0:	5b                   	pop    %ebx
    3ea1:	5e                   	pop    %esi
    3ea2:	5f                   	pop    %edi
    3ea3:	5d                   	pop    %ebp
    3ea4:	c3                   	ret    
    3ea5:	80 7c 24 10 37       	cmpb   $0x37,0x10(%esp)
    3eaa:	75 ee                	jne    3e9a <CmdMMCSD+0xaa>
    3eac:	8b 43 50             	mov    0x50(%ebx),%eax
    3eaf:	8b 40 28             	mov    0x28(%eax),%eax
    3eb2:	80 78 04 23          	cmpb   $0x23,0x4(%eax)
    3eb6:	75 e2                	jne    3e9a <CmdMMCSD+0xaa>
    3eb8:	8b 74 24 0c          	mov    0xc(%esp),%esi
    3ebc:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
    3ec0:	83 e6 80             	and    $0xffffff80,%esi
    3ec3:	83 ce 37             	or     $0x37,%esi
    3ec6:	c1 ef 10             	shr    $0x10,%edi
    3ec9:	89 7c 24 04          	mov    %edi,0x4(%esp)
    3ecd:	89 1c 24             	mov    %ebx,(%esp)
    3ed0:	e8 fc ff ff ff       	call   3ed1 <CmdMMCSD+0xe1>
			3ed1: R_386_PC32	MMCSD_ARGUMENT_HIGH2
    3ed5:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    3ed9:	89 1c 24             	mov    %ebx,(%esp)
    3edc:	e8 fc ff ff ff       	call   3edd <CmdMMCSD+0xed>
			3edd: R_386_PC32	MMCSD_ARGUMENT_LOW2
    3ee1:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
    3ee8:	c7 04 24 bc 8d 06 00 	movl   $0x68dbc,(%esp)
    3eef:	e8 fc ff ff ff       	call   3ef0 <CmdMMCSD+0x100>
			3ef0: R_386_PC32	__const_udelay
    3ef4:	89 74 24 04          	mov    %esi,0x4(%esp)
    3ef8:	89 1c 24             	mov    %ebx,(%esp)
    3efb:	e8 fc ff ff ff       	call   3efc <CmdMMCSD+0x10c>
			3efc: R_386_PC32	MMCSD_COMMAND2
    3f00:	89 1c 24             	mov    %ebx,(%esp)
    3f03:	e8 58 f9 ff ff       	call   3860 <WaitForEOCMMCSD>
    3f08:	fe 44 24 0b          	incb   0xb(%esp)
    3f0c:	88 c2                	mov    %al,%dl
    3f0e:	3c 2a                	cmp    $0x2a,%al
    3f10:	75 88                	jne    3e9a <CmdMMCSD+0xaa>
    3f12:	80 7c 24 10 37       	cmpb   $0x37,0x10(%esp)
    3f17:	75 81                	jne    3e9a <CmdMMCSD+0xaa>
    3f19:	80 7c 24 0b 09       	cmpb   $0x9,0xb(%esp)
    3f1e:	0f 87 76 ff ff ff    	ja     3e9a <CmdMMCSD+0xaa>
    3f24:	8b 43 50             	mov    0x50(%ebx),%eax
    3f27:	8b 40 28             	mov    0x28(%eax),%eax
    3f2a:	80 78 04 23          	cmpb   $0x23,0x4(%eax)
    3f2e:	74 99                	je     3ec9 <CmdMMCSD+0xd9>
    3f30:	e9 65 ff ff ff       	jmp    3e9a <CmdMMCSD+0xaa>
    3f35:	8d 74 26 00          	lea    0x0(%esi),%esi
    3f39:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00003f40 <MMCSD_RESPONSE2>:
    3f40:	55                   	push   %ebp
    3f41:	57                   	push   %edi
    3f42:	56                   	push   %esi
    3f43:	53                   	push   %ebx
    3f44:	83 ec 4c             	sub    $0x4c,%esp
    3f47:	0f b6 4c 24 64       	movzbl 0x64(%esp),%ecx
    3f4c:	0f b6 5c 24 68       	movzbl 0x68(%esp),%ebx
    3f51:	0f b6 54 24 6c       	movzbl 0x6c(%esp),%edx
    3f56:	66 c7 44 24 2c 01 00 	movw   $0x1,0x2c(%esp)
    3f5d:	88 c8                	mov    %cl,%al
    3f5f:	c0 e8 04             	shr    $0x4,%al
    3f62:	66 c7 44 24 2e 03 00 	movw   $0x3,0x2e(%esp)
    3f69:	0f b6 e8             	movzbl %al,%ebp
    3f6c:	88 d8                	mov    %bl,%al
    3f6e:	66 c7 44 24 30 07 00 	movw   $0x7,0x30(%esp)
    3f75:	c0 e8 04             	shr    $0x4,%al
    3f78:	0f b6 f8             	movzbl %al,%edi
    3f7b:	66 c7 44 24 32 0f 00 	movw   $0xf,0x32(%esp)
    3f82:	66 c7 44 24 34 1f 00 	movw   $0x1f,0x34(%esp)
    3f89:	66 c7 44 24 36 3f 00 	movw   $0x3f,0x36(%esp)
    3f90:	66 c7 44 24 38 7f 00 	movw   $0x7f,0x38(%esp)
    3f97:	66 c7 44 24 3a ff 00 	movw   $0xff,0x3a(%esp)
    3f9e:	66 c7 44 24 3c ff 01 	movw   $0x1ff,0x3c(%esp)
    3fa5:	66 c7 44 24 3e ff 03 	movw   $0x3ff,0x3e(%esp)
    3fac:	66 c7 44 24 40 ff 07 	movw   $0x7ff,0x40(%esp)
    3fb3:	66 c7 44 24 42 ff 0f 	movw   $0xfff,0x42(%esp)
    3fba:	66 c7 44 24 44 ff 1f 	movw   $0x1fff,0x44(%esp)
    3fc1:	66 c7 44 24 46 ff 3f 	movw   $0x3fff,0x46(%esp)
    3fc8:	66 c7 44 24 48 ff 7f 	movw   $0x7fff,0x48(%esp)
    3fcf:	66 c7 44 24 4a ff ff 	movw   $0xffff,0x4a(%esp)
    3fd6:	66 c7 44 24 0c ff ff 	movw   $0xffff,0xc(%esp)
    3fdd:	66 c7 44 24 0e fe ff 	movw   $0xfffe,0xe(%esp)
    3fe4:	66 c7 44 24 10 fc ff 	movw   $0xfffc,0x10(%esp)
    3feb:	66 c7 44 24 12 f8 ff 	movw   $0xfff8,0x12(%esp)
    3ff2:	66 c7 44 24 14 f0 ff 	movw   $0xfff0,0x14(%esp)
    3ff9:	66 c7 44 24 16 e0 ff 	movw   $0xffe0,0x16(%esp)
    4000:	66 c7 44 24 18 c0 ff 	movw   $0xffc0,0x18(%esp)
    4007:	66 c7 44 24 1a 80 ff 	movw   $0xff80,0x1a(%esp)
    400e:	66 c7 44 24 1c 00 ff 	movw   $0xff00,0x1c(%esp)
    4015:	66 c7 44 24 1e 00 fe 	movw   $0xfe00,0x1e(%esp)
    401c:	66 c7 44 24 20 00 fc 	movw   $0xfc00,0x20(%esp)
    4023:	66 c7 44 24 22 00 f8 	movw   $0xf800,0x22(%esp)
    402a:	66 c7 44 24 24 00 f0 	movw   $0xf000,0x24(%esp)
    4031:	66 c7 44 24 26 00 e0 	movw   $0xe000,0x26(%esp)
    4038:	66 c7 44 24 28 00 c0 	movw   $0xc000,0x28(%esp)
    403f:	66 c7 44 24 2a 00 80 	movw   $0x8000,0x2a(%esp)
    4046:	c6 44 24 0b 00       	movb   $0x0,0xb(%esp)
    404b:	31 f6                	xor    %esi,%esi
    404d:	8b 44 24 60          	mov    0x60(%esp),%eax
    4051:	85 c0                	test   %eax,%eax
    4053:	74 2b                	je     4080 <MMCSD_RESPONSE2+0x140>
    4055:	84 d2                	test   %dl,%dl
    4057:	75 05                	jne    405e <MMCSD_RESPONSE2+0x11e>
    4059:	c6 44 24 0b 06       	movb   $0x6,0xb(%esp)
    405e:	31 f6                	xor    %esi,%esi
    4060:	38 d9                	cmp    %bl,%cl
    4062:	72 1c                	jb     4080 <MMCSD_RESPONSE2+0x140>
    4064:	84 c9                	test   %cl,%cl
    4066:	78 18                	js     4080 <MMCSD_RESPONSE2+0x140>
    4068:	0f b6 c3             	movzbl %bl,%eax
    406b:	0f b6 d1             	movzbl %cl,%edx
    406e:	83 c0 20             	add    $0x20,%eax
    4071:	39 c2                	cmp    %eax,%edx
    4073:	7e 15                	jle    408a <MMCSD_RESPONSE2+0x14a>
    4075:	8d 74 26 00          	lea    0x0(%esi),%esi
    4079:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    4080:	83 c4 4c             	add    $0x4c,%esp
    4083:	89 f0                	mov    %esi,%eax
    4085:	5b                   	pop    %ebx
    4086:	5e                   	pop    %esi
    4087:	5f                   	pop    %edi
    4088:	5d                   	pop    %ebp
    4089:	c3                   	ret    
    408a:	0f b6 54 24 0b       	movzbl 0xb(%esp),%edx
    408f:	89 e8                	mov    %ebp,%eax
    4091:	c1 e0 04             	shl    $0x4,%eax
    4094:	28 c1                	sub    %al,%cl
    4096:	89 f8                	mov    %edi,%eax
    4098:	c1 e0 04             	shl    $0x4,%eax
    409b:	88 4c 24 0a          	mov    %cl,0xa(%esp)
    409f:	28 c3                	sub    %al,%bl
    40a1:	01 fa                	add    %edi,%edx
    40a3:	0f b6 44 24 0b       	movzbl 0xb(%esp),%eax
    40a8:	88 5c 24 09          	mov    %bl,0x9(%esp)
    40ac:	8b 4c 24 60          	mov    0x60(%esp),%ecx
    40b0:	88 54 24 08          	mov    %dl,0x8(%esp)
    40b4:	01 e8                	add    %ebp,%eax
    40b6:	0f b6 c0             	movzbl %al,%eax
    40b9:	89 44 24 04          	mov    %eax,0x4(%esp)
    40bd:	89 0c 24             	mov    %ecx,(%esp)
    40c0:	e8 fc ff ff ff       	call   40c1 <MMCSD_RESPONSE2+0x181>
			40c1: R_386_PC32	MMCSD_RESPONSE1
    40c5:	89 c6                	mov    %eax,%esi
    40c7:	0f b6 44 24 0a       	movzbl 0xa(%esp),%eax
    40cc:	0f b7 44 44 2c       	movzwl 0x2c(%esp,%eax,2),%eax
    40d1:	21 c6                	and    %eax,%esi
    40d3:	66 39 fd             	cmp    %di,%bp
    40d6:	74 34                	je     410c <MMCSD_RESPONSE2+0x1cc>
    40d8:	0f b6 44 24 08       	movzbl 0x8(%esp),%eax
    40dd:	c1 e6 10             	shl    $0x10,%esi
    40e0:	89 44 24 04          	mov    %eax,0x4(%esp)
    40e4:	8b 44 24 60          	mov    0x60(%esp),%eax
    40e8:	89 04 24             	mov    %eax,(%esp)
    40eb:	e8 fc ff ff ff       	call   40ec <MMCSD_RESPONSE2+0x1ac>
			40ec: R_386_PC32	MMCSD_RESPONSE1
    40f0:	89 c2                	mov    %eax,%edx
    40f2:	0f b6 44 24 09       	movzbl 0x9(%esp),%eax
    40f7:	0f b7 44 44 0c       	movzwl 0xc(%esp,%eax,2),%eax
    40fc:	21 c2                	and    %eax,%edx
    40fe:	0f b6 4c 24 09       	movzbl 0x9(%esp),%ecx
    4103:	09 d6                	or     %edx,%esi
    4105:	d3 ee                	shr    %cl,%esi
    4107:	e9 74 ff ff ff       	jmp    4080 <MMCSD_RESPONSE2+0x140>
    410c:	0f b6 44 24 09       	movzbl 0x9(%esp),%eax
    4111:	0f b7 44 44 0c       	movzwl 0xc(%esp,%eax,2),%eax
    4116:	21 c6                	and    %eax,%esi
    4118:	89 f2                	mov    %esi,%edx
    411a:	eb e2                	jmp    40fe <MMCSD_RESPONSE2+0x1be>
    411c:	8d 74 26 00          	lea    0x0(%esi),%esi

00004120 <DetectCardTypeMMCSD>:
    4120:	83 ec 18             	sub    $0x18,%esp
    4123:	89 74 24 14          	mov    %esi,0x14(%esp)
    4127:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    412b:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    412f:	b8 00 13 00 00       	mov    $0x1300,%eax
    4134:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4138:	31 c0                	xor    %eax,%eax
    413a:	89 44 24 08          	mov    %eax,0x8(%esp)
    413e:	b8 05 00 00 00       	mov    $0x5,%eax
    4143:	89 44 24 04          	mov    %eax,0x4(%esp)
    4147:	89 34 24             	mov    %esi,(%esp)
    414a:	e8 a1 fc ff ff       	call   3df0 <CmdMMCSD>
    414f:	84 c0                	test   %al,%al
    4151:	75 1d                	jne    4170 <DetectCardTypeMMCSD+0x50>
    4153:	8b 46 50             	mov    0x50(%esi),%eax
    4156:	8b 40 28             	mov    0x28(%eax),%eax
    4159:	c6 40 04 43          	movb   $0x43,0x4(%eax)
    415d:	31 c0                	xor    %eax,%eax
    415f:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    4163:	8b 74 24 14          	mov    0x14(%esp),%esi
    4167:	83 c4 18             	add    $0x18,%esp
    416a:	c3                   	ret    
    416b:	90                   	nop    
    416c:	8d 74 26 00          	lea    0x0(%esi),%esi
    4170:	89 34 24             	mov    %esi,(%esp)
    4173:	31 c0                	xor    %eax,%eax
    4175:	31 db                	xor    %ebx,%ebx
    4177:	89 44 24 0c          	mov    %eax,0xc(%esp)
    417b:	31 c0                	xor    %eax,%eax
    417d:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    4181:	89 44 24 08          	mov    %eax,0x8(%esp)
    4185:	e8 66 fc ff ff       	call   3df0 <CmdMMCSD>
    418a:	84 c0                	test   %al,%al
    418c:	88 c3                	mov    %al,%bl
    418e:	74 20                	je     41b0 <DetectCardTypeMMCSD+0x90>
    4190:	c7 04 24 80 0b 00 00 	movl   $0xb80,(%esp)
			4193: R_386_32	.rodata.str1.32
    4197:	b9 1c 05 00 00       	mov    $0x51c,%ecx
			4198: R_386_32	.rodata
    419c:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    41a0:	e8 fc ff ff ff       	call   41a1 <DetectCardTypeMMCSD+0x81>
			41a1: R_386_PC32	printk
    41a5:	0f b6 c3             	movzbl %bl,%eax
    41a8:	eb b5                	jmp    415f <DetectCardTypeMMCSD+0x3f>
    41aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    41b0:	89 34 24             	mov    %esi,(%esp)
    41b3:	31 c0                	xor    %eax,%eax
    41b5:	ba 00 21 00 00       	mov    $0x2100,%edx
    41ba:	89 44 24 08          	mov    %eax,0x8(%esp)
    41be:	b8 37 00 00 00       	mov    $0x37,%eax
    41c3:	89 54 24 0c          	mov    %edx,0xc(%esp)
    41c7:	89 44 24 04          	mov    %eax,0x4(%esp)
    41cb:	e8 20 fc ff ff       	call   3df0 <CmdMMCSD>
    41d0:	0f b6 d0             	movzbl %al,%edx
    41d3:	88 c3                	mov    %al,%bl
    41d5:	83 fa 20             	cmp    $0x20,%edx
    41d8:	74 27                	je     4201 <DetectCardTypeMMCSD+0xe1>
    41da:	81 fa 86 00 00 00    	cmp    $0x86,%edx
    41e0:	b8 86 00 00 00       	mov    $0x86,%eax
    41e5:	0f 84 74 ff ff ff    	je     415f <DetectCardTypeMMCSD+0x3f>
    41eb:	84 db                	test   %bl,%bl
    41ed:	89 d0                	mov    %edx,%eax
    41ef:	0f 85 6a ff ff ff    	jne    415f <DetectCardTypeMMCSD+0x3f>
    41f5:	8b 46 50             	mov    0x50(%esi),%eax
    41f8:	8b 40 28             	mov    0x28(%eax),%eax
    41fb:	c6 40 04 23          	movb   $0x23,0x4(%eax)
    41ff:	eb a4                	jmp    41a5 <DetectCardTypeMMCSD+0x85>
    4201:	89 34 24             	mov    %esi,(%esp)
    4204:	31 c0                	xor    %eax,%eax
    4206:	31 db                	xor    %ebx,%ebx
    4208:	89 44 24 0c          	mov    %eax,0xc(%esp)
    420c:	31 c0                	xor    %eax,%eax
    420e:	89 44 24 08          	mov    %eax,0x8(%esp)
    4212:	31 c0                	xor    %eax,%eax
    4214:	89 44 24 04          	mov    %eax,0x4(%esp)
    4218:	e8 d3 fb ff ff       	call   3df0 <CmdMMCSD>
    421d:	8b 46 50             	mov    0x50(%esi),%eax
    4220:	8b 40 28             	mov    0x28(%eax),%eax
    4223:	c6 40 04 13          	movb   $0x13,0x4(%eax)
    4227:	e9 79 ff ff ff       	jmp    41a5 <DetectCardTypeMMCSD+0x85>
    422c:	8d 74 26 00          	lea    0x0(%esi),%esi

00004230 <StandbyMMCSD>:
    4230:	55                   	push   %ebp
    4231:	57                   	push   %edi
    4232:	56                   	push   %esi
    4233:	53                   	push   %ebx
    4234:	83 ec 24             	sub    $0x24,%esp
    4237:	c6 44 24 12 00       	movb   $0x0,0x12(%esp)
    423c:	31 c0                	xor    %eax,%eax
    423e:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4242:	31 c0                	xor    %eax,%eax
    4244:	89 44 24 08          	mov    %eax,0x8(%esp)
    4248:	31 c0                	xor    %eax,%eax
    424a:	89 44 24 04          	mov    %eax,0x4(%esp)
    424e:	8b 44 24 38          	mov    0x38(%esp),%eax
    4252:	89 04 24             	mov    %eax,(%esp)
    4255:	e8 96 fb ff ff       	call   3df0 <CmdMMCSD>
    425a:	84 c0                	test   %al,%al
    425c:	88 c3                	mov    %al,%bl
    425e:	0f 85 6c 01 00 00    	jne    43d0 <StandbyMMCSD+0x1a0>
    4264:	8b 54 24 38          	mov    0x38(%esp),%edx
    4268:	8b 42 50             	mov    0x50(%edx),%eax
    426b:	8b 40 28             	mov    0x28(%eax),%eax
    426e:	80 78 04 23          	cmpb   $0x23,0x4(%eax)
    4272:	0f 84 47 02 00 00    	je     44bf <StandbyMMCSD+0x28f>
    4278:	c6 44 24 13 01       	movb   $0x1,0x13(%esp)
    427d:	8d 44 24 1c          	lea    0x1c(%esp),%eax
    4281:	89 04 24             	mov    %eax,(%esp)
    4284:	e8 fc ff ff ff       	call   4285 <StandbyMMCSD+0x55>
			4285: R_386_PC32	current_kernel_time
    4289:	83 ec 04             	sub    $0x4,%esp
    428c:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    4290:	8b 6c 24 20          	mov    0x20(%esp),%ebp
    4294:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    429a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
    42a0:	8b 54 24 38          	mov    0x38(%esp),%edx
    42a4:	8b 42 50             	mov    0x50(%edx),%eax
    42a7:	8b 40 28             	mov    0x28(%eax),%eax
    42aa:	80 78 04 23          	cmpb   $0x23,0x4(%eax)
    42ae:	0f 84 dc 01 00 00    	je     4490 <StandbyMMCSD+0x260>
    42b4:	0f b6 44 24 13       	movzbl 0x13(%esp),%eax
    42b9:	bb 00 00 fc 80       	mov    $0x80fc0000,%ebx
    42be:	be 00 13 00 00       	mov    $0x1300,%esi
    42c3:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    42c7:	89 74 24 0c          	mov    %esi,0xc(%esp)
    42cb:	89 44 24 04          	mov    %eax,0x4(%esp)
    42cf:	8b 44 24 38          	mov    0x38(%esp),%eax
    42d3:	89 04 24             	mov    %eax,(%esp)
    42d6:	e8 15 fb ff ff       	call   3df0 <CmdMMCSD>
    42db:	3c 20                	cmp    $0x20,%al
    42dd:	88 c3                	mov    %al,%bl
    42df:	0f 84 91 01 00 00    	je     4476 <StandbyMMCSD+0x246>
    42e5:	c6 44 24 12 01       	movb   $0x1,0x12(%esp)
    42ea:	84 c0                	test   %al,%al
    42ec:	0f 85 de 00 00 00    	jne    43d0 <StandbyMMCSD+0x1a0>
    42f2:	c7 04 24 58 89 41 00 	movl   $0x418958,(%esp)
    42f9:	e8 fc ff ff ff       	call   42fa <StandbyMMCSD+0xca>
			42fa: R_386_PC32	__const_udelay
    42fe:	8d 44 24 14          	lea    0x14(%esp),%eax
    4302:	89 04 24             	mov    %eax,(%esp)
    4305:	e8 fc ff ff ff       	call   4306 <StandbyMMCSD+0xd6>
			4306: R_386_PC32	current_kernel_time
    430a:	83 ec 04             	sub    $0x4,%esp
    430d:	8b 44 24 14          	mov    0x14(%esp),%eax
    4311:	8b 54 24 18          	mov    0x18(%esp),%edx
    4315:	89 c1                	mov    %eax,%ecx
    4317:	89 d0                	mov    %edx,%eax
    4319:	29 f9                	sub    %edi,%ecx
    431b:	29 e8                	sub    %ebp,%eax
    431d:	69 c9 00 ca 9a 3b    	imul   $0x3b9aca00,%ecx,%ecx
    4323:	89 c2                	mov    %eax,%edx
    4325:	f7 da                	neg    %edx
    4327:	83 f8 ff             	cmp    $0xffffffff,%eax
    432a:	0f 4e c2             	cmovle %edx,%eax
    432d:	ba 1f 00 00 00       	mov    $0x1f,%edx
    4332:	01 c1                	add    %eax,%ecx
    4334:	89 54 24 08          	mov    %edx,0x8(%esp)
    4338:	89 ce                	mov    %ecx,%esi
    433a:	89 cb                	mov    %ecx,%ebx
    433c:	8b 54 24 38          	mov    0x38(%esp),%edx
    4340:	b8 1f 00 00 00       	mov    $0x1f,%eax
    4345:	31 c9                	xor    %ecx,%ecx
    4347:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    434b:	c1 fe 1f             	sar    $0x1f,%esi
    434e:	89 44 24 04          	mov    %eax,0x4(%esp)
    4352:	89 14 24             	mov    %edx,(%esp)
    4355:	e8 e6 fb ff ff       	call   3f40 <MMCSD_RESPONSE2>
    435a:	85 c0                	test   %eax,%eax
    435c:	75 17                	jne    4375 <StandbyMMCSD+0x145>
    435e:	83 fe 01             	cmp    $0x1,%esi
    4361:	0f 82 39 ff ff ff    	jb     42a0 <StandbyMMCSD+0x70>
    4367:	77 0c                	ja     4375 <StandbyMMCSD+0x145>
    4369:	81 fb ff f1 05 2a    	cmp    $0x2a05f1ff,%ebx
    436f:	0f 86 2b ff ff ff    	jbe    42a0 <StandbyMMCSD+0x70>
    4375:	31 c0                	xor    %eax,%eax
    4377:	89 44 24 0c          	mov    %eax,0xc(%esp)
    437b:	b8 1f 00 00 00       	mov    $0x1f,%eax
    4380:	89 44 24 08          	mov    %eax,0x8(%esp)
    4384:	b8 1f 00 00 00       	mov    $0x1f,%eax
    4389:	89 44 24 04          	mov    %eax,0x4(%esp)
    438d:	8b 44 24 38          	mov    0x38(%esp),%eax
    4391:	89 04 24             	mov    %eax,(%esp)
    4394:	e8 a7 fb ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4399:	85 c0                	test   %eax,%eax
    439b:	ba 2d 00 00 00       	mov    $0x2d,%edx
    43a0:	74 31                	je     43d3 <StandbyMMCSD+0x1a3>
    43a2:	8b 54 24 38          	mov    0x38(%esp),%edx
    43a6:	b8 00 12 00 00       	mov    $0x1200,%eax
    43ab:	bd 02 00 00 00       	mov    $0x2,%ebp
    43b0:	89 44 24 0c          	mov    %eax,0xc(%esp)
    43b4:	31 c0                	xor    %eax,%eax
    43b6:	89 44 24 08          	mov    %eax,0x8(%esp)
    43ba:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    43be:	89 14 24             	mov    %edx,(%esp)
    43c1:	e8 2a fa ff ff       	call   3df0 <CmdMMCSD>
    43c6:	84 c0                	test   %al,%al
    43c8:	88 c3                	mov    %al,%bl
    43ca:	74 11                	je     43dd <StandbyMMCSD+0x1ad>
    43cc:	8d 74 26 00          	lea    0x0(%esi),%esi
    43d0:	0f b6 d3             	movzbl %bl,%edx
    43d3:	83 c4 24             	add    $0x24,%esp
    43d6:	89 d0                	mov    %edx,%eax
    43d8:	5b                   	pop    %ebx
    43d9:	5e                   	pop    %esi
    43da:	5f                   	pop    %edi
    43db:	5d                   	pop    %ebp
    43dc:	c3                   	ret    
    43dd:	8b 44 24 38          	mov    0x38(%esp),%eax
    43e1:	bb 03 00 00 00       	mov    $0x3,%ebx
    43e6:	bf 00 16 00 00       	mov    $0x1600,%edi
    43eb:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    43ef:	be 00 00 02 00       	mov    $0x20000,%esi
    43f4:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    43f8:	89 74 24 08          	mov    %esi,0x8(%esp)
    43fc:	89 04 24             	mov    %eax,(%esp)
    43ff:	e8 ec f9 ff ff       	call   3df0 <CmdMMCSD>
    4404:	84 c0                	test   %al,%al
    4406:	88 c3                	mov    %al,%bl
    4408:	75 c6                	jne    43d0 <StandbyMMCSD+0x1a0>
    440a:	8b 54 24 38          	mov    0x38(%esp),%edx
    440e:	8b 42 50             	mov    0x50(%edx),%eax
    4411:	8b 40 28             	mov    0x28(%eax),%eax
    4414:	0f b6 40 04          	movzbl 0x4(%eax),%eax
    4418:	83 f8 13             	cmp    $0x13,%eax
    441b:	74 49                	je     4466 <StandbyMMCSD+0x236>
    441d:	83 f8 23             	cmp    $0x23,%eax
    4420:	ba 83 00 00 00       	mov    $0x83,%edx
    4425:	75 ac                	jne    43d3 <StandbyMMCSD+0x1a3>
    4427:	b8 1f 00 00 00       	mov    $0x1f,%eax
    442c:	31 d2                	xor    %edx,%edx
    442e:	31 c9                	xor    %ecx,%ecx
    4430:	89 44 24 04          	mov    %eax,0x4(%esp)
    4434:	8b 44 24 38          	mov    0x38(%esp),%eax
    4438:	89 54 24 08          	mov    %edx,0x8(%esp)
    443c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    4440:	89 04 24             	mov    %eax,(%esp)
    4443:	e8 f8 fa ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4448:	8b 54 24 38          	mov    0x38(%esp),%edx
    444c:	25 00 00 ff ff       	and    $0xffff0000,%eax
    4451:	85 c0                	test   %eax,%eax
    4453:	89 42 14             	mov    %eax,0x14(%edx)
    4456:	ba 2c 00 00 00       	mov    $0x2c,%edx
    445b:	0f 85 6f ff ff ff    	jne    43d0 <StandbyMMCSD+0x1a0>
    4461:	e9 6d ff ff ff       	jmp    43d3 <StandbyMMCSD+0x1a3>
    4466:	8b 44 24 38          	mov    0x38(%esp),%eax
    446a:	c7 40 14 00 00 02 00 	movl   $0x20000,0x14(%eax)
    4471:	e9 5a ff ff ff       	jmp    43d0 <StandbyMMCSD+0x1a0>
    4476:	80 7c 24 12 00       	cmpb   $0x0,0x12(%esp)
    447b:	ba 28 00 00 00       	mov    $0x28,%edx
    4480:	0f 85 4d ff ff ff    	jne    43d3 <StandbyMMCSD+0x1a3>
    4486:	ba 27 00 00 00       	mov    $0x27,%edx
    448b:	e9 43 ff ff ff       	jmp    43d3 <StandbyMMCSD+0x1a3>
    4490:	89 14 24             	mov    %edx,(%esp)
    4493:	b8 00 21 00 00       	mov    $0x2100,%eax
    4498:	89 44 24 0c          	mov    %eax,0xc(%esp)
    449c:	31 c0                	xor    %eax,%eax
    449e:	89 44 24 08          	mov    %eax,0x8(%esp)
    44a2:	b8 37 00 00 00       	mov    $0x37,%eax
    44a7:	89 44 24 04          	mov    %eax,0x4(%esp)
    44ab:	e8 40 f9 ff ff       	call   3df0 <CmdMMCSD>
    44b0:	84 c0                	test   %al,%al
    44b2:	88 c3                	mov    %al,%bl
    44b4:	0f 84 fa fd ff ff    	je     42b4 <StandbyMMCSD+0x84>
    44ba:	e9 11 ff ff ff       	jmp    43d0 <StandbyMMCSD+0x1a0>
    44bf:	c6 44 24 13 29       	movb   $0x29,0x13(%esp)
    44c4:	e9 b4 fd ff ff       	jmp    427d <StandbyMMCSD+0x4d>
    44c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

000044d0 <ReadCSDInformationMMCSD>:
    44d0:	55                   	push   %ebp
    44d1:	b8 10 27 00 00       	mov    $0x2710,%eax
    44d6:	57                   	push   %edi
    44d7:	56                   	push   %esi
    44d8:	53                   	push   %ebx
    44d9:	83 ec 58             	sub    $0x58,%esp
    44dc:	8b 74 24 6c          	mov    0x6c(%esp),%esi
    44e0:	89 44 24 48          	mov    %eax,0x48(%esp)
    44e4:	b8 a0 86 01 00       	mov    $0x186a0,%eax
    44e9:	89 44 24 4c          	mov    %eax,0x4c(%esp)
    44ed:	b8 40 42 0f 00       	mov    $0xf4240,%eax
    44f2:	89 44 24 50          	mov    %eax,0x50(%esp)
    44f6:	b8 80 96 98 00       	mov    $0x989680,%eax
    44fb:	89 44 24 54          	mov    %eax,0x54(%esp)
    44ff:	c6 44 24 38 0a       	movb   $0xa,0x38(%esp)
    4504:	c6 44 24 39 0a       	movb   $0xa,0x39(%esp)
    4509:	c6 44 24 3a 0c       	movb   $0xc,0x3a(%esp)
    450e:	c6 44 24 3b 0d       	movb   $0xd,0x3b(%esp)
    4513:	c6 44 24 3c 0f       	movb   $0xf,0x3c(%esp)
    4518:	c6 44 24 3d 14       	movb   $0x14,0x3d(%esp)
    451d:	c6 44 24 3e 19       	movb   $0x19,0x3e(%esp)
    4522:	c6 44 24 3f 1e       	movb   $0x1e,0x3f(%esp)
    4527:	c6 44 24 40 23       	movb   $0x23,0x40(%esp)
    452c:	c6 44 24 41 28       	movb   $0x28,0x41(%esp)
    4531:	c6 44 24 42 2d       	movb   $0x2d,0x42(%esp)
    4536:	c6 44 24 43 32       	movb   $0x32,0x43(%esp)
    453b:	c6 44 24 44 37       	movb   $0x37,0x44(%esp)
    4540:	c6 44 24 45 3c       	movb   $0x3c,0x45(%esp)
    4545:	c6 44 24 46 46       	movb   $0x46,0x46(%esp)
    454a:	c6 44 24 47 50       	movb   $0x50,0x47(%esp)
    454f:	b8 00 22 00 00       	mov    $0x2200,%eax
    4554:	bd 09 00 00 00       	mov    $0x9,%ebp
    4559:	89 44 24 0c          	mov    %eax,0xc(%esp)
    455d:	8b 46 14             	mov    0x14(%esi),%eax
    4560:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    4564:	89 34 24             	mov    %esi,(%esp)
    4567:	89 44 24 08          	mov    %eax,0x8(%esp)
    456b:	e8 80 f8 ff ff       	call   3df0 <CmdMMCSD>
    4570:	88 44 24 27          	mov    %al,0x27(%esp)
    4574:	3c 21                	cmp    $0x21,%al
    4576:	0f 84 04 02 00 00    	je     4780 <ReadCSDInformationMMCSD+0x2b0>
    457c:	80 7c 24 27 00       	cmpb   $0x0,0x27(%esp)
    4581:	0f 85 ec 01 00 00    	jne    4773 <ReadCSDInformationMMCSD+0x2a3>
    4587:	89 34 24             	mov    %esi,(%esp)
    458a:	b8 01 00 00 00       	mov    $0x1,%eax
    458f:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4593:	b8 7e 00 00 00       	mov    $0x7e,%eax
    4598:	89 44 24 08          	mov    %eax,0x8(%esp)
    459c:	b8 7f 00 00 00       	mov    $0x7f,%eax
    45a1:	89 44 24 04          	mov    %eax,0x4(%esp)
    45a5:	e8 96 f9 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    45aa:	b8 01 00 00 00       	mov    $0x1,%eax
    45af:	bd 70 00 00 00       	mov    $0x70,%ebp
    45b4:	bf 77 00 00 00       	mov    $0x77,%edi
    45b9:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    45bd:	89 7c 24 04          	mov    %edi,0x4(%esp)
    45c1:	89 34 24             	mov    %esi,(%esp)
    45c4:	89 44 24 0c          	mov    %eax,0xc(%esp)
    45c8:	e8 73 f9 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    45cd:	bb 01 00 00 00       	mov    $0x1,%ebx
    45d2:	b9 68 00 00 00       	mov    $0x68,%ecx
    45d7:	ba 6f 00 00 00       	mov    $0x6f,%edx
    45dc:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    45e0:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    45e4:	89 54 24 04          	mov    %edx,0x4(%esp)
    45e8:	89 34 24             	mov    %esi,(%esp)
    45eb:	e8 50 f9 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    45f0:	b8 01 00 00 00       	mov    $0x1,%eax
    45f5:	89 44 24 0c          	mov    %eax,0xc(%esp)
    45f9:	b8 1a 00 00 00       	mov    $0x1a,%eax
    45fe:	89 44 24 08          	mov    %eax,0x8(%esp)
    4602:	b8 1c 00 00 00       	mov    $0x1c,%eax
    4607:	89 34 24             	mov    %esi,(%esp)
    460a:	89 44 24 04          	mov    %eax,0x4(%esp)
    460e:	e8 2d f9 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4613:	b8 01 00 00 00       	mov    $0x1,%eax
    4618:	89 44 24 0c          	mov    %eax,0xc(%esp)
    461c:	b8 60 00 00 00       	mov    $0x60,%eax
    4621:	89 44 24 08          	mov    %eax,0x8(%esp)
    4625:	b8 67 00 00 00       	mov    $0x67,%eax
    462a:	89 34 24             	mov    %esi,(%esp)
    462d:	89 44 24 04          	mov    %eax,0x4(%esp)
    4631:	e8 0a f9 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4636:	88 44 24 14          	mov    %al,0x14(%esp)
    463a:	24 07                	and    $0x7,%al
    463c:	3c 03                	cmp    $0x3,%al
    463e:	bb 10 27 00 00       	mov    $0x2710,%ebx
    4643:	77 07                	ja     464c <ReadCSDInformationMMCSD+0x17c>
    4645:	83 e0 03             	and    $0x3,%eax
    4648:	8b 5c 84 48          	mov    0x48(%esp,%eax,4),%ebx
    464c:	0f b6 44 24 14       	movzbl 0x14(%esp),%eax
    4651:	31 d2                	xor    %edx,%edx
    4653:	8b 7e 50             	mov    0x50(%esi),%edi
    4656:	83 e0 78             	and    $0x78,%eax
    4659:	c1 e8 03             	shr    $0x3,%eax
    465c:	0f b6 c0             	movzbl %al,%eax
    465f:	0f b6 44 04 38       	movzbl 0x38(%esp,%eax,1),%eax
    4664:	0f af d8             	imul   %eax,%ebx
    4667:	8b 47 28             	mov    0x28(%edi),%eax
    466a:	8b 48 08             	mov    0x8(%eax),%ecx
    466d:	89 c8                	mov    %ecx,%eax
    466f:	f7 f3                	div    %ebx
    4671:	89 c1                	mov    %eax,%ecx
    4673:	66 89 46 12          	mov    %ax,0x12(%esi)
    4677:	0f b7 c0             	movzwl %ax,%eax
    467a:	8b 57 28             	mov    0x28(%edi),%edx
    467d:	0f af c3             	imul   %ebx,%eax
    4680:	3b 42 08             	cmp    0x8(%edx),%eax
    4683:	73 07                	jae    468c <ReadCSDInformationMMCSD+0x1bc>
    4685:	8d 41 01             	lea    0x1(%ecx),%eax
    4688:	66 89 46 12          	mov    %ax,0x12(%esi)
    468c:	66 83 7e 12 00       	cmpw   $0x0,0x12(%esi)
    4691:	75 06                	jne    4699 <ReadCSDInformationMMCSD+0x1c9>
    4693:	66 c7 46 12 01 00    	movw   $0x1,0x12(%esi)
    4699:	89 34 24             	mov    %esi,(%esp)
    469c:	bd 01 00 00 00       	mov    $0x1,%ebp
    46a1:	bf 50 00 00 00       	mov    $0x50,%edi
    46a6:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    46aa:	bb 53 00 00 00       	mov    $0x53,%ebx
    46af:	89 7c 24 08          	mov    %edi,0x8(%esp)
    46b3:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    46b7:	bb 01 00 00 00       	mov    $0x1,%ebx
    46bc:	e8 7f f8 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    46c1:	88 46 04             	mov    %al,0x4(%esi)
    46c4:	88 c1                	mov    %al,%cl
    46c6:	89 d8                	mov    %ebx,%eax
    46c8:	d3 e0                	shl    %cl,%eax
    46ca:	66 89 46 06          	mov    %ax,0x6(%esi)
    46ce:	b9 01 00 00 00       	mov    $0x1,%ecx
    46d3:	ba 16 00 00 00       	mov    $0x16,%edx
    46d8:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    46dc:	b8 19 00 00 00       	mov    $0x19,%eax
    46e1:	89 54 24 08          	mov    %edx,0x8(%esp)
    46e5:	89 34 24             	mov    %esi,(%esp)
    46e8:	89 44 24 04          	mov    %eax,0x4(%esp)
    46ec:	e8 4f f8 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    46f1:	88 46 08             	mov    %al,0x8(%esi)
    46f4:	88 c1                	mov    %al,%cl
    46f6:	d3 e3                	shl    %cl,%ebx
    46f8:	66 89 5e 0a          	mov    %bx,0xa(%esi)
    46fc:	b8 01 00 00 00       	mov    $0x1,%eax
    4701:	bd 31 00 00 00       	mov    $0x31,%ebp
    4706:	89 44 24 0c          	mov    %eax,0xc(%esp)
    470a:	bf 01 00 00 00       	mov    $0x1,%edi
    470f:	b8 3e 00 00 00       	mov    $0x3e,%eax
    4714:	89 44 24 08          	mov    %eax,0x8(%esp)
    4718:	b8 49 00 00 00       	mov    $0x49,%eax
    471d:	89 44 24 04          	mov    %eax,0x4(%esp)
    4721:	89 34 24             	mov    %esi,(%esp)
    4724:	e8 17 f8 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4729:	89 46 0c             	mov    %eax,0xc(%esi)
    472c:	b8 01 00 00 00       	mov    $0x1,%eax
    4731:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4735:	b8 2f 00 00 00       	mov    $0x2f,%eax
    473a:	89 44 24 08          	mov    %eax,0x8(%esp)
    473e:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    4742:	89 34 24             	mov    %esi,(%esp)
    4745:	e8 f6 f7 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    474a:	88 46 10             	mov    %al,0x10(%esi)
    474d:	8b 5e 50             	mov    0x50(%esi),%ebx
    4750:	b9 0d 00 00 00       	mov    $0xd,%ecx
    4755:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    4759:	ba 0d 00 00 00       	mov    $0xd,%edx
    475e:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    4762:	89 54 24 04          	mov    %edx,0x4(%esp)
    4766:	89 34 24             	mov    %esi,(%esp)
    4769:	e8 d2 f7 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    476e:	48                   	dec    %eax
    476f:	0f 94 43 05          	sete   0x5(%ebx)
    4773:	0f b6 44 24 27       	movzbl 0x27(%esp),%eax
    4778:	83 c4 58             	add    $0x58,%esp
    477b:	5b                   	pop    %ebx
    477c:	5e                   	pop    %esi
    477d:	5f                   	pop    %edi
    477e:	5d                   	pop    %ebp
    477f:	c3                   	ret    
    4780:	8b 46 50             	mov    0x50(%esi),%eax
    4783:	8b 40 28             	mov    0x28(%eax),%eax
    4786:	80 78 04 13          	cmpb   $0x13,0x4(%eax)
    478a:	0f 85 ec fd ff ff    	jne    457c <ReadCSDInformationMMCSD+0xac>
    4790:	c6 44 24 14 00       	movb   $0x0,0x14(%esp)
    4795:	8d 74 26 00          	lea    0x0(%esi),%esi
    4799:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    47a0:	0f b6 5c 24 14       	movzbl 0x14(%esp),%ebx
    47a5:	bf 01 00 00 00       	mov    $0x1,%edi
    47aa:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    47ae:	89 34 24             	mov    %esi,(%esp)
    47b1:	89 da                	mov    %ebx,%edx
    47b3:	c1 e2 04             	shl    $0x4,%edx
    47b6:	0f b6 c2             	movzbl %dl,%eax
    47b9:	89 44 24 08          	mov    %eax,0x8(%esp)
    47bd:	88 d0                	mov    %dl,%al
    47bf:	04 0f                	add    $0xf,%al
    47c1:	0f b6 c0             	movzbl %al,%eax
    47c4:	89 44 24 04          	mov    %eax,0x4(%esp)
    47c8:	e8 73 f7 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    47cd:	66 89 44 5c 28       	mov    %ax,0x28(%esp,%ebx,2)
    47d2:	fe 44 24 14          	incb   0x14(%esp)
    47d6:	80 7c 24 14 07       	cmpb   $0x7,0x14(%esp)
    47db:	76 c3                	jbe    47a0 <ReadCSDInformationMMCSD+0x2d0>
    47dd:	b9 00 22 00 00       	mov    $0x2200,%ecx
    47e2:	ba 09 00 00 00       	mov    $0x9,%edx
    47e7:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    47eb:	8b 46 14             	mov    0x14(%esi),%eax
    47ee:	89 54 24 04          	mov    %edx,0x4(%esp)
    47f2:	89 34 24             	mov    %esi,(%esp)
    47f5:	89 44 24 08          	mov    %eax,0x8(%esp)
    47f9:	e8 f2 f5 ff ff       	call   3df0 <CmdMMCSD>
    47fe:	88 44 24 27          	mov    %al,0x27(%esp)
    4802:	3c 21                	cmp    $0x21,%al
    4804:	0f 85 72 fd ff ff    	jne    457c <ReadCSDInformationMMCSD+0xac>
    480a:	c6 44 24 14 00       	movb   $0x0,0x14(%esp)
    480f:	b0 01                	mov    $0x1,%al
    4811:	eb 0d                	jmp    4820 <ReadCSDInformationMMCSD+0x350>
    4813:	90                   	nop    
    4814:	90                   	nop    
    4815:	90                   	nop    
    4816:	90                   	nop    
    4817:	90                   	nop    
    4818:	90                   	nop    
    4819:	90                   	nop    
    481a:	90                   	nop    
    481b:	90                   	nop    
    481c:	90                   	nop    
    481d:	90                   	nop    
    481e:	90                   	nop    
    481f:	90                   	nop    
    4820:	c6 44 24 13 00       	movb   $0x0,0x13(%esp)
    4825:	84 c0                	test   %al,%al
    4827:	75 38                	jne    4861 <ReadCSDInformationMMCSD+0x391>
    4829:	fe 44 24 14          	incb   0x14(%esp)
    482d:	0f b6 44 24 13       	movzbl 0x13(%esp),%eax
    4832:	80 7c 24 14 07       	cmpb   $0x7,0x14(%esp)
    4837:	76 e7                	jbe    4820 <ReadCSDInformationMMCSD+0x350>
    4839:	84 c0                	test   %al,%al
    483b:	74 0a                	je     4847 <ReadCSDInformationMMCSD+0x377>
    483d:	c6 44 24 27 00       	movb   $0x0,0x27(%esp)
    4842:	e9 40 fd ff ff       	jmp    4587 <ReadCSDInformationMMCSD+0xb7>
    4847:	c7 04 24 c0 0b 00 00 	movl   $0xbc0,(%esp)
			484a: R_386_32	.rodata.str1.32
    484e:	b8 30 05 00 00       	mov    $0x530,%eax
			484f: R_386_32	.rodata
    4853:	89 44 24 04          	mov    %eax,0x4(%esp)
    4857:	e8 fc ff ff ff       	call   4858 <ReadCSDInformationMMCSD+0x388>
			4858: R_386_PC32	printk
    485c:	e9 1b fd ff ff       	jmp    457c <ReadCSDInformationMMCSD+0xac>
    4861:	0f b6 5c 24 14       	movzbl 0x14(%esp),%ebx
    4866:	b8 01 00 00 00       	mov    $0x1,%eax
    486b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    486f:	89 34 24             	mov    %esi,(%esp)
    4872:	89 da                	mov    %ebx,%edx
    4874:	c1 e2 04             	shl    $0x4,%edx
    4877:	0f b6 c2             	movzbl %dl,%eax
    487a:	89 44 24 08          	mov    %eax,0x8(%esp)
    487e:	88 d0                	mov    %dl,%al
    4880:	04 0f                	add    $0xf,%al
    4882:	0f b6 c0             	movzbl %al,%eax
    4885:	89 44 24 04          	mov    %eax,0x4(%esp)
    4889:	e8 b2 f6 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    488e:	66 39 44 5c 28       	cmp    %ax,0x28(%esp,%ebx,2)
    4893:	75 94                	jne    4829 <ReadCSDInformationMMCSD+0x359>
    4895:	c6 44 24 13 01       	movb   $0x1,0x13(%esp)
    489a:	eb 8d                	jmp    4829 <ReadCSDInformationMMCSD+0x359>
    489c:	8d 74 26 00          	lea    0x0(%esi),%esi

000048a0 <ReadSerialNumberMMCSD>:
    48a0:	57                   	push   %edi
    48a1:	56                   	push   %esi
    48a2:	53                   	push   %ebx
    48a3:	83 ec 14             	sub    $0x14,%esp
    48a6:	8b 74 24 24          	mov    0x24(%esp),%esi
    48aa:	b8 00 22 00 00       	mov    $0x2200,%eax
    48af:	89 44 24 0c          	mov    %eax,0xc(%esp)
    48b3:	8b 46 14             	mov    0x14(%esi),%eax
    48b6:	89 34 24             	mov    %esi,(%esp)
    48b9:	89 44 24 08          	mov    %eax,0x8(%esp)
    48bd:	b8 0a 00 00 00       	mov    $0xa,%eax
    48c2:	89 44 24 04          	mov    %eax,0x4(%esp)
    48c6:	e8 25 f5 ff ff       	call   3df0 <CmdMMCSD>
    48cb:	88 44 24 13          	mov    %al,0x13(%esp)
    48cf:	84 c0                	test   %al,%al
    48d1:	c6 44 24 12 00       	movb   $0x0,0x12(%esp)
    48d6:	74 0a                	je     48e2 <ReadSerialNumberMMCSD+0x42>
    48d8:	0f b6 c0             	movzbl %al,%eax
    48db:	83 c4 14             	add    $0x14,%esp
    48de:	5b                   	pop    %ebx
    48df:	5e                   	pop    %esi
    48e0:	5f                   	pop    %edi
    48e1:	c3                   	ret    
    48e2:	0f b6 5c 24 12       	movzbl 0x12(%esp),%ebx
    48e7:	b8 01 00 00 00       	mov    $0x1,%eax
    48ec:	89 44 24 0c          	mov    %eax,0xc(%esp)
    48f0:	b0 78                	mov    $0x78,%al
    48f2:	89 34 24             	mov    %esi,(%esp)
    48f5:	8d 14 dd 00 00 00 00 	lea    0x0(,%ebx,8),%edx
    48fc:	28 d0                	sub    %dl,%al
    48fe:	0f b6 c0             	movzbl %al,%eax
    4901:	89 44 24 08          	mov    %eax,0x8(%esp)
    4905:	b0 7f                	mov    $0x7f,%al
    4907:	28 d0                	sub    %dl,%al
    4909:	0f b6 c0             	movzbl %al,%eax
    490c:	89 44 24 04          	mov    %eax,0x4(%esp)
    4910:	e8 2b f6 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4915:	88 44 1e 2e          	mov    %al,0x2e(%esi,%ebx,1)
    4919:	fe 44 24 12          	incb   0x12(%esp)
    491d:	80 7c 24 12 08       	cmpb   $0x8,0x12(%esp)
    4922:	76 be                	jbe    48e2 <ReadSerialNumberMMCSD+0x42>
    4924:	c6 46 37 30          	movb   $0x30,0x37(%esi)
    4928:	b8 01 00 00 00       	mov    $0x1,%eax
    492d:	bb 37 00 00 00       	mov    $0x37,%ebx
    4932:	c6 46 38 30          	movb   $0x30,0x38(%esi)
    4936:	81 e7 ff ff 00 00    	and    $0xffff,%edi
    493c:	c6 46 39 30          	movb   $0x30,0x39(%esi)
    4940:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4944:	b8 30 00 00 00       	mov    $0x30,%eax
    4949:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    494d:	89 34 24             	mov    %esi,(%esp)
    4950:	89 44 24 08          	mov    %eax,0x8(%esp)
    4954:	e8 e7 f5 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4959:	89 34 24             	mov    %esi,(%esp)
    495c:	c1 e0 10             	shl    $0x10,%eax
    495f:	b9 01 00 00 00       	mov    $0x1,%ecx
    4964:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    4968:	09 c7                	or     %eax,%edi
    496a:	ba 18 00 00 00       	mov    $0x18,%edx
    496f:	89 54 24 08          	mov    %edx,0x8(%esp)
    4973:	b8 2f 00 00 00       	mov    $0x2f,%eax
    4978:	81 e7 00 00 ff ff    	and    $0xffff0000,%edi
    497e:	89 44 24 04          	mov    %eax,0x4(%esp)
    4982:	e8 b9 f5 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4987:	0f b7 c0             	movzwl %ax,%eax
    498a:	09 c7                	or     %eax,%edi
    498c:	8b 46 50             	mov    0x50(%esi),%eax
    498f:	89 78 0c             	mov    %edi,0xc(%eax)
    4992:	c6 46 42 00          	movb   $0x0,0x42(%esi)
    4996:	0f b6 44 24 13       	movzbl 0x13(%esp),%eax
    499b:	e9 3b ff ff ff       	jmp    48db <ReadSerialNumberMMCSD+0x3b>

000049a0 <GetCHSMMCSD>:
    49a0:	56                   	push   %esi
    49a1:	53                   	push   %ebx
    49a2:	83 ec 04             	sub    $0x4,%esp
    49a5:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    49a9:	8b 43 0c             	mov    0xc(%ebx),%eax
    49ac:	0f b6 4b 10          	movzbl 0x10(%ebx),%ecx
    49b0:	0f b7 53 06          	movzwl 0x6(%ebx),%edx
    49b4:	40                   	inc    %eax
    49b5:	83 c1 02             	add    $0x2,%ecx
    49b8:	d3 e0                	shl    %cl,%eax
    49ba:	8b 4b 50             	mov    0x50(%ebx),%ecx
    49bd:	89 03                	mov    %eax,(%ebx)
    49bf:	0f af c2             	imul   %edx,%eax
    49c2:	c1 e8 14             	shr    $0x14,%eax
    49c5:	66 89 41 10          	mov    %ax,0x10(%ecx)
    49c9:	8b 4b 50             	mov    0x50(%ebx),%ecx
    49cc:	66 83 79 10 02       	cmpw   $0x2,0x10(%ecx)
    49d1:	77 12                	ja     49e5 <GetCHSMMCSD+0x45>
    49d3:	66 c7 41 14 02 00    	movw   $0x2,0x14(%ecx)
    49d9:	8b 43 50             	mov    0x50(%ebx),%eax
    49dc:	66 c7 40 16 10 00    	movw   $0x10,0x16(%eax)
    49e2:	8b 4b 50             	mov    0x50(%ebx),%ecx
    49e5:	0f b7 41 10          	movzwl 0x10(%ecx),%eax
    49e9:	83 e8 03             	sub    $0x3,%eax
    49ec:	66 83 f8 0d          	cmp    $0xd,%ax
    49f0:	77 12                	ja     4a04 <GetCHSMMCSD+0x64>
    49f2:	66 c7 41 14 02 00    	movw   $0x2,0x14(%ecx)
    49f8:	8b 43 50             	mov    0x50(%ebx),%eax
    49fb:	66 c7 40 16 20 00    	movw   $0x20,0x16(%eax)
    4a01:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4a04:	0f b7 41 10          	movzwl 0x10(%ecx),%eax
    4a08:	83 e8 11             	sub    $0x11,%eax
    4a0b:	66 83 f8 0f          	cmp    $0xf,%ax
    4a0f:	77 12                	ja     4a23 <GetCHSMMCSD+0x83>
    4a11:	66 c7 41 14 04 00    	movw   $0x4,0x14(%ecx)
    4a17:	8b 43 50             	mov    0x50(%ebx),%eax
    4a1a:	66 c7 40 16 20 00    	movw   $0x20,0x16(%eax)
    4a20:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4a23:	0f b7 41 10          	movzwl 0x10(%ecx),%eax
    4a27:	83 e8 21             	sub    $0x21,%eax
    4a2a:	66 83 f8 5f          	cmp    $0x5f,%ax
    4a2e:	77 12                	ja     4a42 <GetCHSMMCSD+0xa2>
    4a30:	66 c7 41 14 08 00    	movw   $0x8,0x14(%ecx)
    4a36:	8b 43 50             	mov    0x50(%ebx),%eax
    4a39:	66 c7 40 16 20 00    	movw   $0x20,0x16(%eax)
    4a3f:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4a42:	0f b7 41 10          	movzwl 0x10(%ecx),%eax
    4a46:	2d 81 00 00 00       	sub    $0x81,%eax
    4a4b:	66 83 f8 7f          	cmp    $0x7f,%ax
    4a4f:	77 12                	ja     4a63 <GetCHSMMCSD+0xc3>
    4a51:	66 c7 41 14 10 00    	movw   $0x10,0x14(%ecx)
    4a57:	8b 43 50             	mov    0x50(%ebx),%eax
    4a5a:	66 c7 40 16 20 00    	movw   $0x20,0x16(%eax)
    4a60:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4a63:	0f b7 41 10          	movzwl 0x10(%ecx),%eax
    4a67:	2d 01 01 00 00       	sub    $0x101,%eax
    4a6c:	66 3d f7 00          	cmp    $0xf7,%ax
    4a70:	77 12                	ja     4a84 <GetCHSMMCSD+0xe4>
    4a72:	66 c7 41 14 10 00    	movw   $0x10,0x14(%ecx)
    4a78:	8b 43 50             	mov    0x50(%ebx),%eax
    4a7b:	66 c7 40 16 3f 00    	movw   $0x3f,0x16(%eax)
    4a81:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4a84:	0f b7 41 10          	movzwl 0x10(%ecx),%eax
    4a88:	2d f9 01 00 00       	sub    $0x1f9,%eax
    4a8d:	66 3d f7 01          	cmp    $0x1f7,%ax
    4a91:	77 12                	ja     4aa5 <GetCHSMMCSD+0x105>
    4a93:	66 c7 41 14 20 00    	movw   $0x20,0x14(%ecx)
    4a99:	8b 43 50             	mov    0x50(%ebx),%eax
    4a9c:	66 c7 40 16 3f 00    	movw   $0x3f,0x16(%eax)
    4aa2:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4aa5:	0f b7 41 10          	movzwl 0x10(%ecx),%eax
    4aa9:	2d f1 03 00 00       	sub    $0x3f1,%eax
    4aae:	66 3d ef 03          	cmp    $0x3ef,%ax
    4ab2:	77 12                	ja     4ac6 <GetCHSMMCSD+0x126>
    4ab4:	66 c7 41 14 40 00    	movw   $0x40,0x14(%ecx)
    4aba:	8b 43 50             	mov    0x50(%ebx),%eax
    4abd:	66 c7 40 16 3f 00    	movw   $0x3f,0x16(%eax)
    4ac3:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4ac6:	0f b7 41 10          	movzwl 0x10(%ecx),%eax
    4aca:	2d e1 07 00 00       	sub    $0x7e1,%eax
    4acf:	66 83 f8 1f          	cmp    $0x1f,%ax
    4ad3:	77 12                	ja     4ae7 <GetCHSMMCSD+0x147>
    4ad5:	66 c7 41 14 80 00    	movw   $0x80,0x14(%ecx)
    4adb:	8b 43 50             	mov    0x50(%ebx),%eax
    4ade:	66 c7 40 16 3f 00    	movw   $0x3f,0x16(%eax)
    4ae4:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4ae7:	66 81 79 10 00 08    	cmpw   $0x800,0x10(%ecx)
    4aed:	76 12                	jbe    4b01 <GetCHSMMCSD+0x161>
    4aef:	66 c7 41 14 80 00    	movw   $0x80,0x14(%ecx)
    4af5:	8b 43 50             	mov    0x50(%ebx),%eax
    4af8:	66 c7 40 16 40 00    	movw   $0x40,0x16(%eax)
    4afe:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4b01:	0f b7 41 16          	movzwl 0x16(%ecx),%eax
    4b05:	0f b7 51 14          	movzwl 0x14(%ecx),%edx
    4b09:	0f af d0             	imul   %eax,%edx
    4b0c:	8b 03                	mov    (%ebx),%eax
    4b0e:	89 d6                	mov    %edx,%esi
    4b10:	31 d2                	xor    %edx,%edx
    4b12:	f7 f6                	div    %esi
    4b14:	66 89 41 12          	mov    %ax,0x12(%ecx)
    4b18:	89 1c 24             	mov    %ebx,(%esp)
    4b1b:	e8 80 fd ff ff       	call   48a0 <ReadSerialNumberMMCSD>
    4b20:	5a                   	pop    %edx
    4b21:	0f b6 c0             	movzbl %al,%eax
    4b24:	5b                   	pop    %ebx
    4b25:	5e                   	pop    %esi
    4b26:	c3                   	ret    
    4b27:	89 f6                	mov    %esi,%esi
    4b29:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00004b30 <ReportMediaModelMMCSD>:
    4b30:	c3                   	ret    
    4b31:	eb 0d                	jmp    4b40 <GetCardStateMMCSD>
    4b33:	90                   	nop    
    4b34:	90                   	nop    
    4b35:	90                   	nop    
    4b36:	90                   	nop    
    4b37:	90                   	nop    
    4b38:	90                   	nop    
    4b39:	90                   	nop    
    4b3a:	90                   	nop    
    4b3b:	90                   	nop    
    4b3c:	90                   	nop    
    4b3d:	90                   	nop    
    4b3e:	90                   	nop    
    4b3f:	90                   	nop    

00004b40 <GetCardStateMMCSD>:
    4b40:	53                   	push   %ebx
    4b41:	ba 00 21 00 00       	mov    $0x2100,%edx
    4b46:	83 ec 14             	sub    $0x14,%esp
    4b49:	89 54 24 0c          	mov    %edx,0xc(%esp)
    4b4d:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    4b51:	8b 43 14             	mov    0x14(%ebx),%eax
    4b54:	89 1c 24             	mov    %ebx,(%esp)
    4b57:	89 44 24 08          	mov    %eax,0x8(%esp)
    4b5b:	b8 0d 00 00 00       	mov    $0xd,%eax
    4b60:	89 44 24 04          	mov    %eax,0x4(%esp)
    4b64:	e8 87 f2 ff ff       	call   3df0 <CmdMMCSD>
    4b69:	88 44 24 13          	mov    %al,0x13(%esp)
    4b6d:	31 c0                	xor    %eax,%eax
    4b6f:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4b73:	b8 09 00 00 00       	mov    $0x9,%eax
    4b78:	89 44 24 08          	mov    %eax,0x8(%esp)
    4b7c:	b8 0c 00 00 00       	mov    $0xc,%eax
    4b81:	89 1c 24             	mov    %ebx,(%esp)
    4b84:	89 44 24 04          	mov    %eax,0x4(%esp)
    4b88:	e8 b3 f3 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4b8d:	8b 54 24 20          	mov    0x20(%esp),%edx
    4b91:	b9 08 00 00 00       	mov    $0x8,%ecx
    4b96:	88 02                	mov    %al,(%edx)
    4b98:	31 c0                	xor    %eax,%eax
    4b9a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4b9e:	b8 08 00 00 00       	mov    $0x8,%eax
    4ba3:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    4ba7:	89 1c 24             	mov    %ebx,(%esp)
    4baa:	89 44 24 08          	mov    %eax,0x8(%esp)
    4bae:	e8 8d f3 ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4bb3:	88 43 4c             	mov    %al,0x4c(%ebx)
    4bb6:	89 c2                	mov    %eax,%edx
    4bb8:	8b 4b 50             	mov    0x50(%ebx),%ecx
    4bbb:	8b 41 28             	mov    0x28(%ecx),%eax
    4bbe:	80 78 04 13          	cmpb   $0x13,0x4(%eax)
    4bc2:	74 1c                	je     4be0 <GetCardStateMMCSD+0xa0>
    4bc4:	88 d0                	mov    %dl,%al
    4bc6:	fe c8                	dec    %al
    4bc8:	74 0c                	je     4bd6 <GetCardStateMMCSD+0x96>
    4bca:	c7 04 24 de 46 03 00 	movl   $0x346de,(%esp)
    4bd1:	e8 fc ff ff ff       	call   4bd2 <GetCardStateMMCSD+0x92>
			4bd2: R_386_PC32	__const_udelay
    4bd6:	0f b6 44 24 13       	movzbl 0x13(%esp),%eax
    4bdb:	83 c4 14             	add    $0x14,%esp
    4bde:	5b                   	pop    %ebx
    4bdf:	c3                   	ret    
    4be0:	0f b7 41 10          	movzwl 0x10(%ecx),%eax
    4be4:	83 e8 03             	sub    $0x3,%eax
    4be7:	66 83 f8 0d          	cmp    $0xd,%ax
    4beb:	77 d7                	ja     4bc4 <GetCardStateMMCSD+0x84>
    4bed:	bb 0f 00 00 00       	mov    $0xf,%ebx
    4bf2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    4bf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    4c00:	c7 04 24 58 89 41 00 	movl   $0x418958,(%esp)
    4c07:	4b                   	dec    %ebx
    4c08:	e8 fc ff ff ff       	call   4c09 <GetCardStateMMCSD+0xc9>
			4c09: R_386_PC32	__const_udelay
    4c0d:	83 fb ff             	cmp    $0xffffffff,%ebx
    4c10:	75 ee                	jne    4c00 <GetCardStateMMCSD+0xc0>
    4c12:	eb c2                	jmp    4bd6 <GetCardStateMMCSD+0x96>
    4c14:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4c1a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00004c20 <ExecuteMMCSD>:
    4c20:	55                   	push   %ebp
    4c21:	57                   	push   %edi
    4c22:	56                   	push   %esi
    4c23:	53                   	push   %ebx
    4c24:	83 ec 18             	sub    $0x18,%esp
    4c27:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
    4c2b:	c6 44 24 17 00       	movb   $0x0,0x17(%esp)
    4c30:	8b 6c 24 30          	mov    0x30(%esp),%ebp
    4c34:	8b 74 24 34          	mov    0x34(%esp),%esi
    4c38:	8b 5c 24 38          	mov    0x38(%esp),%ebx
    4c3c:	85 ed                	test   %ebp,%ebp
    4c3e:	74 13                	je     4c53 <ExecuteMMCSD+0x33>
    4c40:	89 6f 44             	mov    %ebp,0x44(%edi)
    4c43:	66 c7 47 48 00 00    	movw   $0x0,0x48(%edi)
    4c49:	8b 45 08             	mov    0x8(%ebp),%eax
    4c4c:	c1 e8 09             	shr    $0x9,%eax
    4c4f:	66 89 47 4a          	mov    %ax,0x4a(%edi)
    4c53:	85 f6                	test   %esi,%esi
    4c55:	0f 84 e5 06 00 00    	je     5340 <ExecuteMMCSD+0x720>
    4c5b:	66 0f b6 13          	movzbw (%ebx),%dx
    4c5f:	0f b7 47 48          	movzwl 0x48(%edi),%eax
    4c63:	01 d0                	add    %edx,%eax
    4c65:	66 89 47 48          	mov    %ax,0x48(%edi)
    4c69:	80 3b 3f             	cmpb   $0x3f,(%ebx)
    4c6c:	0f 87 c4 06 00 00    	ja     5336 <ExecuteMMCSD+0x716>
    4c72:	8b 47 50             	mov    0x50(%edi),%eax
    4c75:	80 78 08 00          	cmpb   $0x0,0x8(%eax)
    4c79:	0f 85 98 06 00 00    	jne    5317 <ExecuteMMCSD+0x6f7>
    4c7f:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    4c83:	80 3b 00             	cmpb   $0x0,(%ebx)
    4c86:	0f 84 e8 00 00 00    	je     4d74 <ExecuteMMCSD+0x154>
    4c8c:	31 c0                	xor    %eax,%eax
    4c8e:	85 ed                	test   %ebp,%ebp
    4c90:	89 44 24 10          	mov    %eax,0x10(%esp)
    4c94:	0f 84 92 00 00 00    	je     4d2c <ExecuteMMCSD+0x10c>
    4c9a:	b8 ff ff 00 00       	mov    $0xffff,%eax
    4c9f:	89 44 24 04          	mov    %eax,0x4(%esp)
    4ca3:	8b 47 50             	mov    0x50(%edi),%eax
    4ca6:	8b 40 28             	mov    0x28(%eax),%eax
    4ca9:	89 04 24             	mov    %eax,(%esp)
    4cac:	e8 fc ff ff ff       	call   4cad <ExecuteMMCSD+0x8d>
			4cad: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    4cb1:	b8 01 00 00 00       	mov    $0x1,%eax
    4cb6:	89 44 24 04          	mov    %eax,0x4(%esp)
    4cba:	8b 47 50             	mov    0x50(%edi),%eax
    4cbd:	8b 40 28             	mov    0x28(%eax),%eax
    4cc0:	89 04 24             	mov    %eax,(%esp)
    4cc3:	e8 fc ff ff ff       	call   4cc4 <ExecuteMMCSD+0xa4>
			4cc4: R_386_PC32	FIFO_CONTROL_SOCK2
    4cc8:	8b 47 50             	mov    0x50(%edi),%eax
    4ccb:	c6 40 07 00          	movb   $0x0,0x7(%eax)
    4ccf:	b8 05 00 00 00       	mov    $0x5,%eax
    4cd4:	89 44 24 04          	mov    %eax,0x4(%esp)
    4cd8:	8b 47 50             	mov    0x50(%edi),%eax
    4cdb:	8b 40 28             	mov    0x28(%eax),%eax
    4cde:	89 04 24             	mov    %eax,(%esp)
    4ce1:	e8 fc ff ff ff       	call   4ce2 <ExecuteMMCSD+0xc2>
			4ce2: R_386_PC32	DMA_FIFO_INT_ENABLE_SET_SOCK
    4ce6:	80 7d 0d 00          	cmpb   $0x0,0xd(%ebp)
    4cea:	0f 84 10 06 00 00    	je     5300 <ExecuteMMCSD+0x6e0>
    4cf0:	b8 00 80 00 00       	mov    $0x8000,%eax
    4cf5:	89 44 24 04          	mov    %eax,0x4(%esp)
    4cf9:	89 3c 24             	mov    %edi,(%esp)
    4cfc:	e8 fc ff ff ff       	call   4cfd <ExecuteMMCSD+0xdd>
			4cfd: R_386_PC32	MMCSD_BUFFER_CONFIG2
    4d01:	0f b7 47 4a          	movzwl 0x4a(%edi),%eax
    4d05:	48                   	dec    %eax
    4d06:	89 44 24 04          	mov    %eax,0x4(%esp)
    4d0a:	89 3c 24             	mov    %edi,(%esp)
    4d0d:	e8 fc ff ff ff       	call   4d0e <ExecuteMMCSD+0xee>
			4d0e: R_386_PC32	MMCSD_NUMBER_OF_BLOCKS2
    4d12:	0f b7 47 06          	movzwl 0x6(%edi),%eax
    4d16:	89 3c 24             	mov    %edi,(%esp)
    4d19:	48                   	dec    %eax
    4d1a:	89 44 24 04          	mov    %eax,0x4(%esp)
    4d1e:	e8 fc ff ff ff       	call   4d1f <ExecuteMMCSD+0xff>
			4d1f: R_386_PC32	MMCSD_BLOCK_LENGTH2
    4d23:	8b 47 1c             	mov    0x1c(%edi),%eax
    4d26:	83 e0 f7             	and    $0xfffffff7,%eax
    4d29:	89 47 1c             	mov    %eax,0x1c(%edi)
    4d2c:	89 74 24 04          	mov    %esi,0x4(%esp)
    4d30:	8b 47 50             	mov    0x50(%edi),%eax
    4d33:	8b 40 28             	mov    0x28(%eax),%eax
    4d36:	89 04 24             	mov    %eax,(%esp)
    4d39:	e8 fc ff ff ff       	call   4d3a <ExecuteMMCSD+0x11a>
			4d3a: R_386_PC32	DMA_ADDRESS_SOCK
    4d3e:	8b 47 50             	mov    0x50(%edi),%eax
    4d41:	8b 40 28             	mov    0x28(%eax),%eax
    4d44:	89 04 24             	mov    %eax,(%esp)
    4d47:	e8 fc ff ff ff       	call   4d48 <ExecuteMMCSD+0x128>
			4d48: R_386_PC32	DMA_CONTROL_SOCK1
    4d4c:	0f b6 13             	movzbl (%ebx),%edx
    4d4f:	25 80 00 00 00       	and    $0x80,%eax
    4d54:	c1 e2 08             	shl    $0x8,%edx
    4d57:	09 d0                	or     %edx,%eax
    4d59:	8b 54 24 10          	mov    0x10(%esp),%edx
    4d5d:	09 d0                	or     %edx,%eax
    4d5f:	83 c8 01             	or     $0x1,%eax
    4d62:	89 44 24 04          	mov    %eax,0x4(%esp)
    4d66:	8b 47 50             	mov    0x50(%edi),%eax
    4d69:	8b 40 28             	mov    0x28(%eax),%eax
    4d6c:	89 04 24             	mov    %eax,(%esp)
    4d6f:	e8 fc ff ff ff       	call   4d70 <ExecuteMMCSD+0x150>
			4d70: R_386_PC32	DMA_CONTROL_SOCK2
    4d74:	85 ed                	test   %ebp,%ebp
    4d76:	0f 84 c2 00 00 00    	je     4e3e <ExecuteMMCSD+0x21e>
    4d7c:	0f b6 4d 0e          	movzbl 0xe(%ebp),%ecx
    4d80:	84 c9                	test   %cl,%cl
    4d82:	0f 85 48 05 00 00    	jne    52d0 <ExecuteMMCSD+0x6b0>
    4d88:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
    4d8c:	83 f8 07             	cmp    $0x7,%eax
    4d8f:	0f 87 0c 05 00 00    	ja     52a1 <ExecuteMMCSD+0x681>
    4d95:	ff 24 85 58 05 00 00 	jmp    *0x558(,%eax,4)
			4d98: R_386_32	.rodata
    4d9c:	bb 00 01 00 00       	mov    $0x100,%ebx
    4da1:	eb 0d                	jmp    4db0 <ExecuteMMCSD+0x190>
    4da3:	90                   	nop    
    4da4:	90                   	nop    
    4da5:	90                   	nop    
    4da6:	90                   	nop    
    4da7:	90                   	nop    
    4da8:	90                   	nop    
    4da9:	90                   	nop    
    4daa:	90                   	nop    
    4dab:	90                   	nop    
    4dac:	90                   	nop    
    4dad:	90                   	nop    
    4dae:	90                   	nop    
    4daf:	90                   	nop    
    4db0:	0f b6 55 00          	movzbl 0x0(%ebp),%edx
    4db4:	80 fa 03             	cmp    $0x3,%dl
    4db7:	0f 84 d5 04 00 00    	je     5292 <ExecuteMMCSD+0x672>
    4dbd:	80 fa 07             	cmp    $0x7,%dl
    4dc0:	0f 84 bd 04 00 00    	je     5283 <ExecuteMMCSD+0x663>
    4dc6:	89 3c 24             	mov    %edi,(%esp)
    4dc9:	0f b6 c1             	movzbl %cl,%eax
    4dcc:	89 44 24 08          	mov    %eax,0x8(%esp)
    4dd0:	0f b6 c2             	movzbl %dl,%eax
    4dd3:	89 44 24 04          	mov    %eax,0x4(%esp)
    4dd7:	e8 24 ef ff ff       	call   3d00 <GetCmdTypeMMCSD>
    4ddc:	09 d8                	or     %ebx,%eax
    4dde:	0f b7 d8             	movzwl %ax,%ebx
    4de1:	80 7d 0d 00          	cmpb   $0x0,0xd(%ebp)
    4de5:	74 17                	je     4dfe <ExecuteMMCSD+0x1de>
    4de7:	89 d8                	mov    %ebx,%eax
    4de9:	89 da                	mov    %ebx,%edx
    4deb:	25 00 30 00 00       	and    $0x3000,%eax
    4df0:	81 ca 00 80 00 00    	or     $0x8000,%edx
    4df6:	3d 00 30 00 00       	cmp    $0x3000,%eax
    4dfb:	0f 44 da             	cmove  %edx,%ebx
    4dfe:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    4e02:	85 c0                	test   %eax,%eax
    4e04:	74 19                	je     4e1f <ExecuteMMCSD+0x1ff>
    4e06:	89 3c 24             	mov    %edi,(%esp)
    4e09:	31 c0                	xor    %eax,%eax
    4e0b:	89 44 24 04          	mov    %eax,0x4(%esp)
    4e0f:	e8 fc ff ff ff       	call   4e10 <ExecuteMMCSD+0x1f0>
			4e10: R_386_PC32	MMCSD_NUMBER_OF_BLOCKS2
    4e14:	8b 45 08             	mov    0x8(%ebp),%eax
    4e17:	85 c0                	test   %eax,%eax
    4e19:	0f 85 52 04 00 00    	jne    5271 <ExecuteMMCSD+0x651>
    4e1f:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    4e23:	8b 45 04             	mov    0x4(%ebp),%eax
    4e26:	89 44 24 08          	mov    %eax,0x8(%esp)
    4e2a:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
    4e2e:	89 3c 24             	mov    %edi,(%esp)
    4e31:	89 44 24 04          	mov    %eax,0x4(%esp)
    4e35:	e8 b6 ef ff ff       	call   3df0 <CmdMMCSD>
    4e3a:	88 44 24 17          	mov    %al,0x17(%esp)
    4e3e:	85 f6                	test   %esi,%esi
    4e40:	0f 84 1a 01 00 00    	je     4f60 <ExecuteMMCSD+0x340>
    4e46:	0f b7 47 4a          	movzwl 0x4a(%edi),%eax
    4e4a:	66 39 47 48          	cmp    %ax,0x48(%edi)
    4e4e:	72 20                	jb     4e70 <ExecuteMMCSD+0x250>
    4e50:	80 7c 24 17 00       	cmpb   $0x0,0x17(%esp)
    4e55:	75 20                	jne    4e77 <ExecuteMMCSD+0x257>
    4e57:	8b 57 44             	mov    0x44(%edi),%edx
    4e5a:	80 7a 10 00          	cmpb   $0x0,0x10(%edx)
    4e5e:	0f 85 6d 03 00 00    	jne    51d1 <ExecuteMMCSD+0x5b1>
    4e64:	80 7a 0d 00          	cmpb   $0x0,0xd(%edx)
    4e68:	0f 84 40 03 00 00    	je     51ae <ExecuteMMCSD+0x58e>
    4e6e:	89 f6                	mov    %esi,%esi
    4e70:	80 7c 24 17 00       	cmpb   $0x0,0x17(%esp)
    4e75:	74 51                	je     4ec8 <ExecuteMMCSD+0x2a8>
    4e77:	0f b6 5c 24 17       	movzbl 0x17(%esp),%ebx
    4e7c:	c7 04 24 00 0c 00 00 	movl   $0xc00,(%esp)
			4e7f: R_386_32	.rodata.str1.32
    4e83:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    4e87:	e8 fc ff ff ff       	call   4e88 <ExecuteMMCSD+0x268>
			4e88: R_386_PC32	printk
    4e8c:	be ff ff 00 00       	mov    $0xffff,%esi
    4e91:	89 74 24 04          	mov    %esi,0x4(%esp)
    4e95:	8b 47 50             	mov    0x50(%edi),%eax
    4e98:	8b 40 28             	mov    0x28(%eax),%eax
    4e9b:	89 04 24             	mov    %eax,(%esp)
    4e9e:	e8 fc ff ff ff       	call   4e9f <ExecuteMMCSD+0x27f>
			4e9f: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    4ea3:	b9 02 00 00 00       	mov    $0x2,%ecx
    4ea8:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    4eac:	8b 47 50             	mov    0x50(%edi),%eax
    4eaf:	8b 40 28             	mov    0x28(%eax),%eax
    4eb2:	89 04 24             	mov    %eax,(%esp)
    4eb5:	e8 fc ff ff ff       	call   4eb6 <ExecuteMMCSD+0x296>
			4eb6: R_386_PC32	DMA_CONTROL_SOCK2
    4eba:	89 d8                	mov    %ebx,%eax
    4ebc:	8d 74 26 00          	lea    0x0(%esi),%esi
    4ec0:	83 c4 18             	add    $0x18,%esp
    4ec3:	5b                   	pop    %ebx
    4ec4:	5e                   	pop    %esi
    4ec5:	5f                   	pop    %edi
    4ec6:	5d                   	pop    %ebp
    4ec7:	c3                   	ret    
    4ec8:	8b 47 50             	mov    0x50(%edi),%eax
    4ecb:	f6 00 01             	testb  $0x1,(%eax)
    4ece:	75 79                	jne    4f49 <ExecuteMMCSD+0x329>
    4ed0:	be 00 e0 ff ff       	mov    $0xffffe000,%esi
    4ed5:	21 e6                	and    %esp,%esi
    4ed7:	89 f6                	mov    %esi,%esi
    4ed9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    4ee0:	0f b7 00             	movzwl (%eax),%eax
    4ee3:	c7 04 24 40 0c 00 00 	movl   $0xc40,(%esp)
			4ee6: R_386_32	.rodata.str1.32
    4eea:	89 44 24 04          	mov    %eax,0x4(%esp)
    4eee:	e8 fc ff ff ff       	call   4eef <ExecuteMMCSD+0x2cf>
			4eef: R_386_PC32	printk
    4ef3:	b8 01 00 00 00       	mov    $0x1,%eax
    4ef8:	e8 fc ff ff ff       	call   4ef9 <ExecuteMMCSD+0x2d9>
			4ef9: R_386_PC32	add_preempt_count
    4efd:	8b 47 50             	mov    0x50(%edi),%eax
    4f00:	ba b8 0b 00 00       	mov    $0xbb8,%edx
    4f05:	83 c0 1c             	add    $0x1c,%eax
    4f08:	e8 fc ff ff ff       	call   4f09 <ExecuteMMCSD+0x2e9>
			4f09: R_386_PC32	interruptible_sleep_on_timeout
    4f0d:	89 c3                	mov    %eax,%ebx
    4f0f:	b8 01 00 00 00       	mov    $0x1,%eax
    4f14:	e8 fc ff ff ff       	call   4f15 <ExecuteMMCSD+0x2f5>
			4f15: R_386_PC32	sub_preempt_count
    4f19:	8b 46 08             	mov    0x8(%esi),%eax
    4f1c:	a8 08                	test   $0x8,%al
    4f1e:	0f 85 80 02 00 00    	jne    51a4 <ExecuteMMCSD+0x584>
    4f24:	85 db                	test   %ebx,%ebx
    4f26:	0f 84 59 02 00 00    	je     5185 <ExecuteMMCSD+0x565>
    4f2c:	80 7c 24 17 00       	cmpb   $0x0,0x17(%esp)
    4f31:	0f 85 49 02 00 00    	jne    5180 <ExecuteMMCSD+0x560>
    4f37:	8b 47 50             	mov    0x50(%edi),%eax
    4f3a:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    4f3e:	0f 85 f0 01 00 00    	jne    5134 <ExecuteMMCSD+0x514>
    4f44:	f6 00 01             	testb  $0x1,(%eax)
    4f47:	74 97                	je     4ee0 <ExecuteMMCSD+0x2c0>
    4f49:	66 c7 00 00 00       	movw   $0x0,(%eax)
    4f4e:	8b 47 50             	mov    0x50(%edi),%eax
    4f51:	c6 40 08 00          	movb   $0x0,0x8(%eax)
    4f55:	8d 74 26 00          	lea    0x0(%esi),%esi
    4f59:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    4f60:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    4f64:	8b 57 44             	mov    0x44(%edi),%edx
    4f67:	85 c0                	test   %eax,%eax
    4f69:	8b 72 08             	mov    0x8(%edx),%esi
    4f6c:	0f 84 9e 00 00 00    	je     5010 <ExecuteMMCSD+0x3f0>
    4f72:	80 7c 24 17 00       	cmpb   $0x0,0x17(%esp)
    4f77:	0f 85 93 00 00 00    	jne    5010 <ExecuteMMCSD+0x3f0>
    4f7d:	80 7a 0f 00          	cmpb   $0x0,0xf(%edx)
    4f81:	0f 84 99 00 00 00    	je     5020 <ExecuteMMCSD+0x400>
    4f87:	80 7a 0c 02          	cmpb   $0x2,0xc(%edx)
    4f8b:	74 08                	je     4f95 <ExecuteMMCSD+0x375>
    4f8d:	8d 46 ff             	lea    0xffffffff(%esi),%eax
    4f90:	85 f6                	test   %esi,%esi
    4f92:	0f 45 f0             	cmovne %eax,%esi
    4f95:	8d 04 f5 00 00 00 00 	lea    0x0(,%esi,8),%eax
    4f9c:	88 c3                	mov    %al,%bl
    4f9e:	fe cb                	dec    %bl
    4fa0:	85 f6                	test   %esi,%esi
    4fa2:	74 4c                	je     4ff0 <ExecuteMMCSD+0x3d0>
    4fa4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4faa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
    4fb0:	31 c0                	xor    %eax,%eax
    4fb2:	80 7a 0c 02          	cmpb   $0x2,0xc(%edx)
    4fb6:	89 3c 24             	mov    %edi,(%esp)
    4fb9:	0f 94 c0             	sete   %al
    4fbc:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4fc0:	88 d8                	mov    %bl,%al
    4fc2:	2c 07                	sub    $0x7,%al
    4fc4:	0f b6 c0             	movzbl %al,%eax
    4fc7:	89 44 24 08          	mov    %eax,0x8(%esp)
    4fcb:	0f b6 c3             	movzbl %bl,%eax
    4fce:	89 44 24 04          	mov    %eax,0x4(%esp)
    4fd2:	e8 69 ef ff ff       	call   3f40 <MMCSD_RESPONSE2>
    4fd7:	8b 54 24 3c          	mov    0x3c(%esp),%edx
    4fdb:	88 02                	mov    %al,(%edx)
    4fdd:	80 eb 08             	sub    $0x8,%bl
    4fe0:	42                   	inc    %edx
    4fe1:	89 54 24 3c          	mov    %edx,0x3c(%esp)
    4fe5:	4e                   	dec    %esi
    4fe6:	74 05                	je     4fed <ExecuteMMCSD+0x3cd>
    4fe8:	8b 57 44             	mov    0x44(%edi),%edx
    4feb:	eb c3                	jmp    4fb0 <ExecuteMMCSD+0x390>
    4fed:	8b 57 44             	mov    0x44(%edi),%edx
    4ff0:	80 7a 0c 02          	cmpb   $0x2,0xc(%edx)
    4ff4:	74 1a                	je     5010 <ExecuteMMCSD+0x3f0>
    4ff6:	8b 5a 08             	mov    0x8(%edx),%ebx
    4ff9:	85 db                	test   %ebx,%ebx
    4ffb:	74 13                	je     5010 <ExecuteMMCSD+0x3f0>
    4ffd:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    5001:	c6 00 00             	movb   $0x0,(%eax)
    5004:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    500a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
    5010:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
    5015:	e9 a6 fe ff ff       	jmp    4ec0 <ExecuteMMCSD+0x2a0>
    501a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5020:	80 7d 0d 00          	cmpb   $0x0,0xd(%ebp)
    5024:	74 63                	je     5089 <ExecuteMMCSD+0x469>
    5026:	85 f6                	test   %esi,%esi
    5028:	75 1b                	jne    5045 <ExecuteMMCSD+0x425>
    502a:	89 3c 24             	mov    %edi,(%esp)
    502d:	e8 fc ff ff ff       	call   502e <ExecuteMMCSD+0x40e>
			502e: R_386_PC32	MMCSD_INT_ENABLE1
    5032:	89 3c 24             	mov    %edi,(%esp)
    5035:	25 ff f3 ff ff       	and    $0xfffff3ff,%eax
    503a:	89 44 24 04          	mov    %eax,0x4(%esp)
    503e:	e8 fc ff ff ff       	call   503f <ExecuteMMCSD+0x41f>
			503f: R_386_PC32	MMCSD_INT_ENABLE2
    5043:	eb cb                	jmp    5010 <ExecuteMMCSD+0x3f0>
    5045:	89 3c 24             	mov    %edi,(%esp)
    5048:	e8 f3 e9 ff ff       	call   3a40 <WaitForAFMMCSD>
    504d:	88 44 24 17          	mov    %al,0x17(%esp)
    5051:	b8 22 00 00 00       	mov    $0x22,%eax
    5056:	80 7c 24 17 22       	cmpb   $0x22,0x17(%esp)
    505b:	0f 84 5f fe ff ff    	je     4ec0 <ExecuteMMCSD+0x2a0>
    5061:	89 3c 24             	mov    %edi,(%esp)
    5064:	e8 fc ff ff ff       	call   5065 <ExecuteMMCSD+0x445>
			5065: R_386_PC32	MMCSD_DATA1
    5069:	8b 54 24 3c          	mov    0x3c(%esp),%edx
    506d:	0f b7 d8             	movzwl %ax,%ebx
    5070:	88 1a                	mov    %bl,(%edx)
    5072:	42                   	inc    %edx
    5073:	4e                   	dec    %esi
    5074:	89 54 24 3c          	mov    %edx,0x3c(%esp)
    5078:	74 b0                	je     502a <ExecuteMMCSD+0x40a>
    507a:	c1 eb 08             	shr    $0x8,%ebx
    507d:	88 1a                	mov    %bl,(%edx)
    507f:	42                   	inc    %edx
    5080:	4e                   	dec    %esi
    5081:	89 54 24 3c          	mov    %edx,0x3c(%esp)
    5085:	75 be                	jne    5045 <ExecuteMMCSD+0x425>
    5087:	eb a1                	jmp    502a <ExecuteMMCSD+0x40a>
    5089:	89 3c 24             	mov    %edi,(%esp)
    508c:	e8 fc ff ff ff       	call   508d <ExecuteMMCSD+0x46d>
			508d: R_386_PC32	MMCSD_INT_ENABLE1
    5091:	89 3c 24             	mov    %edi,(%esp)
    5094:	83 c8 14             	or     $0x14,%eax
    5097:	89 44 24 04          	mov    %eax,0x4(%esp)
    509b:	e8 fc ff ff ff       	call   509c <ExecuteMMCSD+0x47c>
			509c: R_386_PC32	MMCSD_INT_ENABLE2
    50a0:	c6 47 2c 01          	movb   $0x1,0x2c(%edi)
    50a4:	85 f6                	test   %esi,%esi
    50a6:	74 50                	je     50f8 <ExecuteMMCSD+0x4d8>
    50a8:	90                   	nop    
    50a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    50b0:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    50b4:	0f b6 18             	movzbl (%eax),%ebx
    50b7:	40                   	inc    %eax
    50b8:	4e                   	dec    %esi
    50b9:	89 44 24 3c          	mov    %eax,0x3c(%esp)
    50bd:	74 0d                	je     50cc <ExecuteMMCSD+0x4ac>
    50bf:	0f b6 00             	movzbl (%eax),%eax
    50c2:	4e                   	dec    %esi
    50c3:	ff 44 24 3c          	incl   0x3c(%esp)
    50c7:	c1 e0 08             	shl    $0x8,%eax
    50ca:	09 c3                	or     %eax,%ebx
    50cc:	89 3c 24             	mov    %edi,(%esp)
    50cf:	e8 5c e8 ff ff       	call   3930 <WaitForAEMMCSD>
    50d4:	88 44 24 17          	mov    %al,0x17(%esp)
    50d8:	b8 22 00 00 00       	mov    $0x22,%eax
    50dd:	80 7c 24 17 22       	cmpb   $0x22,0x17(%esp)
    50e2:	0f 84 d8 fd ff ff    	je     4ec0 <ExecuteMMCSD+0x2a0>
    50e8:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    50ec:	89 3c 24             	mov    %edi,(%esp)
    50ef:	e8 fc ff ff ff       	call   50f0 <ExecuteMMCSD+0x4d0>
			50f0: R_386_PC32	MMCSD_DATA2
    50f4:	85 f6                	test   %esi,%esi
    50f6:	75 b8                	jne    50b0 <ExecuteMMCSD+0x490>
    50f8:	8b 47 44             	mov    0x44(%edi),%eax
    50fb:	80 78 0e 00          	cmpb   $0x0,0xe(%eax)
    50ff:	74 25                	je     5126 <ExecuteMMCSD+0x506>
    5101:	80 7c 24 17 00       	cmpb   $0x0,0x17(%esp)
    5106:	0f 84 1e ff ff ff    	je     502a <ExecuteMMCSD+0x40a>
    510c:	0f b6 5c 24 17       	movzbl 0x17(%esp),%ebx
    5111:	c7 04 24 a0 0c 00 00 	movl   $0xca0,(%esp)
			5114: R_386_32	.rodata.str1.32
    5118:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    511c:	e8 fc ff ff ff       	call   511d <ExecuteMMCSD+0x4fd>
			511d: R_386_PC32	printk
    5121:	e9 94 fd ff ff       	jmp    4eba <ExecuteMMCSD+0x29a>
    5126:	89 3c 24             	mov    %edi,(%esp)
    5129:	e8 22 ea ff ff       	call   3b50 <WaitForCardMMCSD>
    512e:	88 44 24 17          	mov    %al,0x17(%esp)
    5132:	eb cd                	jmp    5101 <ExecuteMMCSD+0x4e1>
    5134:	ba ff ff 00 00       	mov    $0xffff,%edx
    5139:	89 54 24 04          	mov    %edx,0x4(%esp)
    513d:	8b 40 28             	mov    0x28(%eax),%eax
    5140:	89 04 24             	mov    %eax,(%esp)
    5143:	e8 fc ff ff ff       	call   5144 <ExecuteMMCSD+0x524>
			5144: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    5148:	b8 02 00 00 00       	mov    $0x2,%eax
    514d:	89 44 24 04          	mov    %eax,0x4(%esp)
    5151:	8b 47 50             	mov    0x50(%edi),%eax
    5154:	8b 40 28             	mov    0x28(%eax),%eax
    5157:	89 04 24             	mov    %eax,(%esp)
    515a:	e8 fc ff ff ff       	call   515b <ExecuteMMCSD+0x53b>
			515b: R_386_PC32	DMA_CONTROL_SOCK2
    515f:	8b 47 50             	mov    0x50(%edi),%eax
    5162:	c6 40 08 00          	movb   $0x0,0x8(%eax)
    5166:	8b 47 50             	mov    0x50(%edi),%eax
    5169:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    516d:	0f 84 9d fe ff ff    	je     5010 <ExecuteMMCSD+0x3f0>
    5173:	b8 86 00 00 00       	mov    $0x86,%eax
    5178:	e9 43 fd ff ff       	jmp    4ec0 <ExecuteMMCSD+0x2a0>
    517d:	8d 76 00             	lea    0x0(%esi),%esi
    5180:	8b 47 50             	mov    0x50(%edi),%eax
    5183:	eb af                	jmp    5134 <ExecuteMMCSD+0x514>
    5185:	c7 04 24 e0 0a 00 00 	movl   $0xae0,(%esp)
			5188: R_386_32	.rodata.str1.32
    518c:	b9 48 05 00 00       	mov    $0x548,%ecx
			518d: R_386_32	.rodata
    5191:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    5195:	e8 fc ff ff ff       	call   5196 <ExecuteMMCSD+0x576>
			5196: R_386_PC32	printk
    519a:	b8 ff 00 00 00       	mov    $0xff,%eax
    519f:	e9 1c fd ff ff       	jmp    4ec0 <ExecuteMMCSD+0x2a0>
    51a4:	e8 fc ff ff ff       	call   51a5 <ExecuteMMCSD+0x585>
			51a5: R_386_PC32	preempt_schedule
    51a9:	e9 76 fd ff ff       	jmp    4f24 <ExecuteMMCSD+0x304>
    51ae:	89 3c 24             	mov    %edi,(%esp)
    51b1:	e8 9a e9 ff ff       	call   3b50 <WaitForCardMMCSD>
    51b6:	88 44 24 17          	mov    %al,0x17(%esp)
    51ba:	84 c0                	test   %al,%al
    51bc:	0f 84 06 fd ff ff    	je     4ec8 <ExecuteMMCSD+0x2a8>
    51c2:	c7 04 24 00 0d 00 00 	movl   $0xd00,(%esp)
			51c5: R_386_32	.rodata.str1.32
    51c9:	0f b6 d8             	movzbl %al,%ebx
    51cc:	e9 b2 fc ff ff       	jmp    4e83 <ExecuteMMCSD+0x263>
    51d1:	89 3c 24             	mov    %edi,(%esp)
    51d4:	e8 27 ea ff ff       	call   3c00 <WaitForBRSMMCSD>
    51d9:	88 44 24 17          	mov    %al,0x17(%esp)
    51dd:	84 c0                	test   %al,%al
    51df:	74 21                	je     5202 <ExecuteMMCSD+0x5e2>
    51e1:	0f b6 5c 24 17       	movzbl 0x17(%esp),%ebx
    51e6:	8b 47 1c             	mov    0x1c(%edi),%eax
    51e9:	c7 04 24 60 0d 00 00 	movl   $0xd60,(%esp)
			51ec: R_386_32	.rodata.str1.32
    51f0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    51f4:	89 44 24 08          	mov    %eax,0x8(%esp)
    51f8:	e8 fc ff ff ff       	call   51f9 <ExecuteMMCSD+0x5d9>
			51f9: R_386_PC32	printk
    51fd:	e9 8a fc ff ff       	jmp    4e8c <ExecuteMMCSD+0x26c>
    5202:	89 3c 24             	mov    %edi,(%esp)
    5205:	b8 00 29 00 00       	mov    $0x2900,%eax
    520a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    520e:	31 c0                	xor    %eax,%eax
    5210:	89 44 24 08          	mov    %eax,0x8(%esp)
    5214:	b8 0c 00 00 00       	mov    $0xc,%eax
    5219:	89 44 24 04          	mov    %eax,0x4(%esp)
    521d:	e8 ce eb ff ff       	call   3df0 <CmdMMCSD>
    5222:	88 44 24 17          	mov    %al,0x17(%esp)
    5226:	84 c0                	test   %al,%al
    5228:	75 08                	jne    5232 <ExecuteMMCSD+0x612>
    522a:	8b 57 44             	mov    0x44(%edi),%edx
    522d:	e9 32 fc ff ff       	jmp    4e64 <ExecuteMMCSD+0x244>
    5232:	c7 04 24 c0 0d 00 00 	movl   $0xdc0,(%esp)
			5235: R_386_32	.rodata.str1.32
    5239:	bd 02 00 00 00       	mov    $0x2,%ebp
    523e:	e8 fc ff ff ff       	call   523f <ExecuteMMCSD+0x61f>
			523f: R_386_PC32	printk
    5243:	b8 ff ff 00 00       	mov    $0xffff,%eax
    5248:	89 44 24 04          	mov    %eax,0x4(%esp)
    524c:	8b 47 50             	mov    0x50(%edi),%eax
    524f:	8b 40 28             	mov    0x28(%eax),%eax
    5252:	89 04 24             	mov    %eax,(%esp)
    5255:	e8 fc ff ff ff       	call   5256 <ExecuteMMCSD+0x636>
			5256: R_386_PC32	DMA_FIFO_INT_ENABLE_CLEAR_SOCK
    525a:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    525e:	8b 47 50             	mov    0x50(%edi),%eax
    5261:	8b 40 28             	mov    0x28(%eax),%eax
    5264:	89 04 24             	mov    %eax,(%esp)
    5267:	e8 fc ff ff ff       	call   5268 <ExecuteMMCSD+0x648>
			5268: R_386_PC32	DMA_CONTROL_SOCK2
    526c:	e9 9f fd ff ff       	jmp    5010 <ExecuteMMCSD+0x3f0>
    5271:	89 3c 24             	mov    %edi,(%esp)
    5274:	48                   	dec    %eax
    5275:	89 44 24 04          	mov    %eax,0x4(%esp)
    5279:	e8 fc ff ff ff       	call   527a <ExecuteMMCSD+0x65a>
			527a: R_386_PC32	MMCSD_BLOCK_LENGTH2
    527e:	e9 9c fb ff ff       	jmp    4e1f <ExecuteMMCSD+0x1ff>
    5283:	84 c9                	test   %cl,%cl
    5285:	b8 00 09 00 00       	mov    $0x900,%eax
    528a:	0f 44 d8             	cmove  %eax,%ebx
    528d:	e9 34 fb ff ff       	jmp    4dc6 <ExecuteMMCSD+0x1a6>
    5292:	84 c9                	test   %cl,%cl
    5294:	b8 00 06 00 00       	mov    $0x600,%eax
    5299:	0f 44 d8             	cmove  %eax,%ebx
    529c:	e9 1c fb ff ff       	jmp    4dbd <ExecuteMMCSD+0x19d>
    52a1:	31 db                	xor    %ebx,%ebx
    52a3:	e9 08 fb ff ff       	jmp    4db0 <ExecuteMMCSD+0x190>
    52a8:	bb 00 02 00 00       	mov    $0x200,%ebx
    52ad:	e9 fe fa ff ff       	jmp    4db0 <ExecuteMMCSD+0x190>
    52b2:	bb 00 09 00 00       	mov    $0x900,%ebx
    52b7:	e9 f4 fa ff ff       	jmp    4db0 <ExecuteMMCSD+0x190>
    52bc:	bb 00 06 00 00       	mov    $0x600,%ebx
    52c1:	e9 ea fa ff ff       	jmp    4db0 <ExecuteMMCSD+0x190>
    52c6:	bb 00 03 00 00       	mov    $0x300,%ebx
    52cb:	e9 e0 fa ff ff       	jmp    4db0 <ExecuteMMCSD+0x190>
    52d0:	b9 00 21 00 00       	mov    $0x2100,%ecx
    52d5:	ba 37 00 00 00       	mov    $0x37,%edx
    52da:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    52de:	8b 47 14             	mov    0x14(%edi),%eax
    52e1:	89 54 24 04          	mov    %edx,0x4(%esp)
    52e5:	89 3c 24             	mov    %edi,(%esp)
    52e8:	89 44 24 08          	mov    %eax,0x8(%esp)
    52ec:	e8 ff ea ff ff       	call   3df0 <CmdMMCSD>
    52f1:	0f b6 4d 0e          	movzbl 0xe(%ebp),%ecx
    52f5:	e9 8e fa ff ff       	jmp    4d88 <ExecuteMMCSD+0x168>
    52fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5300:	b8 00 80 00 00       	mov    $0x8000,%eax
    5305:	b9 80 00 00 00       	mov    $0x80,%ecx
    530a:	89 44 24 10          	mov    %eax,0x10(%esp)
    530e:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    5312:	e9 e2 f9 ff ff       	jmp    4cf9 <ExecuteMMCSD+0xd9>
    5317:	c7 04 24 00 0e 00 00 	movl   $0xe00,(%esp)
			531a: R_386_32	.rodata.str1.32
    531e:	ba 48 05 00 00       	mov    $0x548,%edx
			531f: R_386_32	.rodata
    5323:	89 54 24 04          	mov    %edx,0x4(%esp)
    5327:	e8 fc ff ff ff       	call   5328 <ExecuteMMCSD+0x708>
			5328: R_386_PC32	printk
    532c:	b8 c3 00 00 00       	mov    $0xc3,%eax
    5331:	e9 8a fb ff ff       	jmp    4ec0 <ExecuteMMCSD+0x2a0>
    5336:	b8 c0 00 00 00       	mov    $0xc0,%eax
    533b:	e9 80 fb ff ff       	jmp    4ec0 <ExecuteMMCSD+0x2a0>
    5340:	89 3c 24             	mov    %edi,(%esp)
    5343:	31 db                	xor    %ebx,%ebx
    5345:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    5349:	e8 fc ff ff ff       	call   534a <ExecuteMMCSD+0x72a>
			534a: R_386_PC32	MMCSD_BUFFER_CONFIG2
    534e:	89 3c 24             	mov    %edi,(%esp)
    5351:	e8 fc ff ff ff       	call   5352 <ExecuteMMCSD+0x732>
			5352: R_386_PC32	MMCSD_INT_ENABLE1
    5356:	89 3c 24             	mov    %edi,(%esp)
    5359:	0d 00 0c 00 00       	or     $0xc00,%eax
    535e:	89 44 24 04          	mov    %eax,0x4(%esp)
    5362:	e8 fc ff ff ff       	call   5363 <ExecuteMMCSD+0x743>
			5363: R_386_PC32	MMCSD_INT_ENABLE2
    5367:	e9 08 fa ff ff       	jmp    4d74 <ExecuteMMCSD+0x154>
    536c:	8d 74 26 00          	lea    0x0(%esi),%esi

00005370 <InitializeCardMMCSD>:
    5370:	55                   	push   %ebp
    5371:	ba ff 00 00 00       	mov    $0xff,%edx
    5376:	57                   	push   %edi
    5377:	56                   	push   %esi
    5378:	53                   	push   %ebx
    5379:	81 ec 84 00 00 00    	sub    $0x84,%esp
    537f:	8b bc 24 98 00 00 00 	mov    0x98(%esp),%edi
    5386:	c6 44 24 23 00       	movb   $0x0,0x23(%esp)
    538b:	85 ff                	test   %edi,%edi
    538d:	0f 84 5e 01 00 00    	je     54f1 <InitializeCardMMCSD+0x181>
    5393:	66 c7 47 12 3c 00    	movw   $0x3c,0x12(%edi)
    5399:	b8 02 00 00 00       	mov    $0x2,%eax
    539e:	89 44 24 04          	mov    %eax,0x4(%esp)
    53a2:	89 3c 24             	mov    %edi,(%esp)
    53a5:	e8 fc ff ff ff       	call   53a6 <InitializeCardMMCSD+0x36>
			53a6: R_386_PC32	MMCSD_SYSTEM_CONTROL
    53aa:	0f b7 47 12          	movzwl 0x12(%edi),%eax
    53ae:	89 3c 24             	mov    %edi,(%esp)
    53b1:	0d 00 08 00 00       	or     $0x800,%eax
    53b6:	0f b7 c0             	movzwl %ax,%eax
    53b9:	89 44 24 04          	mov    %eax,0x4(%esp)
    53bd:	e8 fc ff ff ff       	call   53be <InitializeCardMMCSD+0x4e>
			53be: R_386_PC32	MMCSD_CONFIG2
    53c2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    53c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    53d0:	89 3c 24             	mov    %edi,(%esp)
    53d3:	e8 fc ff ff ff       	call   53d4 <InitializeCardMMCSD+0x64>
			53d4: R_386_PC32	MMCSD_SYSTEM_STATUS
    53d8:	a8 01                	test   $0x1,%al
    53da:	74 f4                	je     53d0 <InitializeCardMMCSD+0x60>
    53dc:	89 3c 24             	mov    %edi,(%esp)
    53df:	31 c0                	xor    %eax,%eax
    53e1:	bd 40 00 00 00       	mov    $0x40,%ebp
    53e6:	89 44 24 04          	mov    %eax,0x4(%esp)
    53ea:	be ff 7f 00 00       	mov    $0x7fff,%esi
    53ef:	bb 80 00 00 00       	mov    $0x80,%ebx
    53f4:	e8 fc ff ff ff       	call   53f5 <InitializeCardMMCSD+0x85>
			53f5: R_386_PC32	MMCSD_NUMBER_OF_BLOCKS2
    53f9:	0f b7 47 12          	movzwl 0x12(%edi),%eax
    53fd:	89 3c 24             	mov    %edi,(%esp)
    5400:	0d 00 08 00 00       	or     $0x800,%eax
    5405:	0f b7 c0             	movzwl %ax,%eax
    5408:	89 44 24 04          	mov    %eax,0x4(%esp)
    540c:	e8 fc ff ff ff       	call   540d <InitializeCardMMCSD+0x9d>
			540d: R_386_PC32	MMCSD_CONFIG2
    5411:	89 3c 24             	mov    %edi,(%esp)
    5414:	b8 00 80 00 00       	mov    $0x8000,%eax
    5419:	89 44 24 04          	mov    %eax,0x4(%esp)
    541d:	e8 fc ff ff ff       	call   541e <InitializeCardMMCSD+0xae>
			541e: R_386_PC32	MMCSD_BUFFER_CONFIG2
    5422:	89 3c 24             	mov    %edi,(%esp)
    5425:	b8 e9 41 00 00       	mov    $0x41e9,%eax
    542a:	89 44 24 04          	mov    %eax,0x4(%esp)
    542e:	e8 fc ff ff ff       	call   542f <InitializeCardMMCSD+0xbf>
			542f: R_386_PC32	MMCSD_INT_ENABLE2
    5433:	89 3c 24             	mov    %edi,(%esp)
    5436:	e8 fc ff ff ff       	call   5437 <InitializeCardMMCSD+0xc7>
			5437: R_386_PC32	MMCSD_SDIO_MODE_CONFIG1
    543b:	89 3c 24             	mov    %edi,(%esp)
    543e:	83 c8 20             	or     $0x20,%eax
    5441:	89 44 24 04          	mov    %eax,0x4(%esp)
    5445:	e8 fc ff ff ff       	call   5446 <InitializeCardMMCSD+0xd6>
			5446: R_386_PC32	MMCSD_SDIO_MODE_CONFIG2
    544a:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    544e:	89 3c 24             	mov    %edi,(%esp)
    5451:	e8 fc ff ff ff       	call   5452 <InitializeCardMMCSD+0xe2>
			5452: R_386_PC32	MMCSD_COMMAND_TO
    5456:	89 74 24 04          	mov    %esi,0x4(%esp)
    545a:	89 3c 24             	mov    %edi,(%esp)
    545d:	e8 fc ff ff ff       	call   545e <InitializeCardMMCSD+0xee>
			545e: R_386_PC32	MMCSD_DATA_TO
    5462:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    5466:	89 3c 24             	mov    %edi,(%esp)
    5469:	e8 fc ff ff ff       	call   546a <InitializeCardMMCSD+0xfa>
			546a: R_386_PC32	MMCSD_COMMAND2
    546e:	0f b7 47 12          	movzwl 0x12(%edi),%eax
    5472:	89 3c 24             	mov    %edi,(%esp)
    5475:	0d 00 08 00 00       	or     $0x800,%eax
    547a:	0f b7 c0             	movzwl %ax,%eax
    547d:	89 44 24 04          	mov    %eax,0x4(%esp)
    5481:	e8 fc ff ff ff       	call   5482 <InitializeCardMMCSD+0x112>
			5482: R_386_PC32	MMCSD_CONFIG2
    5486:	b8 01 00 00 00       	mov    $0x1,%eax
    548b:	e8 fc ff ff ff       	call   548c <InitializeCardMMCSD+0x11c>
			548c: R_386_PC32	add_preempt_count
    5490:	ba d0 07 00 00       	mov    $0x7d0,%edx
    5495:	8d 47 24             	lea    0x24(%edi),%eax
    5498:	e8 fc ff ff ff       	call   5499 <InitializeCardMMCSD+0x129>
			5499: R_386_PC32	interruptible_sleep_on_timeout
    549d:	b8 01 00 00 00       	mov    $0x1,%eax
    54a2:	e8 fc ff ff ff       	call   54a3 <InitializeCardMMCSD+0x133>
			54a3: R_386_PC32	sub_preempt_count
    54a7:	b8 00 e0 ff ff       	mov    $0xffffe000,%eax
    54ac:	21 e0                	and    %esp,%eax
    54ae:	8b 40 08             	mov    0x8(%eax),%eax
    54b1:	a8 08                	test   $0x8,%al
    54b3:	0f 85 51 03 00 00    	jne    580a <InitializeCardMMCSD+0x49a>
    54b9:	8b 47 50             	mov    0x50(%edi),%eax
    54bc:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    54c0:	0f 85 3a 03 00 00    	jne    5800 <InitializeCardMMCSD+0x490>
    54c6:	89 3c 24             	mov    %edi,(%esp)
    54c9:	e8 52 ec ff ff       	call   4120 <DetectCardTypeMMCSD>
    54ce:	84 c0                	test   %al,%al
    54d0:	75 1c                	jne    54ee <InitializeCardMMCSD+0x17e>
    54d2:	8b 57 50             	mov    0x50(%edi),%edx
    54d5:	8b 42 28             	mov    0x28(%edx),%eax
    54d8:	80 78 04 43          	cmpb   $0x43,0x4(%eax)
    54dc:	0f 84 fe 02 00 00    	je     57e0 <InitializeCardMMCSD+0x470>
    54e2:	89 3c 24             	mov    %edi,(%esp)
    54e5:	e8 46 ed ff ff       	call   4230 <StandbyMMCSD>
    54ea:	84 c0                	test   %al,%al
    54ec:	74 10                	je     54fe <InitializeCardMMCSD+0x18e>
    54ee:	0f b6 d0             	movzbl %al,%edx
    54f1:	81 c4 84 00 00 00    	add    $0x84,%esp
    54f7:	89 d0                	mov    %edx,%eax
    54f9:	5b                   	pop    %ebx
    54fa:	5e                   	pop    %esi
    54fb:	5f                   	pop    %edi
    54fc:	5d                   	pop    %ebp
    54fd:	c3                   	ret    
    54fe:	89 3c 24             	mov    %edi,(%esp)
    5501:	e8 ca ef ff ff       	call   44d0 <ReadCSDInformationMMCSD>
    5506:	84 c0                	test   %al,%al
    5508:	75 e4                	jne    54ee <InitializeCardMMCSD+0x17e>
    550a:	89 3c 24             	mov    %edi,(%esp)
    550d:	e8 fc ff ff ff       	call   550e <InitializeCardMMCSD+0x19e>
			550e: R_386_PC32	MMCSD_CONFIG1
    5512:	0f b7 57 12          	movzwl 0x12(%edi),%edx
    5516:	25 c0 ff 00 00       	and    $0xffc0,%eax
    551b:	89 3c 24             	mov    %edi,(%esp)
    551e:	09 c2                	or     %eax,%edx
    5520:	89 54 24 04          	mov    %edx,0x4(%esp)
    5524:	e8 fc ff ff ff       	call   5525 <InitializeCardMMCSD+0x1b5>
			5525: R_386_PC32	MMCSD_CONFIG2
    5529:	89 3c 24             	mov    %edi,(%esp)
    552c:	e8 6f f4 ff ff       	call   49a0 <GetCHSMMCSD>
    5531:	84 c0                	test   %al,%al
    5533:	75 b9                	jne    54ee <InitializeCardMMCSD+0x17e>
    5535:	89 3c 24             	mov    %edi,(%esp)
    5538:	e8 f3 f5 ff ff       	call   4b30 <ReportMediaModelMMCSD>
    553d:	b8 00 29 00 00       	mov    $0x2900,%eax
    5542:	89 44 24 0c          	mov    %eax,0xc(%esp)
    5546:	8b 47 14             	mov    0x14(%edi),%eax
    5549:	89 3c 24             	mov    %edi,(%esp)
    554c:	89 44 24 08          	mov    %eax,0x8(%esp)
    5550:	b8 07 00 00 00       	mov    $0x7,%eax
    5555:	89 44 24 04          	mov    %eax,0x4(%esp)
    5559:	e8 92 e8 ff ff       	call   3df0 <CmdMMCSD>
    555e:	84 c0                	test   %al,%al
    5560:	75 8c                	jne    54ee <InitializeCardMMCSD+0x17e>
    5562:	b8 00 21 00 00       	mov    $0x2100,%eax
    5567:	89 44 24 0c          	mov    %eax,0xc(%esp)
    556b:	0f b7 47 06          	movzwl 0x6(%edi),%eax
    556f:	89 3c 24             	mov    %edi,(%esp)
    5572:	89 44 24 08          	mov    %eax,0x8(%esp)
    5576:	b8 10 00 00 00       	mov    $0x10,%eax
    557b:	89 44 24 04          	mov    %eax,0x4(%esp)
    557f:	e8 6c e8 ff ff       	call   3df0 <CmdMMCSD>
    5584:	84 c0                	test   %al,%al
    5586:	0f 85 62 ff ff ff    	jne    54ee <InitializeCardMMCSD+0x17e>
    558c:	0f b7 47 06          	movzwl 0x6(%edi),%eax
    5590:	89 3c 24             	mov    %edi,(%esp)
    5593:	48                   	dec    %eax
    5594:	89 44 24 04          	mov    %eax,0x4(%esp)
    5598:	e8 fc ff ff ff       	call   5599 <InitializeCardMMCSD+0x229>
			5599: R_386_PC32	MMCSD_BLOCK_LENGTH2
    559d:	8b 47 50             	mov    0x50(%edi),%eax
    55a0:	8b 40 28             	mov    0x28(%eax),%eax
    55a3:	80 78 04 23          	cmpb   $0x23,0x4(%eax)
    55a7:	74 3d                	je     55e6 <InitializeCardMMCSD+0x276>
    55a9:	89 3c 24             	mov    %edi,(%esp)
    55ac:	31 c9                	xor    %ecx,%ecx
    55ae:	8d 44 24 17          	lea    0x17(%esp),%eax
    55b2:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    55b6:	89 44 24 04          	mov    %eax,0x4(%esp)
    55ba:	e8 81 f5 ff ff       	call   4b40 <GetCardStateMMCSD>
    55bf:	84 c0                	test   %al,%al
    55c1:	0f 85 27 ff ff ff    	jne    54ee <InitializeCardMMCSD+0x17e>
    55c7:	80 7c 24 17 04       	cmpb   $0x4,0x17(%esp)
    55cc:	75 0e                	jne    55dc <InitializeCardMMCSD+0x26c>
    55ce:	8b 47 50             	mov    0x50(%edi),%eax
    55d1:	31 d2                	xor    %edx,%edx
    55d3:	c6 40 04 01          	movb   $0x1,0x4(%eax)
    55d7:	e9 15 ff ff ff       	jmp    54f1 <InitializeCardMMCSD+0x181>
    55dc:	ba 2a 00 00 00       	mov    $0x2a,%edx
    55e1:	e9 0b ff ff ff       	jmp    54f1 <InitializeCardMMCSD+0x181>
    55e6:	89 04 24             	mov    %eax,(%esp)
    55e9:	e8 fc ff ff ff       	call   55ea <InitializeCardMMCSD+0x27a>
			55ea: R_386_PC32	SOCKET_CONTROL_SOCK1
    55ee:	0d 00 01 00 00       	or     $0x100,%eax
    55f3:	0f b7 c0             	movzwl %ax,%eax
    55f6:	89 44 24 04          	mov    %eax,0x4(%esp)
    55fa:	8b 47 50             	mov    0x50(%edi),%eax
    55fd:	8b 40 28             	mov    0x28(%eax),%eax
    5600:	89 04 24             	mov    %eax,(%esp)
    5603:	e8 fc ff ff ff       	call   5604 <InitializeCardMMCSD+0x294>
			5604: R_386_PC32	SOCKET_CONTROL_SOCK2
    5608:	8b 47 50             	mov    0x50(%edi),%eax
    560b:	8b 40 28             	mov    0x28(%eax),%eax
    560e:	c7 40 08 00 36 6e 01 	movl   $0x16e3600,0x8(%eax)
    5615:	b8 00 21 00 00       	mov    $0x2100,%eax
    561a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    561e:	8b 47 14             	mov    0x14(%edi),%eax
    5621:	89 3c 24             	mov    %edi,(%esp)
    5624:	89 44 24 08          	mov    %eax,0x8(%esp)
    5628:	b8 37 00 00 00       	mov    $0x37,%eax
    562d:	89 44 24 04          	mov    %eax,0x4(%esp)
    5631:	e8 ba e7 ff ff       	call   3df0 <CmdMMCSD>
    5636:	84 c0                	test   %al,%al
    5638:	0f 85 b0 fe ff ff    	jne    54ee <InitializeCardMMCSD+0x17e>
    563e:	89 3c 24             	mov    %edi,(%esp)
    5641:	31 f6                	xor    %esi,%esi
    5643:	bd 00 21 00 00       	mov    $0x2100,%ebp
    5648:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    564c:	bb 2a 00 00 00       	mov    $0x2a,%ebx
    5651:	89 74 24 08          	mov    %esi,0x8(%esp)
    5655:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    5659:	e8 92 e7 ff ff       	call   3df0 <CmdMMCSD>
    565e:	84 c0                	test   %al,%al
    5660:	0f 85 88 fe ff ff    	jne    54ee <InitializeCardMMCSD+0x17e>
    5666:	c6 44 24 72 01       	movb   $0x1,0x72(%esp)
    566b:	8d 44 24 24          	lea    0x24(%esp),%eax
    566f:	31 c9                	xor    %ecx,%ecx
    5671:	89 44 24 10          	mov    %eax,0x10(%esp)
    5675:	ba 40 00 00 00       	mov    $0x40,%edx
    567a:	8d 6c 24 23          	lea    0x23(%esp),%ebp
    567e:	c6 44 24 74 00       	movb   $0x0,0x74(%esp)
    5683:	31 c0                	xor    %eax,%eax
    5685:	8d 74 24 64          	lea    0x64(%esp),%esi
    5689:	c6 44 24 71 01       	movb   $0x1,0x71(%esp)
    568e:	c6 44 24 73 00       	movb   $0x0,0x73(%esp)
    5693:	89 4c 24 68          	mov    %ecx,0x68(%esp)
    5697:	c6 44 24 64 0d       	movb   $0xd,0x64(%esp)
    569c:	89 54 24 6c          	mov    %edx,0x6c(%esp)
    56a0:	c6 44 24 70 01       	movb   $0x1,0x70(%esp)
    56a5:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    56a9:	89 44 24 08          	mov    %eax,0x8(%esp)
    56ad:	89 74 24 04          	mov    %esi,0x4(%esp)
    56b1:	89 3c 24             	mov    %edi,(%esp)
    56b4:	e8 67 f5 ff ff       	call   4c20 <ExecuteMMCSD>
    56b9:	84 c0                	test   %al,%al
    56bb:	0f 85 2d fe ff ff    	jne    54ee <InitializeCardMMCSD+0x17e>
    56c1:	0f b6 44 24 27       	movzbl 0x27(%esp),%eax
    56c6:	66 0f b6 54 24 28    	movzbw 0x28(%esp),%dx
    56cc:	c1 e0 08             	shl    $0x8,%eax
    56cf:	01 d0                	add    %edx,%eax
    56d1:	25 00 ff 00 00       	and    $0xff00,%eax
    56d6:	ba 27 00 00 00       	mov    $0x27,%edx
    56db:	66 85 c0             	test   %ax,%ax
    56de:	0f 85 0d fe ff ff    	jne    54f1 <InitializeCardMMCSD+0x181>
    56e4:	c6 44 24 72 01       	movb   $0x1,0x72(%esp)
    56e9:	31 c0                	xor    %eax,%eax
    56eb:	8d 5c 24 18          	lea    0x18(%esp),%ebx
    56ef:	89 44 24 68          	mov    %eax,0x68(%esp)
    56f3:	b8 08 00 00 00       	mov    $0x8,%eax
    56f8:	89 44 24 6c          	mov    %eax,0x6c(%esp)
    56fc:	31 c0                	xor    %eax,%eax
    56fe:	c6 44 24 74 00       	movb   $0x0,0x74(%esp)
    5703:	c6 44 24 71 01       	movb   $0x1,0x71(%esp)
    5708:	c6 44 24 73 00       	movb   $0x0,0x73(%esp)
    570d:	c6 44 24 64 33       	movb   $0x33,0x64(%esp)
    5712:	c6 44 24 70 01       	movb   $0x1,0x70(%esp)
    5717:	c6 44 24 23 00       	movb   $0x0,0x23(%esp)
    571c:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    5720:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    5724:	89 44 24 08          	mov    %eax,0x8(%esp)
    5728:	89 74 24 04          	mov    %esi,0x4(%esp)
    572c:	89 3c 24             	mov    %edi,(%esp)
    572f:	e8 ec f4 ff ff       	call   4c20 <ExecuteMMCSD>
    5734:	31 d2                	xor    %edx,%edx
    5736:	84 c0                	test   %al,%al
    5738:	0f 85 b0 fd ff ff    	jne    54ee <InitializeCardMMCSD+0x17e>
    573e:	8d 42 01             	lea    0x1(%edx),%eax
    5741:	0f b7 d0             	movzwl %ax,%edx
    5744:	66 83 fa 07          	cmp    $0x7,%dx
    5748:	76 f4                	jbe    573e <InitializeCardMMCSD+0x3ce>
    574a:	f6 43 01 04          	testb  $0x4,0x1(%ebx)
    574e:	74 6c                	je     57bc <InitializeCardMMCSD+0x44c>
    5750:	b8 00 21 00 00       	mov    $0x2100,%eax
    5755:	89 44 24 0c          	mov    %eax,0xc(%esp)
    5759:	8b 47 14             	mov    0x14(%edi),%eax
    575c:	89 3c 24             	mov    %edi,(%esp)
    575f:	89 44 24 08          	mov    %eax,0x8(%esp)
    5763:	b8 37 00 00 00       	mov    $0x37,%eax
    5768:	89 44 24 04          	mov    %eax,0x4(%esp)
    576c:	e8 7f e6 ff ff       	call   3df0 <CmdMMCSD>
    5771:	84 c0                	test   %al,%al
    5773:	0f 85 75 fd ff ff    	jne    54ee <InitializeCardMMCSD+0x17e>
    5779:	89 3c 24             	mov    %edi,(%esp)
    577c:	bd 00 21 00 00       	mov    $0x2100,%ebp
    5781:	be 02 00 00 00       	mov    $0x2,%esi
    5786:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    578a:	bb 06 00 00 00       	mov    $0x6,%ebx
    578f:	89 74 24 08          	mov    %esi,0x8(%esp)
    5793:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    5797:	e8 54 e6 ff ff       	call   3df0 <CmdMMCSD>
    579c:	84 c0                	test   %al,%al
    579e:	0f 85 4a fd ff ff    	jne    54ee <InitializeCardMMCSD+0x17e>
    57a4:	0f b7 47 12          	movzwl 0x12(%edi),%eax
    57a8:	89 3c 24             	mov    %edi,(%esp)
    57ab:	0d 00 88 ff ff       	or     $0xffff8800,%eax
    57b0:	0f b7 c0             	movzwl %ax,%eax
    57b3:	89 44 24 04          	mov    %eax,0x4(%esp)
    57b7:	e8 fc ff ff ff       	call   57b8 <InitializeCardMMCSD+0x448>
			57b8: R_386_PC32	MMCSD_CONFIG2
    57bc:	8b 5f 50             	mov    0x50(%edi),%ebx
    57bf:	8b 43 28             	mov    0x28(%ebx),%eax
    57c2:	0f b6 73 05          	movzbl 0x5(%ebx),%esi
    57c6:	89 04 24             	mov    %eax,(%esp)
    57c9:	e8 fc ff ff ff       	call   57ca <InitializeCardMMCSD+0x45a>
			57ca: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    57ce:	c1 e8 09             	shr    $0x9,%eax
    57d1:	83 e0 01             	and    $0x1,%eax
    57d4:	09 c6                	or     %eax,%esi
    57d6:	89 f0                	mov    %esi,%eax
    57d8:	88 43 05             	mov    %al,0x5(%ebx)
    57db:	e9 c9 fd ff ff       	jmp    55a9 <InitializeCardMMCSD+0x239>
    57e0:	b9 80 00 00 00       	mov    $0x80,%ecx
    57e5:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    57e9:	8b 42 28             	mov    0x28(%edx),%eax
    57ec:	89 04 24             	mov    %eax,(%esp)
    57ef:	e8 fc ff ff ff       	call   57f0 <InitializeCardMMCSD+0x480>
			57f0: R_386_PC32	SOCKET_CONTROL_SOCK2
    57f4:	ba 2e 00 00 00       	mov    $0x2e,%edx
    57f9:	e9 f3 fc ff ff       	jmp    54f1 <InitializeCardMMCSD+0x181>
    57fe:	89 f6                	mov    %esi,%esi
    5800:	ba 86 00 00 00       	mov    $0x86,%edx
    5805:	e9 e7 fc ff ff       	jmp    54f1 <InitializeCardMMCSD+0x181>
    580a:	e8 fc ff ff ff       	call   580b <InitializeCardMMCSD+0x49b>
			580b: R_386_PC32	preempt_schedule
    580f:	e9 a5 fc ff ff       	jmp    54b9 <InitializeCardMMCSD+0x149>
    5814:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    581a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005820 <SD_EraseBlocksMMCSD>:
    5820:	57                   	push   %edi
    5821:	56                   	push   %esi
    5822:	53                   	push   %ebx
    5823:	83 ec 10             	sub    $0x10,%esp
    5826:	31 db                	xor    %ebx,%ebx
    5828:	0f b7 7c 24 24       	movzwl 0x24(%esp),%edi
    582d:	8b 74 24 20          	mov    0x20(%esp),%esi
    5831:	eb 0d                	jmp    5840 <SD_EraseBlocksMMCSD+0x20>
    5833:	90                   	nop    
    5834:	90                   	nop    
    5835:	90                   	nop    
    5836:	90                   	nop    
    5837:	90                   	nop    
    5838:	90                   	nop    
    5839:	90                   	nop    
    583a:	90                   	nop    
    583b:	90                   	nop    
    583c:	90                   	nop    
    583d:	90                   	nop    
    583e:	90                   	nop    
    583f:	90                   	nop    
    5840:	b9 00 21 00 00       	mov    $0x2100,%ecx
    5845:	ba 37 00 00 00       	mov    $0x37,%edx
    584a:	fe c3                	inc    %bl
    584c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    5850:	8b 46 14             	mov    0x14(%esi),%eax
    5853:	89 54 24 04          	mov    %edx,0x4(%esp)
    5857:	89 34 24             	mov    %esi,(%esp)
    585a:	89 44 24 08          	mov    %eax,0x8(%esp)
    585e:	e8 8d e5 ff ff       	call   3df0 <CmdMMCSD>
    5863:	80 fb 02             	cmp    $0x2,%bl
    5866:	77 04                	ja     586c <SD_EraseBlocksMMCSD+0x4c>
    5868:	3c 25                	cmp    $0x25,%al
    586a:	74 d4                	je     5840 <SD_EraseBlocksMMCSD+0x20>
    586c:	84 c0                	test   %al,%al
    586e:	74 0a                	je     587a <SD_EraseBlocksMMCSD+0x5a>
    5870:	83 c4 10             	add    $0x10,%esp
    5873:	0f b6 c0             	movzbl %al,%eax
    5876:	5b                   	pop    %ebx
    5877:	5e                   	pop    %esi
    5878:	5f                   	pop    %edi
    5879:	c3                   	ret    
    587a:	89 7c 24 08          	mov    %edi,0x8(%esp)
    587e:	b8 00 21 00 00       	mov    $0x2100,%eax
    5883:	89 44 24 0c          	mov    %eax,0xc(%esp)
    5887:	b8 17 00 00 00       	mov    $0x17,%eax
    588c:	89 44 24 04          	mov    %eax,0x4(%esp)
    5890:	89 34 24             	mov    %esi,(%esp)
    5893:	e8 58 e5 ff ff       	call   3df0 <CmdMMCSD>
    5898:	eb d6                	jmp    5870 <SD_EraseBlocksMMCSD+0x50>
    589a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000058a0 <CloseWriteMMCSD>:
    58a0:	83 ec 14             	sub    $0x14,%esp
    58a3:	31 d2                	xor    %edx,%edx
    58a5:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    58a9:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    58ad:	b8 ff 00 00 00       	mov    $0xff,%eax
    58b2:	85 db                	test   %ebx,%ebx
    58b4:	74 09                	je     58bf <CloseWriteMMCSD+0x1f>
    58b6:	80 7b 2d 01          	cmpb   $0x1,0x2d(%ebx)
    58ba:	74 0b                	je     58c7 <CloseWriteMMCSD+0x27>
    58bc:	0f b6 c2             	movzbl %dl,%eax
    58bf:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    58c3:	83 c4 14             	add    $0x14,%esp
    58c6:	c3                   	ret    
    58c7:	89 1c 24             	mov    %ebx,(%esp)
    58ca:	e8 fc ff ff ff       	call   58cb <CloseWriteMMCSD+0x2b>
			58cb: R_386_PC32	MMCSD_INT_ENABLE1
    58cf:	89 1c 24             	mov    %ebx,(%esp)
    58d2:	83 c8 14             	or     $0x14,%eax
    58d5:	89 44 24 04          	mov    %eax,0x4(%esp)
    58d9:	e8 fc ff ff ff       	call   58da <CloseWriteMMCSD+0x3a>
			58da: R_386_PC32	MMCSD_INT_ENABLE2
    58de:	89 1c 24             	mov    %ebx,(%esp)
    58e1:	b8 00 29 00 00       	mov    $0x2900,%eax
    58e6:	89 44 24 0c          	mov    %eax,0xc(%esp)
    58ea:	31 c0                	xor    %eax,%eax
    58ec:	89 44 24 08          	mov    %eax,0x8(%esp)
    58f0:	b8 0c 00 00 00       	mov    $0xc,%eax
    58f5:	89 44 24 04          	mov    %eax,0x4(%esp)
    58f9:	e8 f2 e4 ff ff       	call   3df0 <CmdMMCSD>
    58fe:	84 c0                	test   %al,%al
    5900:	88 c2                	mov    %al,%dl
    5902:	75 b8                	jne    58bc <CloseWriteMMCSD+0x1c>
    5904:	c6 43 2d 00          	movb   $0x0,0x2d(%ebx)
    5908:	89 1c 24             	mov    %ebx,(%esp)
    590b:	e8 40 e2 ff ff       	call   3b50 <WaitForCardMMCSD>
    5910:	88 c2                	mov    %al,%dl
    5912:	31 c0                	xor    %eax,%eax
    5914:	84 d2                	test   %dl,%dl
    5916:	75 a7                	jne    58bf <CloseWriteMMCSD+0x1f>
    5918:	eb a2                	jmp    58bc <CloseWriteMMCSD+0x1c>
    591a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00005920 <WriteSectorsMMCSD>:
    5920:	55                   	push   %ebp
    5921:	31 c9                	xor    %ecx,%ecx
    5923:	57                   	push   %edi
    5924:	56                   	push   %esi
    5925:	53                   	push   %ebx
    5926:	83 ec 18             	sub    $0x18,%esp
    5929:	8b 5c 24 2c          	mov    0x2c(%esp),%ebx
    592d:	8b 6c 24 30          	mov    0x30(%esp),%ebp
    5931:	8b 7c 24 34          	mov    0x34(%esp),%edi
    5935:	83 fd ff             	cmp    $0xffffffff,%ebp
    5938:	0f 84 12 01 00 00    	je     5a50 <WriteSectorsMMCSD+0x130>
    593e:	3b 2b                	cmp    (%ebx),%ebp
    5940:	0f 83 c9 01 00 00    	jae    5b0f <WriteSectorsMMCSD+0x1ef>
    5946:	0f b7 17             	movzwl (%edi),%edx
    5949:	31 c0                	xor    %eax,%eax
    594b:	66 85 d2             	test   %dx,%dx
    594e:	0f 84 22 01 00 00    	je     5a76 <WriteSectorsMMCSD+0x156>
    5954:	66 81 fa 00 08       	cmp    $0x800,%dx
    5959:	b8 2b 00 00 00       	mov    $0x2b,%eax
    595e:	0f 87 12 01 00 00    	ja     5a76 <WriteSectorsMMCSD+0x156>
    5964:	0f b6 4b 04          	movzbl 0x4(%ebx),%ecx
    5968:	89 e8                	mov    %ebp,%eax
    596a:	66 c7 44 24 16 00 00 	movw   $0x0,0x16(%esp)
    5971:	8d 74 24 15          	lea    0x15(%esp),%esi
    5975:	d3 e0                	shl    %cl,%eax
    5977:	89 44 24 10          	mov    %eax,0x10(%esp)
    597b:	90                   	nop    
    597c:	8d 74 26 00          	lea    0x0(%esi),%esi
    5980:	89 74 24 04          	mov    %esi,0x4(%esp)
    5984:	31 c0                	xor    %eax,%eax
    5986:	89 44 24 08          	mov    %eax,0x8(%esp)
    598a:	89 1c 24             	mov    %ebx,(%esp)
    598d:	e8 ae f1 ff ff       	call   4b40 <GetCardStateMMCSD>
    5992:	80 7c 24 15 04       	cmpb   $0x4,0x15(%esp)
    5997:	88 c1                	mov    %al,%cl
    5999:	0f 84 63 01 00 00    	je     5b02 <WriteSectorsMMCSD+0x1e2>
    599f:	0f b7 54 24 16       	movzwl 0x16(%esp),%edx
    59a4:	8d 42 01             	lea    0x1(%edx),%eax
    59a7:	66 81 fa 87 13       	cmp    $0x1387,%dx
    59ac:	66 89 44 24 16       	mov    %ax,0x16(%esp)
    59b1:	77 04                	ja     59b7 <WriteSectorsMMCSD+0x97>
    59b3:	84 c9                	test   %cl,%cl
    59b5:	74 c9                	je     5980 <WriteSectorsMMCSD+0x60>
    59b7:	89 1c 24             	mov    %ebx,(%esp)
    59ba:	e8 fc ff ff ff       	call   59bb <WriteSectorsMMCSD+0x9b>
			59bb: R_386_PC32	InitializeCardMMCSD
    59bf:	84 c0                	test   %al,%al
    59c1:	88 c1                	mov    %al,%cl
    59c3:	0f 85 aa 00 00 00    	jne    5a73 <WriteSectorsMMCSD+0x153>
    59c9:	8b 43 50             	mov    0x50(%ebx),%eax
    59cc:	8b 40 28             	mov    0x28(%eax),%eax
    59cf:	80 78 04 23          	cmpb   $0x23,0x4(%eax)
    59d3:	0f 84 15 01 00 00    	je     5aee <WriteSectorsMMCSD+0x1ce>
    59d9:	0f b7 07             	movzwl (%edi),%eax
    59dc:	89 1c 24             	mov    %ebx,(%esp)
    59df:	48                   	dec    %eax
    59e0:	89 44 24 04          	mov    %eax,0x4(%esp)
    59e4:	e8 fc ff ff ff       	call   59e5 <WriteSectorsMMCSD+0xc5>
			59e5: R_386_PC32	MMCSD_NUMBER_OF_BLOCKS2
    59e9:	0f b7 43 06          	movzwl 0x6(%ebx),%eax
    59ed:	89 1c 24             	mov    %ebx,(%esp)
    59f0:	48                   	dec    %eax
    59f1:	89 44 24 04          	mov    %eax,0x4(%esp)
    59f5:	e8 fc ff ff ff       	call   59f6 <WriteSectorsMMCSD+0xd6>
			59f6: R_386_PC32	MMCSD_BLOCK_LENGTH2
    59fa:	89 1c 24             	mov    %ebx,(%esp)
    59fd:	b8 80 00 00 00       	mov    $0x80,%eax
    5a02:	89 44 24 04          	mov    %eax,0x4(%esp)
    5a06:	e8 fc ff ff ff       	call   5a07 <WriteSectorsMMCSD+0xe7>
			5a07: R_386_PC32	MMCSD_BUFFER_CONFIG2
    5a0b:	8b 43 1c             	mov    0x1c(%ebx),%eax
    5a0e:	83 e0 f7             	and    $0xfffffff7,%eax
    5a11:	89 43 1c             	mov    %eax,0x1c(%ebx)
    5a14:	66 83 3f 01          	cmpw   $0x1,(%edi)
    5a18:	0f 84 b1 00 00 00    	je     5acf <WriteSectorsMMCSD+0x1af>
    5a1e:	8b 44 24 10          	mov    0x10(%esp),%eax
    5a22:	b9 00 31 00 00       	mov    $0x3100,%ecx
    5a27:	ba 19 00 00 00       	mov    $0x19,%edx
    5a2c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    5a30:	89 54 24 04          	mov    %edx,0x4(%esp)
    5a34:	89 44 24 08          	mov    %eax,0x8(%esp)
    5a38:	89 1c 24             	mov    %ebx,(%esp)
    5a3b:	e8 b0 e3 ff ff       	call   3df0 <CmdMMCSD>
    5a40:	84 c0                	test   %al,%al
    5a42:	88 c1                	mov    %al,%cl
    5a44:	75 2d                	jne    5a73 <WriteSectorsMMCSD+0x153>
    5a46:	8d 76 00             	lea    0x0(%esi),%esi
    5a49:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    5a50:	8b 44 24 38          	mov    0x38(%esp),%eax
    5a54:	66 0f b6 10          	movzbw (%eax),%dx
    5a58:	0f b7 07             	movzwl (%edi),%eax
    5a5b:	66 39 d0             	cmp    %dx,%ax
    5a5e:	76 1e                	jbe    5a7e <WriteSectorsMMCSD+0x15e>
    5a60:	29 d0                	sub    %edx,%eax
    5a62:	66 89 07             	mov    %ax,(%edi)
    5a65:	8b 44 24 38          	mov    0x38(%esp),%eax
    5a69:	c6 00 00             	movb   $0x0,(%eax)
    5a6c:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
    5a73:	0f b6 c1             	movzbl %cl,%eax
    5a76:	83 c4 18             	add    $0x18,%esp
    5a79:	5b                   	pop    %ebx
    5a7a:	5e                   	pop    %esi
    5a7b:	5f                   	pop    %edi
    5a7c:	5d                   	pop    %ebp
    5a7d:	c3                   	ret    
    5a7e:	89 1c 24             	mov    %ebx,(%esp)
    5a81:	e8 7a e1 ff ff       	call   3c00 <WaitForBRSMMCSD>
    5a86:	84 c0                	test   %al,%al
    5a88:	88 c1                	mov    %al,%cl
    5a8a:	75 e7                	jne    5a73 <WriteSectorsMMCSD+0x153>
    5a8c:	66 83 3f 01          	cmpw   $0x1,(%edi)
    5a90:	74 38                	je     5aca <WriteSectorsMMCSD+0x1aa>
    5a92:	89 1c 24             	mov    %ebx,(%esp)
    5a95:	b8 00 29 00 00       	mov    $0x2900,%eax
    5a9a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    5a9e:	31 c0                	xor    %eax,%eax
    5aa0:	89 44 24 08          	mov    %eax,0x8(%esp)
    5aa4:	b8 0c 00 00 00       	mov    $0xc,%eax
    5aa9:	89 44 24 04          	mov    %eax,0x4(%esp)
    5aad:	e8 3e e3 ff ff       	call   3df0 <CmdMMCSD>
    5ab2:	84 c0                	test   %al,%al
    5ab4:	88 c1                	mov    %al,%cl
    5ab6:	75 bb                	jne    5a73 <WriteSectorsMMCSD+0x153>
    5ab8:	8b 54 24 38          	mov    0x38(%esp),%edx
    5abc:	0f b6 02             	movzbl (%edx),%eax
    5abf:	2a 07                	sub    (%edi),%al
    5ac1:	88 02                	mov    %al,(%edx)
    5ac3:	66 c7 07 00 00       	movw   $0x0,(%edi)
    5ac8:	eb a2                	jmp    5a6c <WriteSectorsMMCSD+0x14c>
    5aca:	45                   	inc    %ebp
    5acb:	75 eb                	jne    5ab8 <WriteSectorsMMCSD+0x198>
    5acd:	eb c3                	jmp    5a92 <WriteSectorsMMCSD+0x172>
    5acf:	8b 54 24 10          	mov    0x10(%esp),%edx
    5ad3:	b8 00 31 00 00       	mov    $0x3100,%eax
    5ad8:	be 18 00 00 00       	mov    $0x18,%esi
    5add:	89 44 24 0c          	mov    %eax,0xc(%esp)
    5ae1:	89 74 24 04          	mov    %esi,0x4(%esp)
    5ae5:	89 54 24 08          	mov    %edx,0x8(%esp)
    5ae9:	e9 4a ff ff ff       	jmp    5a38 <WriteSectorsMMCSD+0x118>
    5aee:	0f b7 07             	movzwl (%edi),%eax
    5af1:	89 1c 24             	mov    %ebx,(%esp)
    5af4:	89 44 24 04          	mov    %eax,0x4(%esp)
    5af8:	e8 23 fd ff ff       	call   5820 <SD_EraseBlocksMMCSD>
    5afd:	e9 d7 fe ff ff       	jmp    59d9 <WriteSectorsMMCSD+0xb9>
    5b02:	84 c0                	test   %al,%al
    5b04:	0f 84 bf fe ff ff    	je     59c9 <WriteSectorsMMCSD+0xa9>
    5b0a:	e9 a8 fe ff ff       	jmp    59b7 <WriteSectorsMMCSD+0x97>
    5b0f:	b8 82 00 00 00       	mov    $0x82,%eax
    5b14:	e9 5d ff ff ff       	jmp    5a76 <WriteSectorsMMCSD+0x156>
    5b19:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00005b20 <ReadSectorsMMCSD>:
    5b20:	55                   	push   %ebp
    5b21:	31 c9                	xor    %ecx,%ecx
    5b23:	57                   	push   %edi
    5b24:	56                   	push   %esi
    5b25:	53                   	push   %ebx
    5b26:	83 ec 18             	sub    $0x18,%esp
    5b29:	8b 5c 24 2c          	mov    0x2c(%esp),%ebx
    5b2d:	8b 6c 24 30          	mov    0x30(%esp),%ebp
    5b31:	8b 7c 24 34          	mov    0x34(%esp),%edi
    5b35:	83 fd ff             	cmp    $0xffffffff,%ebp
    5b38:	0f 84 02 01 00 00    	je     5c40 <ReadSectorsMMCSD+0x120>
    5b3e:	3b 2b                	cmp    (%ebx),%ebp
    5b40:	0f 83 b2 01 00 00    	jae    5cf8 <ReadSectorsMMCSD+0x1d8>
    5b46:	0f b7 17             	movzwl (%edi),%edx
    5b49:	31 c0                	xor    %eax,%eax
    5b4b:	66 85 d2             	test   %dx,%dx
    5b4e:	0f 84 0b 01 00 00    	je     5c5f <ReadSectorsMMCSD+0x13f>
    5b54:	66 81 fa 00 08       	cmp    $0x800,%dx
    5b59:	b8 2b 00 00 00       	mov    $0x2b,%eax
    5b5e:	0f 87 fb 00 00 00    	ja     5c5f <ReadSectorsMMCSD+0x13f>
    5b64:	0f b6 4b 04          	movzbl 0x4(%ebx),%ecx
    5b68:	89 e8                	mov    %ebp,%eax
    5b6a:	66 c7 44 24 16 00 00 	movw   $0x0,0x16(%esp)
    5b71:	8d 74 24 15          	lea    0x15(%esp),%esi
    5b75:	d3 e0                	shl    %cl,%eax
    5b77:	89 44 24 10          	mov    %eax,0x10(%esp)
    5b7b:	90                   	nop    
    5b7c:	8d 74 26 00          	lea    0x0(%esi),%esi
    5b80:	89 74 24 04          	mov    %esi,0x4(%esp)
    5b84:	31 c0                	xor    %eax,%eax
    5b86:	89 44 24 08          	mov    %eax,0x8(%esp)
    5b8a:	89 1c 24             	mov    %ebx,(%esp)
    5b8d:	e8 ae ef ff ff       	call   4b40 <GetCardStateMMCSD>
    5b92:	80 7c 24 15 04       	cmpb   $0x4,0x15(%esp)
    5b97:	88 c1                	mov    %al,%cl
    5b99:	0f 84 4c 01 00 00    	je     5ceb <ReadSectorsMMCSD+0x1cb>
    5b9f:	0f b7 54 24 16       	movzwl 0x16(%esp),%edx
    5ba4:	8d 42 01             	lea    0x1(%edx),%eax
    5ba7:	66 81 fa f3 01       	cmp    $0x1f3,%dx
    5bac:	66 89 44 24 16       	mov    %ax,0x16(%esp)
    5bb1:	77 04                	ja     5bb7 <ReadSectorsMMCSD+0x97>
    5bb3:	84 c9                	test   %cl,%cl
    5bb5:	74 c9                	je     5b80 <ReadSectorsMMCSD+0x60>
    5bb7:	89 1c 24             	mov    %ebx,(%esp)
    5bba:	e8 fc ff ff ff       	call   5bbb <ReadSectorsMMCSD+0x9b>
			5bbb: R_386_PC32	InitializeCardMMCSD
    5bbf:	84 c0                	test   %al,%al
    5bc1:	88 c1                	mov    %al,%cl
    5bc3:	0f 85 93 00 00 00    	jne    5c5c <ReadSectorsMMCSD+0x13c>
    5bc9:	0f b7 07             	movzwl (%edi),%eax
    5bcc:	89 1c 24             	mov    %ebx,(%esp)
    5bcf:	48                   	dec    %eax
    5bd0:	89 44 24 04          	mov    %eax,0x4(%esp)
    5bd4:	e8 fc ff ff ff       	call   5bd5 <ReadSectorsMMCSD+0xb5>
			5bd5: R_386_PC32	MMCSD_NUMBER_OF_BLOCKS2
    5bd9:	0f b7 43 06          	movzwl 0x6(%ebx),%eax
    5bdd:	89 1c 24             	mov    %ebx,(%esp)
    5be0:	48                   	dec    %eax
    5be1:	89 44 24 04          	mov    %eax,0x4(%esp)
    5be5:	e8 fc ff ff ff       	call   5be6 <ReadSectorsMMCSD+0xc6>
			5be6: R_386_PC32	MMCSD_BLOCK_LENGTH2
    5bea:	89 1c 24             	mov    %ebx,(%esp)
    5bed:	b8 00 80 00 00       	mov    $0x8000,%eax
    5bf2:	89 44 24 04          	mov    %eax,0x4(%esp)
    5bf6:	e8 fc ff ff ff       	call   5bf7 <ReadSectorsMMCSD+0xd7>
			5bf7: R_386_PC32	MMCSD_BUFFER_CONFIG2
    5bfb:	8b 43 1c             	mov    0x1c(%ebx),%eax
    5bfe:	83 e0 f7             	and    $0xfffffff7,%eax
    5c01:	89 43 1c             	mov    %eax,0x1c(%ebx)
    5c04:	66 83 3f 01          	cmpw   $0x1,(%edi)
    5c08:	0f 84 be 00 00 00    	je     5ccc <ReadSectorsMMCSD+0x1ac>
    5c0e:	8b 44 24 10          	mov    0x10(%esp),%eax
    5c12:	b9 00 b1 00 00       	mov    $0xb100,%ecx
    5c17:	ba 12 00 00 00       	mov    $0x12,%edx
    5c1c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    5c20:	89 54 24 04          	mov    %edx,0x4(%esp)
    5c24:	89 44 24 08          	mov    %eax,0x8(%esp)
    5c28:	89 1c 24             	mov    %ebx,(%esp)
    5c2b:	e8 c0 e1 ff ff       	call   3df0 <CmdMMCSD>
    5c30:	84 c0                	test   %al,%al
    5c32:	88 c1                	mov    %al,%cl
    5c34:	75 26                	jne    5c5c <ReadSectorsMMCSD+0x13c>
    5c36:	8d 76 00             	lea    0x0(%esi),%esi
    5c39:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    5c40:	8b 44 24 38          	mov    0x38(%esp),%eax
    5c44:	66 0f b6 10          	movzbw (%eax),%dx
    5c48:	0f b7 07             	movzwl (%edi),%eax
    5c4b:	66 39 d0             	cmp    %dx,%ax
    5c4e:	76 17                	jbe    5c67 <ReadSectorsMMCSD+0x147>
    5c50:	29 d0                	sub    %edx,%eax
    5c52:	66 89 07             	mov    %ax,(%edi)
    5c55:	8b 44 24 38          	mov    0x38(%esp),%eax
    5c59:	c6 00 00             	movb   $0x0,(%eax)
    5c5c:	0f b6 c1             	movzbl %cl,%eax
    5c5f:	83 c4 18             	add    $0x18,%esp
    5c62:	5b                   	pop    %ebx
    5c63:	5e                   	pop    %esi
    5c64:	5f                   	pop    %edi
    5c65:	5d                   	pop    %ebp
    5c66:	c3                   	ret    
    5c67:	89 1c 24             	mov    %ebx,(%esp)
    5c6a:	e8 91 df ff ff       	call   3c00 <WaitForBRSMMCSD>
    5c6f:	84 c0                	test   %al,%al
    5c71:	88 c1                	mov    %al,%cl
    5c73:	75 e7                	jne    5c5c <ReadSectorsMMCSD+0x13c>
    5c75:	66 83 3f 01          	cmpw   $0x1,(%edi)
    5c79:	74 4c                	je     5cc7 <ReadSectorsMMCSD+0x1a7>
    5c7b:	89 1c 24             	mov    %ebx,(%esp)
    5c7e:	b8 00 29 00 00       	mov    $0x2900,%eax
    5c83:	89 44 24 0c          	mov    %eax,0xc(%esp)
    5c87:	31 c0                	xor    %eax,%eax
    5c89:	89 44 24 08          	mov    %eax,0x8(%esp)
    5c8d:	b8 0c 00 00 00       	mov    $0xc,%eax
    5c92:	89 44 24 04          	mov    %eax,0x4(%esp)
    5c96:	e8 55 e1 ff ff       	call   3df0 <CmdMMCSD>
    5c9b:	84 c0                	test   %al,%al
    5c9d:	88 c1                	mov    %al,%cl
    5c9f:	74 14                	je     5cb5 <ReadSectorsMMCSD+0x195>
    5ca1:	80 f9 86             	cmp    $0x86,%cl
    5ca4:	b8 86 00 00 00       	mov    $0x86,%eax
    5ca9:	74 b4                	je     5c5f <ReadSectorsMMCSD+0x13f>
    5cab:	89 1c 24             	mov    %ebx,(%esp)
    5cae:	e8 fc ff ff ff       	call   5caf <ReadSectorsMMCSD+0x18f>
			5caf: R_386_PC32	InitializeCardMMCSD
    5cb3:	88 c1                	mov    %al,%cl
    5cb5:	8b 54 24 38          	mov    0x38(%esp),%edx
    5cb9:	0f b6 02             	movzbl (%edx),%eax
    5cbc:	2a 07                	sub    (%edi),%al
    5cbe:	88 02                	mov    %al,(%edx)
    5cc0:	66 c7 07 00 00       	movw   $0x0,(%edi)
    5cc5:	eb 95                	jmp    5c5c <ReadSectorsMMCSD+0x13c>
    5cc7:	45                   	inc    %ebp
    5cc8:	75 eb                	jne    5cb5 <ReadSectorsMMCSD+0x195>
    5cca:	eb af                	jmp    5c7b <ReadSectorsMMCSD+0x15b>
    5ccc:	8b 54 24 10          	mov    0x10(%esp),%edx
    5cd0:	b8 00 b1 00 00       	mov    $0xb100,%eax
    5cd5:	be 11 00 00 00       	mov    $0x11,%esi
    5cda:	89 44 24 0c          	mov    %eax,0xc(%esp)
    5cde:	89 74 24 04          	mov    %esi,0x4(%esp)
    5ce2:	89 54 24 08          	mov    %edx,0x8(%esp)
    5ce6:	e9 3d ff ff ff       	jmp    5c28 <ReadSectorsMMCSD+0x108>
    5ceb:	84 c0                	test   %al,%al
    5ced:	0f 84 d6 fe ff ff    	je     5bc9 <ReadSectorsMMCSD+0xa9>
    5cf3:	e9 bf fe ff ff       	jmp    5bb7 <ReadSectorsMMCSD+0x97>
    5cf8:	b8 82 00 00 00       	mov    $0x82,%eax
    5cfd:	e9 5d ff ff ff       	jmp    5c5f <ReadSectorsMMCSD+0x13f>
    5d02:	90                   	nop    
    5d03:	90                   	nop    
    5d04:	90                   	nop    
    5d05:	90                   	nop    
    5d06:	90                   	nop    
    5d07:	90                   	nop    
    5d08:	90                   	nop    
    5d09:	90                   	nop    
    5d0a:	90                   	nop    
    5d0b:	90                   	nop    
    5d0c:	90                   	nop    
    5d0d:	90                   	nop    
    5d0e:	90                   	nop    
    5d0f:	90                   	nop    

00005d10 <PhyBlockUsedMS1>:
    5d10:	53                   	push   %ebx
    5d11:	0f b7 4c 24 0c       	movzwl 0xc(%esp),%ecx
    5d16:	b8 01 00 00 00       	mov    $0x1,%eax
    5d1b:	66 81 f9 ff 1f       	cmp    $0x1fff,%cx
    5d20:	77 20                	ja     5d42 <PhyBlockUsedMS1+0x32>
    5d22:	8b 44 24 08          	mov    0x8(%esp),%eax
    5d26:	89 cb                	mov    %ecx,%ebx
    5d28:	ba 01 00 00 00       	mov    $0x1,%edx
    5d2d:	c1 eb 03             	shr    $0x3,%ebx
    5d30:	83 e1 07             	and    $0x7,%ecx
    5d33:	d3 e2                	shl    %cl,%edx
    5d35:	0f b6 84 18 62 40 00 	movzbl 0x4062(%eax,%ebx,1),%eax
    5d3c:	00 
    5d3d:	20 d0                	and    %dl,%al
    5d3f:	0f be c0             	movsbl %al,%eax
    5d42:	5b                   	pop    %ebx
    5d43:	c3                   	ret    
    5d44:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5d4a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00005d50 <PhyBlockUsedMS2>:
    5d50:	53                   	push   %ebx
    5d51:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    5d55:	0f b7 4c 24 0c       	movzwl 0xc(%esp),%ecx
    5d5a:	0f b6 44 24 10       	movzbl 0x10(%esp),%eax
    5d5f:	66 81 f9 ff 1f       	cmp    $0x1fff,%cx
    5d64:	77 1a                	ja     5d80 <PhyBlockUsedMS2+0x30>
    5d66:	84 c0                	test   %al,%al
    5d68:	74 18                	je     5d82 <PhyBlockUsedMS2+0x32>
    5d6a:	89 ca                	mov    %ecx,%edx
    5d6c:	b8 01 00 00 00       	mov    $0x1,%eax
    5d71:	83 e1 07             	and    $0x7,%ecx
    5d74:	c1 ea 03             	shr    $0x3,%edx
    5d77:	d3 e0                	shl    %cl,%eax
    5d79:	08 84 13 62 40 00 00 	or     %al,0x4062(%ebx,%edx,1)
    5d80:	5b                   	pop    %ebx
    5d81:	c3                   	ret    
    5d82:	89 c8                	mov    %ecx,%eax
    5d84:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    5d89:	83 e1 07             	and    $0x7,%ecx
    5d8c:	c1 e8 03             	shr    $0x3,%eax
    5d8f:	d3 c2                	rol    %cl,%edx
    5d91:	20 94 03 62 40 00 00 	and    %dl,0x4062(%ebx,%eax,1)
    5d98:	eb e6                	jmp    5d80 <PhyBlockUsedMS2+0x30>
    5d9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00005da0 <LUTSetPhyBlockMS>:
    5da0:	0f b7 54 24 08       	movzwl 0x8(%esp),%edx
    5da5:	0f b7 4c 24 0c       	movzwl 0xc(%esp),%ecx
    5daa:	66 81 fa ff 1f       	cmp    $0x1fff,%dx
    5daf:	77 09                	ja     5dba <LUTSetPhyBlockMS+0x1a>
    5db1:	8b 44 24 04          	mov    0x4(%esp),%eax
    5db5:	66 89 4c 50 62       	mov    %cx,0x62(%eax,%edx,2)
    5dba:	c3                   	ret    
    5dbb:	90                   	nop    
    5dbc:	8d 74 26 00          	lea    0x0(%esi),%esi

00005dc0 <LUTGetPhyBlockMS>:
    5dc0:	0f b7 54 24 08       	movzwl 0x8(%esp),%edx
    5dc5:	b8 ff ff 00 00       	mov    $0xffff,%eax
    5dca:	66 81 fa ff 1f       	cmp    $0x1fff,%dx
    5dcf:	77 09                	ja     5dda <LUTGetPhyBlockMS+0x1a>
    5dd1:	8b 44 24 04          	mov    0x4(%esp),%eax
    5dd5:	0f b7 44 50 62       	movzwl 0x62(%eax,%edx,2),%eax
    5dda:	c3                   	ret    
    5ddb:	90                   	nop    
    5ddc:	8d 74 26 00          	lea    0x0(%esi),%esi

00005de0 <CMSTICK_destroy>:
    5de0:	83 ec 0c             	sub    $0xc,%esp
    5de3:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    5de7:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    5deb:	85 db                	test   %ebx,%ebx
    5ded:	74 43                	je     5e32 <CMSTICK_destroy+0x52>
    5def:	89 1c 24             	mov    %ebx,(%esp)
    5df2:	ba 00 0a 00 00       	mov    $0xa00,%edx
    5df7:	89 54 24 04          	mov    %edx,0x4(%esp)
    5dfb:	e8 fc ff ff ff       	call   5dfc <CMSTICK_destroy+0x1c>
			5dfc: R_386_PC32	MS_SYSTEM2
    5e00:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    5e06:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5e0b:	89 44 24 04          	mov    %eax,0x4(%esp)
    5e0f:	89 1c 24             	mov    %ebx,(%esp)
    5e12:	e8 fc ff ff ff       	call   5e13 <CMSTICK_destroy+0x33>
			5e13: R_386_PC32	MS_STATUS_CLEAR
    5e17:	8b 43 3c             	mov    0x3c(%ebx),%eax
    5e1a:	89 04 24             	mov    %eax,(%esp)
    5e1d:	e8 fc ff ff ff       	call   5e1e <CMSTICK_destroy+0x3e>
			5e1e: R_386_PC32	CFlash_destroy
    5e22:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    5e26:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    5e2a:	83 c4 0c             	add    $0xc,%esp
    5e2d:	e9 fc ff ff ff       	jmp    5e2e <CMSTICK_destroy+0x4e>
			5e2e: R_386_PC32	kfree
    5e32:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    5e36:	83 c4 0c             	add    $0xc,%esp
    5e39:	c3                   	ret    
    5e3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00005e40 <CMS_destroy>:
    5e40:	83 ec 08             	sub    $0x8,%esp
    5e43:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    5e47:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    5e4b:	85 db                	test   %ebx,%ebx
    5e4d:	74 21                	je     5e70 <CMS_destroy+0x30>
    5e4f:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    5e55:	89 04 24             	mov    %eax,(%esp)
    5e58:	e8 fc ff ff ff       	call   5e59 <CMS_destroy+0x19>
			5e59: R_386_PC32	CMSTICK_destroy
    5e5d:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    5e61:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    5e65:	83 c4 08             	add    $0x8,%esp
    5e68:	e9 fc ff ff ff       	jmp    5e69 <CMS_destroy+0x29>
			5e69: R_386_PC32	kfree
    5e6d:	8d 76 00             	lea    0x0(%esi),%esi
    5e70:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    5e74:	83 c4 08             	add    $0x8,%esp
    5e77:	c3                   	ret    
    5e78:	90                   	nop    
    5e79:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00005e80 <CMSPRO_destroy>:
    5e80:	83 ec 08             	sub    $0x8,%esp
    5e83:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    5e87:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    5e8b:	85 db                	test   %ebx,%ebx
    5e8d:	74 21                	je     5eb0 <CMSPRO_destroy+0x30>
    5e8f:	8b 43 04             	mov    0x4(%ebx),%eax
    5e92:	89 04 24             	mov    %eax,(%esp)
    5e95:	e8 fc ff ff ff       	call   5e96 <CMSPRO_destroy+0x16>
			5e96: R_386_PC32	CMSTICK_destroy
    5e9a:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    5e9e:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    5ea2:	83 c4 08             	add    $0x8,%esp
    5ea5:	e9 fc ff ff ff       	jmp    5ea6 <CMSPRO_destroy+0x26>
			5ea6: R_386_PC32	kfree
    5eaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5eb0:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    5eb4:	83 c4 08             	add    $0x8,%esp
    5eb7:	c3                   	ret    
    5eb8:	90                   	nop    
    5eb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00005ec0 <CMSTICK_init>:
    5ec0:	57                   	push   %edi
    5ec1:	56                   	push   %esi
    5ec2:	53                   	push   %ebx
    5ec3:	83 ec 18             	sub    $0x18,%esp
    5ec6:	8b 74 24 2c          	mov    0x2c(%esp),%esi
    5eca:	b8 20 00 00 00       	mov    $0x20,%eax
    5ecf:	89 44 24 04          	mov    %eax,0x4(%esp)
    5ed3:	a1 1c 00 00 00       	mov    0x1c,%eax
			5ed4: R_386_32	malloc_sizes
    5ed8:	89 04 24             	mov    %eax,(%esp)
    5edb:	e8 fc ff ff ff       	call   5edc <CMSTICK_init+0x1c>
			5edc: R_386_PC32	kmem_cache_alloc
    5ee0:	89 c3                	mov    %eax,%ebx
    5ee2:	31 c0                	xor    %eax,%eax
    5ee4:	85 db                	test   %ebx,%ebx
    5ee6:	0f 84 8c 00 00 00    	je     5f78 <CMSTICK_init+0xb8>
    5eec:	b9 11 00 00 00       	mov    $0x11,%ecx
    5ef1:	89 df                	mov    %ebx,%edi
    5ef3:	f3 ab                	repz stos %eax,%es:(%edi)
    5ef5:	8b 44 24 28          	mov    0x28(%esp),%eax
    5ef9:	89 04 24             	mov    %eax,(%esp)
    5efc:	e8 fc ff ff ff       	call   5efd <CMSTICK_init+0x3d>
			5efd: R_386_PC32	CFlash_init
    5f01:	89 43 3c             	mov    %eax,0x3c(%ebx)
    5f04:	85 c0                	test   %eax,%eax
    5f06:	74 77                	je     5f7f <CMSTICK_init+0xbf>
    5f08:	8d 43 04             	lea    0x4(%ebx),%eax
    5f0b:	bf 00 80 00 00       	mov    $0x8000,%edi
    5f10:	89 40 04             	mov    %eax,0x4(%eax)
    5f13:	89 43 04             	mov    %eax,0x4(%ebx)
    5f16:	8b 43 3c             	mov    0x3c(%ebx),%eax
    5f19:	8b 40 28             	mov    0x28(%eax),%eax
    5f1c:	c6 40 04 02          	movb   $0x2,0x4(%eax)
    5f20:	89 f0                	mov    %esi,%eax
    5f22:	be 00 0a 00 00       	mov    $0xa00,%esi
    5f27:	88 43 0c             	mov    %al,0xc(%ebx)
    5f2a:	c7 43 30 10 40 00 00 	movl   $0x4010,0x30(%ebx)
    5f31:	c6 43 0e 00          	movb   $0x0,0xe(%ebx)
    5f35:	c6 43 0d 00          	movb   $0x0,0xd(%ebx)
    5f39:	c7 43 34 00 00 00 00 	movl   $0x0,0x34(%ebx)
    5f40:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%ebx)
    5f47:	89 7c 24 04          	mov    %edi,0x4(%esp)
    5f4b:	89 1c 24             	mov    %ebx,(%esp)
    5f4e:	e8 fc ff ff ff       	call   5f4f <CMSTICK_init+0x8f>
			5f4f: R_386_PC32	MS_SYSTEM2
    5f53:	89 74 24 04          	mov    %esi,0x4(%esp)
    5f57:	89 1c 24             	mov    %ebx,(%esp)
    5f5a:	e8 fc ff ff ff       	call   5f5b <CMSTICK_init+0x9b>
			5f5b: R_386_PC32	MS_SYSTEM2
    5f5f:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    5f65:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    5f6a:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    5f6e:	89 1c 24             	mov    %ebx,(%esp)
    5f71:	e8 fc ff ff ff       	call   5f72 <CMSTICK_init+0xb2>
			5f72: R_386_PC32	MS_STATUS_CLEAR
    5f76:	89 d8                	mov    %ebx,%eax
    5f78:	83 c4 18             	add    $0x18,%esp
    5f7b:	5b                   	pop    %ebx
    5f7c:	5e                   	pop    %esi
    5f7d:	5f                   	pop    %edi
    5f7e:	c3                   	ret    
    5f7f:	89 1c 24             	mov    %ebx,(%esp)
    5f82:	e8 fc ff ff ff       	call   5f83 <CMSTICK_init+0xc3>
			5f83: R_386_PC32	kfree
    5f87:	31 c0                	xor    %eax,%eax
    5f89:	eb ed                	jmp    5f78 <CMSTICK_init+0xb8>
    5f8b:	90                   	nop    
    5f8c:	8d 74 26 00          	lea    0x0(%esi),%esi

00005f90 <CMS_init>:
    5f90:	83 ec 14             	sub    $0x14,%esp
    5f93:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    5f97:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    5f9b:	89 74 24 0c          	mov    %esi,0xc(%esp)
    5f9f:	31 f6                	xor    %esi,%esi
    5fa1:	89 7c 24 10          	mov    %edi,0x10(%esp)
    5fa5:	b8 ff 00 00 00       	mov    $0xff,%eax
    5faa:	85 db                	test   %ebx,%ebx
    5fac:	74 37                	je     5fe5 <CMS_init+0x55>
    5fae:	b8 20 00 00 00       	mov    $0x20,%eax
    5fb3:	89 44 24 04          	mov    %eax,0x4(%esp)
    5fb7:	a1 7c 00 00 00       	mov    0x7c,%eax
			5fb8: R_386_32	malloc_sizes
    5fbc:	89 04 24             	mov    %eax,(%esp)
    5fbf:	e8 fc ff ff ff       	call   5fc0 <CMS_init+0x30>
			5fc0: R_386_PC32	kmem_cache_alloc
    5fc4:	89 c2                	mov    %eax,%edx
    5fc6:	85 d2                	test   %edx,%edx
    5fc8:	b8 ff 00 00 00       	mov    $0xff,%eax
    5fcd:	74 16                	je     5fe5 <CMS_init+0x55>
    5fcf:	b9 1a 11 00 00       	mov    $0x111a,%ecx
    5fd4:	89 d7                	mov    %edx,%edi
    5fd6:	89 f0                	mov    %esi,%eax
    5fd8:	f3 ab                	repz stos %eax,%es:(%edi)
    5fda:	80 7b 05 02          	cmpb   $0x2,0x5(%ebx)
    5fde:	74 15                	je     5ff5 <CMS_init+0x65>
    5fe0:	b8 ff 00 00 00       	mov    $0xff,%eax
    5fe5:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    5fe9:	8b 74 24 0c          	mov    0xc(%esp),%esi
    5fed:	8b 7c 24 10          	mov    0x10(%esp),%edi
    5ff1:	83 c4 14             	add    $0x14,%esp
    5ff4:	c3                   	ret    
    5ff5:	8b 33                	mov    (%ebx),%esi
    5ff7:	85 f6                	test   %esi,%esi
    5ff9:	74 e5                	je     5fe0 <CMS_init+0x50>
    5ffb:	89 b2 64 44 00 00    	mov    %esi,0x4464(%edx)
    6001:	c6 42 60 00          	movb   $0x0,0x60(%edx)
    6005:	66 c7 42 0a ff ff    	movw   $0xffff,0xa(%edx)
    600b:	66 c7 42 0c ff ff    	movw   $0xffff,0xc(%edx)
    6011:	66 c7 42 2e ff ff    	movw   $0xffff,0x2e(%edx)
    6017:	8b 46 3c             	mov    0x3c(%esi),%eax
    601a:	8b 40 28             	mov    0x28(%eax),%eax
    601d:	c6 40 04 12          	movb   $0x12,0x4(%eax)
    6021:	8b 82 64 44 00 00    	mov    0x4464(%edx),%eax
    6027:	8b 40 3c             	mov    0x3c(%eax),%eax
    602a:	8b 40 28             	mov    0x28(%eax),%eax
    602d:	c6 40 05 12          	movb   $0x12,0x5(%eax)
    6031:	66 c7 42 30 00 00    	movw   $0x0,0x30(%edx)
    6037:	66 c7 42 32 00 00    	movw   $0x0,0x32(%edx)
    603d:	66 c7 42 34 ff ff    	movw   $0xffff,0x34(%edx)
    6043:	66 c7 42 36 ff ff    	movw   $0xffff,0x36(%edx)
    6049:	66 c7 42 58 00 00    	movw   $0x0,0x58(%edx)
    604f:	66 c7 42 5a 01 00    	movw   $0x1,0x5a(%edx)
    6055:	66 c7 42 5c 00 00    	movw   $0x0,0x5c(%edx)
    605b:	66 c7 42 5e 00 00    	movw   $0x0,0x5e(%edx)
    6061:	89 13                	mov    %edx,(%ebx)
    6063:	31 c0                	xor    %eax,%eax
    6065:	c6 43 05 12          	movb   $0x12,0x5(%ebx)
    6069:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
    606d:	e9 73 ff ff ff       	jmp    5fe5 <CMS_init+0x55>
    6072:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    6079:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00006080 <CMSPro_init>:
    6080:	83 ec 14             	sub    $0x14,%esp
    6083:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    6087:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    608b:	89 74 24 0c          	mov    %esi,0xc(%esp)
    608f:	31 f6                	xor    %esi,%esi
    6091:	89 7c 24 10          	mov    %edi,0x10(%esp)
    6095:	b8 ff 00 00 00       	mov    $0xff,%eax
    609a:	85 db                	test   %ebx,%ebx
    609c:	74 37                	je     60d5 <CMSPro_init+0x55>
    609e:	b8 20 00 00 00       	mov    $0x20,%eax
    60a3:	89 44 24 04          	mov    %eax,0x4(%esp)
    60a7:	a1 04 00 00 00       	mov    0x4,%eax
			60a8: R_386_32	malloc_sizes
    60ac:	89 04 24             	mov    %eax,(%esp)
    60af:	e8 fc ff ff ff       	call   60b0 <CMSPro_init+0x30>
			60b0: R_386_PC32	kmem_cache_alloc
    60b4:	89 c2                	mov    %eax,%edx
    60b6:	85 d2                	test   %edx,%edx
    60b8:	b8 ff 00 00 00       	mov    $0xff,%eax
    60bd:	74 16                	je     60d5 <CMSPro_init+0x55>
    60bf:	b9 02 00 00 00       	mov    $0x2,%ecx
    60c4:	89 d7                	mov    %edx,%edi
    60c6:	89 f0                	mov    %esi,%eax
    60c8:	f3 ab                	repz stos %eax,%es:(%edi)
    60ca:	80 7b 05 02          	cmpb   $0x2,0x5(%ebx)
    60ce:	74 15                	je     60e5 <CMSPro_init+0x65>
    60d0:	b8 ff 00 00 00       	mov    $0xff,%eax
    60d5:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    60d9:	8b 74 24 0c          	mov    0xc(%esp),%esi
    60dd:	8b 7c 24 10          	mov    0x10(%esp),%edi
    60e1:	83 c4 14             	add    $0x14,%esp
    60e4:	c3                   	ret    
    60e5:	8b 33                	mov    (%ebx),%esi
    60e7:	85 f6                	test   %esi,%esi
    60e9:	74 e5                	je     60d0 <CMSPro_init+0x50>
    60eb:	89 72 04             	mov    %esi,0x4(%edx)
    60ee:	8b 46 3c             	mov    0x3c(%esi),%eax
    60f1:	8b 40 28             	mov    0x28(%eax),%eax
    60f4:	c6 40 04 22          	movb   $0x22,0x4(%eax)
    60f8:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    60fe:	89 13                	mov    %edx,(%ebx)
    6100:	31 c0                	xor    %eax,%eax
    6102:	c6 43 05 22          	movb   $0x22,0x5(%ebx)
    6106:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
    610a:	eb c9                	jmp    60d5 <CMSPro_init+0x55>
    610c:	8d 74 26 00          	lea    0x0(%esi),%esi

00006110 <DPCMemoryStick>:
    6110:	83 ec 0c             	sub    $0xc,%esp
    6113:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    6117:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    611b:	89 74 24 08          	mov    %esi,0x8(%esp)
    611f:	31 c0                	xor    %eax,%eax
    6121:	85 db                	test   %ebx,%ebx
    6123:	74 18                	je     613d <DPCMemoryStick+0x2d>
    6125:	8b 43 3c             	mov    0x3c(%ebx),%eax
    6128:	89 04 24             	mov    %eax,(%esp)
    612b:	e8 fc ff ff ff       	call   612c <DPCMemoryStick+0x1c>
			612c: R_386_PC32	DPCFlash
    6130:	89 c6                	mov    %eax,%esi
    6132:	8b 43 3c             	mov    0x3c(%ebx),%eax
    6135:	80 78 02 00          	cmpb   $0x0,0x2(%eax)
    6139:	75 15                	jne    6150 <DPCMemoryStick+0x40>
    613b:	89 f0                	mov    %esi,%eax
    613d:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    6141:	8b 74 24 08          	mov    0x8(%esp),%esi
    6145:	83 c4 0c             	add    $0xc,%esp
    6148:	c3                   	ret    
    6149:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    6150:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    6157:	8d 43 04             	lea    0x4(%ebx),%eax
    615a:	b9 01 00 00 00       	mov    $0x1,%ecx
    615f:	ba 01 00 00 00       	mov    $0x1,%edx
    6164:	e8 fc ff ff ff       	call   6165 <DPCMemoryStick+0x55>
			6165: R_386_PC32	__wake_up
    6169:	8b 43 3c             	mov    0x3c(%ebx),%eax
    616c:	c6 40 02 00          	movb   $0x0,0x2(%eax)
    6170:	eb c9                	jmp    613b <DPCMemoryStick+0x2b>
    6172:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    6179:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00006180 <InterruptMemoryStick>:
    6180:	83 ec 18             	sub    $0x18,%esp
    6183:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    6187:	0f b6 5c 24 24       	movzbl 0x24(%esp),%ebx
    618c:	89 74 24 14          	mov    %esi,0x14(%esp)
    6190:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    6194:	0f b6 c3             	movzbl %bl,%eax
    6197:	89 44 24 08          	mov    %eax,0x8(%esp)
    619b:	0f b6 44 24 20       	movzbl 0x20(%esp),%eax
    61a0:	89 44 24 04          	mov    %eax,0x4(%esp)
    61a4:	8b 46 3c             	mov    0x3c(%esi),%eax
    61a7:	89 04 24             	mov    %eax,(%esp)
    61aa:	e8 fc ff ff ff       	call   61ab <InterruptMemoryStick+0x2b>
			61ab: R_386_PC32	InterruptFlash
    61af:	88 44 24 0f          	mov    %al,0xf(%esp)
    61b3:	84 db                	test   %bl,%bl
    61b5:	75 19                	jne    61d0 <InterruptMemoryStick+0x50>
    61b7:	0a 5c 24 0f          	or     0xf(%esp),%bl
    61bb:	8b 74 24 14          	mov    0x14(%esp),%esi
    61bf:	0f b6 c3             	movzbl %bl,%eax
    61c2:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    61c6:	83 c4 18             	add    $0x18,%esp
    61c9:	c3                   	ret    
    61ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    61d0:	89 34 24             	mov    %esi,(%esp)
    61d3:	e8 fc ff ff ff       	call   61d4 <InterruptMemoryStick+0x54>
			61d4: R_386_PC32	MS_STATUS
    61d8:	8b 16                	mov    (%esi),%edx
    61da:	09 c2                	or     %eax,%edx
    61dc:	89 16                	mov    %edx,(%esi)
    61de:	89 34 24             	mov    %esi,(%esp)
    61e1:	e8 fc ff ff ff       	call   61e2 <InterruptMemoryStick+0x62>
			61e2: R_386_PC32	MS_SYSTEM1
    61e6:	89 34 24             	mov    %esi,(%esp)
    61e9:	0d 00 08 00 00       	or     $0x800,%eax
    61ee:	89 44 24 04          	mov    %eax,0x4(%esp)
    61f2:	e8 fc ff ff ff       	call   61f3 <InterruptMemoryStick+0x73>
			61f3: R_386_PC32	MS_SYSTEM2
    61f7:	eb be                	jmp    61b7 <InterruptMemoryStick+0x37>
    61f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00006200 <WaitForMSINT>:
    6200:	55                   	push   %ebp
    6201:	57                   	push   %edi
    6202:	56                   	push   %esi
    6203:	be 02 00 00 00       	mov    $0x2,%esi
    6208:	53                   	push   %ebx
    6209:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    620d:	8b 03                	mov    (%ebx),%eax
    620f:	f6 c4 20             	test   $0x20,%ah
    6212:	75 51                	jne    6265 <WaitForMSINT+0x65>
    6214:	8d 6b 04             	lea    0x4(%ebx),%ebp
    6217:	bf 00 e0 ff ff       	mov    $0xffffe000,%edi
    621c:	21 e7                	and    %esp,%edi
    621e:	89 f6                	mov    %esi,%esi
    6220:	b8 01 00 00 00       	mov    $0x1,%eax
    6225:	e8 fc ff ff ff       	call   6226 <WaitForMSINT+0x26>
			6226: R_386_PC32	add_preempt_count
    622a:	ba d0 07 00 00       	mov    $0x7d0,%edx
    622f:	89 e8                	mov    %ebp,%eax
    6231:	e8 fc ff ff ff       	call   6232 <WaitForMSINT+0x32>
			6232: R_386_PC32	interruptible_sleep_on_timeout
    6236:	b8 01 00 00 00       	mov    $0x1,%eax
    623b:	e8 fc ff ff ff       	call   623c <WaitForMSINT+0x3c>
			623c: R_386_PC32	sub_preempt_count
    6240:	8b 47 08             	mov    0x8(%edi),%eax
    6243:	a8 08                	test   $0x8,%al
    6245:	75 2c                	jne    6273 <WaitForMSINT+0x73>
    6247:	8b 43 3c             	mov    0x3c(%ebx),%eax
    624a:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    624e:	75 1c                	jne    626c <WaitForMSINT+0x6c>
    6250:	8b 03                	mov    (%ebx),%eax
    6252:	f6 c4 20             	test   $0x20,%ah
    6255:	75 0e                	jne    6265 <WaitForMSINT+0x65>
    6257:	31 c0                	xor    %eax,%eax
    6259:	85 f6                	test   %esi,%esi
    625b:	74 0a                	je     6267 <WaitForMSINT+0x67>
    625d:	8b 03                	mov    (%ebx),%eax
    625f:	4e                   	dec    %esi
    6260:	f6 c4 20             	test   $0x20,%ah
    6263:	74 bb                	je     6220 <WaitForMSINT+0x20>
    6265:	31 c0                	xor    %eax,%eax
    6267:	5b                   	pop    %ebx
    6268:	5e                   	pop    %esi
    6269:	5f                   	pop    %edi
    626a:	5d                   	pop    %ebp
    626b:	c3                   	ret    
    626c:	b8 86 00 00 00       	mov    $0x86,%eax
    6271:	eb f4                	jmp    6267 <WaitForMSINT+0x67>
    6273:	e8 fc ff ff ff       	call   6274 <WaitForMSINT+0x74>
			6274: R_386_PC32	preempt_schedule
    6278:	eb cd                	jmp    6247 <WaitForMSINT+0x47>
    627a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00006280 <WaitForRDYMemoryStick>:
    6280:	55                   	push   %ebp
    6281:	57                   	push   %edi
    6282:	bf 02 00 00 00       	mov    $0x2,%edi
    6287:	56                   	push   %esi
    6288:	53                   	push   %ebx
    6289:	83 ec 0c             	sub    $0xc,%esp
    628c:	8b 74 24 20          	mov    0x20(%esp),%esi
    6290:	8b 06                	mov    (%esi),%eax
    6292:	f6 c4 10             	test   $0x10,%ah
    6295:	75 72                	jne    6309 <WaitForRDYMemoryStick+0x89>
    6297:	8d 6e 04             	lea    0x4(%esi),%ebp
    629a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    62a0:	b8 01 00 00 00       	mov    $0x1,%eax
    62a5:	e8 fc ff ff ff       	call   62a6 <WaitForRDYMemoryStick+0x26>
			62a6: R_386_PC32	add_preempt_count
    62aa:	ba e8 03 00 00       	mov    $0x3e8,%edx
    62af:	89 e8                	mov    %ebp,%eax
    62b1:	e8 fc ff ff ff       	call   62b2 <WaitForRDYMemoryStick+0x32>
			62b2: R_386_PC32	interruptible_sleep_on_timeout
    62b6:	b8 01 00 00 00       	mov    $0x1,%eax
    62bb:	e8 fc ff ff ff       	call   62bc <WaitForRDYMemoryStick+0x3c>
			62bc: R_386_PC32	sub_preempt_count
    62c0:	b8 00 e0 ff ff       	mov    $0xffffe000,%eax
    62c5:	21 e0                	and    %esp,%eax
    62c7:	8b 40 08             	mov    0x8(%eax),%eax
    62ca:	a8 08                	test   $0x8,%al
    62cc:	0f 85 d8 00 00 00    	jne    63aa <WaitForRDYMemoryStick+0x12a>
    62d2:	8b 56 3c             	mov    0x3c(%esi),%edx
    62d5:	8b 42 28             	mov    0x28(%edx),%eax
    62d8:	80 78 04 22          	cmpb   $0x22,0x4(%eax)
    62dc:	0f 84 9e 00 00 00    	je     6380 <WaitForRDYMemoryStick+0x100>
    62e2:	80 7a 06 00          	cmpb   $0x0,0x6(%edx)
    62e6:	75 76                	jne    635e <WaitForRDYMemoryStick+0xde>
    62e8:	8b 06                	mov    (%esi),%eax
    62ea:	f6 c4 01             	test   $0x1,%ah
    62ed:	75 56                	jne    6345 <WaitForRDYMemoryStick+0xc5>
    62ef:	8b 06                	mov    (%esi),%eax
    62f1:	f6 c4 02             	test   $0x2,%ah
    62f4:	75 36                	jne    632c <WaitForRDYMemoryStick+0xac>
    62f6:	8b 06                	mov    (%esi),%eax
    62f8:	f6 c4 10             	test   $0x10,%ah
    62fb:	75 0c                	jne    6309 <WaitForRDYMemoryStick+0x89>
    62fd:	85 ff                	test   %edi,%edi
    62ff:	74 12                	je     6313 <WaitForRDYMemoryStick+0x93>
    6301:	8b 06                	mov    (%esi),%eax
    6303:	4f                   	dec    %edi
    6304:	f6 c4 10             	test   $0x10,%ah
    6307:	74 97                	je     62a0 <WaitForRDYMemoryStick+0x20>
    6309:	31 c0                	xor    %eax,%eax
    630b:	83 c4 0c             	add    $0xc,%esp
    630e:	5b                   	pop    %ebx
    630f:	5e                   	pop    %esi
    6310:	5f                   	pop    %edi
    6311:	5d                   	pop    %ebp
    6312:	c3                   	ret    
    6313:	8b 06                	mov    (%esi),%eax
    6315:	c7 04 24 60 0e 00 00 	movl   $0xe60,(%esp)
			6318: R_386_32	.rodata.str1.32
    631c:	89 44 24 04          	mov    %eax,0x4(%esp)
    6320:	e8 fc ff ff ff       	call   6321 <WaitForRDYMemoryStick+0xa1>
			6321: R_386_PC32	printk
    6325:	b8 87 00 00 00       	mov    $0x87,%eax
    632a:	eb df                	jmp    630b <WaitForRDYMemoryStick+0x8b>
    632c:	8b 06                	mov    (%esi),%eax
    632e:	c7 04 24 a0 0e 00 00 	movl   $0xea0,(%esp)
			6331: R_386_32	.rodata.str1.32
    6335:	89 44 24 04          	mov    %eax,0x4(%esp)
    6339:	e8 fc ff ff ff       	call   633a <WaitForRDYMemoryStick+0xba>
			633a: R_386_PC32	printk
    633e:	b8 48 00 00 00       	mov    $0x48,%eax
    6343:	eb c6                	jmp    630b <WaitForRDYMemoryStick+0x8b>
    6345:	8b 06                	mov    (%esi),%eax
    6347:	c7 04 24 e0 0e 00 00 	movl   $0xee0,(%esp)
			634a: R_386_32	.rodata.str1.32
    634e:	89 44 24 04          	mov    %eax,0x4(%esp)
    6352:	e8 fc ff ff ff       	call   6353 <WaitForRDYMemoryStick+0xd3>
			6353: R_386_PC32	printk
    6357:	b8 47 00 00 00       	mov    $0x47,%eax
    635c:	eb ad                	jmp    630b <WaitForRDYMemoryStick+0x8b>
    635e:	8b 06                	mov    (%esi),%eax
    6360:	c7 04 24 20 0f 00 00 	movl   $0xf20,(%esp)
			6363: R_386_32	.rodata.str1.32
    6367:	89 44 24 08          	mov    %eax,0x8(%esp)
    636b:	b8 78 05 00 00       	mov    $0x578,%eax
			636c: R_386_32	.rodata
    6370:	89 44 24 04          	mov    %eax,0x4(%esp)
    6374:	e8 fc ff ff ff       	call   6375 <WaitForRDYMemoryStick+0xf5>
			6375: R_386_PC32	printk
    6379:	b8 86 00 00 00       	mov    $0x86,%eax
    637e:	eb 8b                	jmp    630b <WaitForRDYMemoryStick+0x8b>
    6380:	80 7e 40 00          	cmpb   $0x0,0x40(%esi)
    6384:	0f 85 58 ff ff ff    	jne    62e2 <WaitForRDYMemoryStick+0x62>
    638a:	bb 3b 00 00 00       	mov    $0x3b,%ebx
    638f:	90                   	nop    
    6390:	c7 04 24 58 89 41 00 	movl   $0x418958,(%esp)
    6397:	4b                   	dec    %ebx
    6398:	e8 fc ff ff ff       	call   6399 <WaitForRDYMemoryStick+0x119>
			6399: R_386_PC32	__const_udelay
    639d:	83 fb ff             	cmp    $0xffffffff,%ebx
    63a0:	75 ee                	jne    6390 <WaitForRDYMemoryStick+0x110>
    63a2:	8b 56 3c             	mov    0x3c(%esi),%edx
    63a5:	e9 38 ff ff ff       	jmp    62e2 <WaitForRDYMemoryStick+0x62>
    63aa:	e8 fc ff ff ff       	call   63ab <WaitForRDYMemoryStick+0x12b>
			63ab: R_386_PC32	preempt_schedule
    63af:	e9 1e ff ff ff       	jmp    62d2 <WaitForRDYMemoryStick+0x52>
    63b4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    63ba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000063c0 <TPCMemoryStick>:
    63c0:	57                   	push   %edi
    63c1:	56                   	push   %esi
    63c2:	53                   	push   %ebx
    63c3:	83 ec 10             	sub    $0x10,%esp
    63c6:	8b 7c 24 20          	mov    0x20(%esp),%edi
    63ca:	0f b7 44 24 28       	movzwl 0x28(%esp),%eax
    63cf:	0f b6 5c 24 24       	movzbl 0x24(%esp),%ebx
    63d4:	89 44 24 0c          	mov    %eax,0xc(%esp)
    63d8:	89 3c 24             	mov    %edi,(%esp)
    63db:	89 de                	mov    %ebx,%esi
    63dd:	c1 e6 0c             	shl    $0xc,%esi
    63e0:	e8 fc ff ff ff       	call   63e1 <TPCMemoryStick+0x21>
			63e1: R_386_PC32	MS_SYSTEM1
    63e5:	81 64 24 0c ff 03 00 	andl   $0x3ff,0xc(%esp)
    63ec:	00 
    63ed:	81 e6 00 f0 00 00    	and    $0xf000,%esi
    63f3:	8b 54 24 0c          	mov    0xc(%esp),%edx
    63f7:	09 d6                	or     %edx,%esi
    63f9:	80 fb 02             	cmp    $0x2,%bl
    63fc:	74 62                	je     6460 <TPCMemoryStick+0xa0>
    63fe:	80 fb 0d             	cmp    $0xd,%bl
    6401:	74 5d                	je     6460 <TPCMemoryStick+0xa0>
    6403:	25 ff ff fe ff       	and    $0xfffeffff,%eax
    6408:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
    640e:	0d 00 08 00 00       	or     $0x800,%eax
    6413:	89 44 24 04          	mov    %eax,0x4(%esp)
    6417:	89 3c 24             	mov    %edi,(%esp)
    641a:	e8 fc ff ff ff       	call   641b <TPCMemoryStick+0x5b>
			641b: R_386_PC32	MS_SYSTEM2
    641f:	89 74 24 04          	mov    %esi,0x4(%esp)
    6423:	89 3c 24             	mov    %edi,(%esp)
    6426:	e8 fc ff ff ff       	call   6427 <TPCMemoryStick+0x67>
			6427: R_386_PC32	MS_COMMAND2
    642b:	89 3c 24             	mov    %edi,(%esp)
    642e:	e8 4d fe ff ff       	call   6280 <WaitForRDYMemoryStick>
    6433:	89 3c 24             	mov    %edi,(%esp)
    6436:	88 44 24 0b          	mov    %al,0xb(%esp)
    643a:	e8 fc ff ff ff       	call   643b <TPCMemoryStick+0x7b>
			643b: R_386_PC32	MS_SYSTEM1
    643f:	89 3c 24             	mov    %edi,(%esp)
    6442:	25 ff ff fe ff       	and    $0xfffeffff,%eax
    6447:	89 44 24 04          	mov    %eax,0x4(%esp)
    644b:	e8 fc ff ff ff       	call   644c <TPCMemoryStick+0x8c>
			644c: R_386_PC32	MS_SYSTEM2
    6450:	0f b6 44 24 0b       	movzbl 0xb(%esp),%eax
    6455:	83 c4 10             	add    $0x10,%esp
    6458:	5b                   	pop    %ebx
    6459:	5e                   	pop    %esi
    645a:	5f                   	pop    %edi
    645b:	c3                   	ret    
    645c:	8d 74 26 00          	lea    0x0(%esi),%esi
    6460:	0d 00 00 01 00       	or     $0x10000,%eax
    6465:	eb a1                	jmp    6408 <TPCMemoryStick+0x48>
    6467:	89 f6                	mov    %esi,%esi
    6469:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00006470 <PrintRegistersMemoryStick>:
    6470:	56                   	push   %esi
    6471:	53                   	push   %ebx
    6472:	83 ec 08             	sub    $0x8,%esp
    6475:	8b 74 24 14          	mov    0x14(%esp),%esi
    6479:	31 db                	xor    %ebx,%ebx
    647b:	90                   	nop    
    647c:	8d 74 26 00          	lea    0x0(%esi),%esi
    6480:	0f b6 c3             	movzbl %bl,%eax
    6483:	fe c3                	inc    %bl
    6485:	0f b6 44 30 0f       	movzbl 0xf(%eax,%esi,1),%eax
    648a:	c7 04 24 6e 00 00 00 	movl   $0x6e,(%esp)
			648d: R_386_32	.rodata.str1.1
    6491:	89 44 24 04          	mov    %eax,0x4(%esp)
    6495:	e8 fc ff ff ff       	call   6496 <PrintRegistersMemoryStick+0x26>
			6496: R_386_PC32	printk
    649a:	80 fb 1f             	cmp    $0x1f,%bl
    649d:	76 e1                	jbe    6480 <PrintRegistersMemoryStick+0x10>
    649f:	b9 76 00 00 00       	mov    $0x76,%ecx
			64a0: R_386_32	.rodata.str1.1
    64a4:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    64a8:	83 c4 08             	add    $0x8,%esp
    64ab:	5b                   	pop    %ebx
    64ac:	5e                   	pop    %esi
    64ad:	e9 fc ff ff ff       	jmp    64ae <PrintRegistersMemoryStick+0x3e>
			64ae: R_386_PC32	printk
    64b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    64b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000064c0 <GetIntMS>:
    64c0:	83 ec 18             	sub    $0x18,%esp
    64c3:	89 5c 24 14          	mov    %ebx,0x14(%esp)
    64c7:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    64cb:	8b 43 30             	mov    0x30(%ebx),%eax
    64ce:	89 1c 24             	mov    %ebx,(%esp)
    64d1:	0d 07 26 00 00       	or     $0x2607,%eax
    64d6:	89 44 24 04          	mov    %eax,0x4(%esp)
    64da:	e8 fc ff ff ff       	call   64db <GetIntMS+0x1b>
			64db: R_386_PC32	MS_SYSTEM2
    64df:	89 1c 24             	mov    %ebx,(%esp)
    64e2:	b8 01 00 00 00       	mov    $0x1,%eax
    64e7:	89 44 24 08          	mov    %eax,0x8(%esp)
    64eb:	b8 07 00 00 00       	mov    $0x7,%eax
    64f0:	89 44 24 04          	mov    %eax,0x4(%esp)
    64f4:	e8 c7 fe ff ff       	call   63c0 <TPCMemoryStick>
    64f9:	89 1c 24             	mov    %ebx,(%esp)
    64fc:	88 44 24 0f          	mov    %al,0xf(%esp)
    6500:	e8 fc ff ff ff       	call   6501 <GetIntMS+0x41>
			6501: R_386_PC32	MS_DATA1
    6505:	88 43 10             	mov    %al,0x10(%ebx)
    6508:	89 1c 24             	mov    %ebx,(%esp)
    650b:	e8 fc ff ff ff       	call   650c <GetIntMS+0x4c>
			650c: R_386_PC32	MS_DATA1
    6510:	89 44 24 10          	mov    %eax,0x10(%esp)
    6514:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    6518:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    651d:	83 c4 18             	add    $0x18,%esp
    6520:	c3                   	ret    
    6521:	eb 0d                	jmp    6530 <GetIntMSPro>
    6523:	90                   	nop    
    6524:	90                   	nop    
    6525:	90                   	nop    
    6526:	90                   	nop    
    6527:	90                   	nop    
    6528:	90                   	nop    
    6529:	90                   	nop    
    652a:	90                   	nop    
    652b:	90                   	nop    
    652c:	90                   	nop    
    652d:	90                   	nop    
    652e:	90                   	nop    
    652f:	90                   	nop    

00006530 <GetIntMSPro>:
    6530:	83 ec 10             	sub    $0x10,%esp
    6533:	8b 54 24 14          	mov    0x14(%esp),%edx
    6537:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    653b:	8b 42 30             	mov    0x30(%edx),%eax
    653e:	89 14 24             	mov    %edx,(%esp)
    6541:	0d 07 26 00 00       	or     $0x2607,%eax
    6546:	89 44 24 04          	mov    %eax,0x4(%esp)
    654a:	e8 fc ff ff ff       	call   654b <GetIntMSPro+0x1b>
			654b: R_386_PC32	MS_SYSTEM2
    654f:	b8 01 00 00 00       	mov    $0x1,%eax
    6554:	89 44 24 08          	mov    %eax,0x8(%esp)
    6558:	b8 07 00 00 00       	mov    $0x7,%eax
    655d:	89 44 24 04          	mov    %eax,0x4(%esp)
    6561:	8b 44 24 14          	mov    0x14(%esp),%eax
    6565:	89 04 24             	mov    %eax,(%esp)
    6568:	e8 53 fe ff ff       	call   63c0 <TPCMemoryStick>
    656d:	8b 54 24 14          	mov    0x14(%esp),%edx
    6571:	88 c3                	mov    %al,%bl
    6573:	89 14 24             	mov    %edx,(%esp)
    6576:	e8 fc ff ff ff       	call   6577 <GetIntMSPro+0x47>
			6577: R_386_PC32	MS_DATA1
    657b:	8b 54 24 14          	mov    0x14(%esp),%edx
    657f:	88 42 10             	mov    %al,0x10(%edx)
    6582:	89 14 24             	mov    %edx,(%esp)
    6585:	e8 fc ff ff ff       	call   6586 <GetIntMSPro+0x56>
			6586: R_386_PC32	MS_DATA1
    658a:	0f b6 c3             	movzbl %bl,%eax
    658d:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    6591:	83 c4 10             	add    $0x10,%esp
    6594:	c3                   	ret    
    6595:	8d 74 26 00          	lea    0x0(%esi),%esi
    6599:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000065a0 <SetCmdParameterMS>:
    65a0:	0f b6 54 24 08       	movzbl 0x8(%esp),%edx
    65a5:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    65a9:	8b 81 64 44 00 00    	mov    0x4464(%ecx),%eax
    65af:	83 78 30 00          	cmpl   $0x0,0x30(%eax)
    65b3:	75 0e                	jne    65c3 <SetCmdParameterMS+0x23>
    65b5:	c6 40 1f 88          	movb   $0x88,0x1f(%eax)
    65b9:	8b 81 64 44 00 00    	mov    0x4464(%ecx),%eax
    65bf:	88 50 23             	mov    %dl,0x23(%eax)
    65c2:	c3                   	ret    
    65c3:	c6 40 1f 80          	movb   $0x80,0x1f(%eax)
    65c7:	eb f0                	jmp    65b9 <SetCmdParameterMS+0x19>
    65c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

000065d0 <ReadRegistersMemoryStick>:
    65d0:	57                   	push   %edi
    65d1:	56                   	push   %esi
    65d2:	53                   	push   %ebx
    65d3:	83 ec 30             	sub    $0x30,%esp
    65d6:	8b 7c 24 40          	mov    0x40(%esp),%edi
    65da:	8b 47 30             	mov    0x30(%edi),%eax
    65dd:	31 db                	xor    %ebx,%ebx
    65df:	0d 07 26 00 00       	or     $0x2607,%eax
    65e4:	89 44 24 04          	mov    %eax,0x4(%esp)
    65e8:	89 3c 24             	mov    %edi,(%esp)
    65eb:	e8 fc ff ff ff       	call   65ec <ReadRegistersMemoryStick+0x1c>
			65ec: R_386_PC32	MS_SYSTEM2
    65f0:	89 3c 24             	mov    %edi,(%esp)
    65f3:	ba 1f 00 00 00       	mov    $0x1f,%edx
    65f8:	b8 04 00 00 00       	mov    $0x4,%eax
    65fd:	89 54 24 08          	mov    %edx,0x8(%esp)
    6601:	89 44 24 04          	mov    %eax,0x4(%esp)
    6605:	e8 b6 fd ff ff       	call   63c0 <TPCMemoryStick>
    660a:	88 44 24 0f          	mov    %al,0xf(%esp)
    660e:	84 c0                	test   %al,%al
    6610:	74 0e                	je     6620 <ReadRegistersMemoryStick+0x50>
    6612:	0f b6 c0             	movzbl %al,%eax
    6615:	83 c4 30             	add    $0x30,%esp
    6618:	5b                   	pop    %ebx
    6619:	5e                   	pop    %esi
    661a:	5f                   	pop    %edi
    661b:	c3                   	ret    
    661c:	8d 74 26 00          	lea    0x0(%esi),%esi
    6620:	89 3c 24             	mov    %edi,(%esp)
    6623:	0f b6 f3             	movzbl %bl,%esi
    6626:	fe c3                	inc    %bl
    6628:	e8 fc ff ff ff       	call   6629 <ReadRegistersMemoryStick+0x59>
			6629: R_386_PC32	MS_DATA1
    662d:	89 44 b4 10          	mov    %eax,0x10(%esp,%esi,4)
    6631:	80 fb 07             	cmp    $0x7,%bl
    6634:	76 ea                	jbe    6620 <ReadRegistersMemoryStick+0x50>
    6636:	31 db                	xor    %ebx,%ebx
    6638:	90                   	nop    
    6639:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    6640:	0f b6 d3             	movzbl %bl,%edx
    6643:	fe c3                	inc    %bl
    6645:	80 fb 1f             	cmp    $0x1f,%bl
    6648:	0f b6 44 14 10       	movzbl 0x10(%esp,%edx,1),%eax
    664d:	88 44 3a 0f          	mov    %al,0xf(%edx,%edi,1)
    6651:	76 ed                	jbe    6640 <ReadRegistersMemoryStick+0x70>
    6653:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    6658:	eb bb                	jmp    6615 <ReadRegistersMemoryStick+0x45>
    665a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00006660 <SetRWRegAddrsMemoryStick>:
    6660:	83 ec 10             	sub    $0x10,%esp
    6663:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    6667:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    666b:	8b 43 30             	mov    0x30(%ebx),%eax
    666e:	89 1c 24             	mov    %ebx,(%esp)
    6671:	0d 07 27 00 00       	or     $0x2707,%eax
    6676:	89 44 24 04          	mov    %eax,0x4(%esp)
    667a:	e8 fc ff ff ff       	call   667b <SetRWRegAddrsMemoryStick+0x1b>
			667b: R_386_PC32	MS_SYSTEM2
    667f:	89 1c 24             	mov    %ebx,(%esp)
    6682:	8b 44 24 18          	mov    0x18(%esp),%eax
    6686:	89 44 24 04          	mov    %eax,0x4(%esp)
    668a:	e8 fc ff ff ff       	call   668b <SetRWRegAddrsMemoryStick+0x2b>
			668b: R_386_PC32	MS_DATA2
    668f:	89 1c 24             	mov    %ebx,(%esp)
    6692:	31 c0                	xor    %eax,%eax
    6694:	89 44 24 04          	mov    %eax,0x4(%esp)
    6698:	e8 fc ff ff ff       	call   6699 <SetRWRegAddrsMemoryStick+0x39>
			6699: R_386_PC32	MS_DATA2
    669d:	89 1c 24             	mov    %ebx,(%esp)
    66a0:	b8 04 00 00 00       	mov    $0x4,%eax
    66a5:	b9 08 00 00 00       	mov    $0x8,%ecx
    66aa:	89 44 24 08          	mov    %eax,0x8(%esp)
    66ae:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    66b2:	e8 09 fd ff ff       	call   63c0 <TPCMemoryStick>
    66b7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    66bb:	0f b6 c0             	movzbl %al,%eax
    66be:	83 c4 10             	add    $0x10,%esp
    66c1:	c3                   	ret    
    66c2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    66c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000066d0 <WriteRegistersMemoryStick>:
    66d0:	56                   	push   %esi
    66d1:	53                   	push   %ebx
    66d2:	83 ec 2c             	sub    $0x2c,%esp
    66d5:	31 db                	xor    %ebx,%ebx
    66d7:	8b 74 24 38          	mov    0x38(%esp),%esi
    66db:	8b 46 30             	mov    0x30(%esi),%eax
    66de:	89 34 24             	mov    %esi,(%esp)
    66e1:	0d 07 27 00 00       	or     $0x2707,%eax
    66e6:	89 44 24 04          	mov    %eax,0x4(%esp)
    66ea:	e8 fc ff ff ff       	call   66eb <WriteRegistersMemoryStick+0x1b>
			66eb: R_386_PC32	MS_SYSTEM2
    66ef:	90                   	nop    
    66f0:	80 fb 10             	cmp    $0x10,%bl
    66f3:	74 5b                	je     6750 <WriteRegistersMemoryStick+0x80>
    66f5:	0f b6 d3             	movzbl %bl,%edx
    66f8:	0f b6 44 32 0f       	movzbl 0xf(%edx,%esi,1),%eax
    66fd:	88 44 14 0c          	mov    %al,0xc(%esp,%edx,1)
    6701:	fe c3                	inc    %bl
    6703:	80 fb 1f             	cmp    $0x1f,%bl
    6706:	76 e8                	jbe    66f0 <WriteRegistersMemoryStick+0x20>
    6708:	31 db                	xor    %ebx,%ebx
    670a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6710:	0f b6 c3             	movzbl %bl,%eax
    6713:	8b 44 84 0c          	mov    0xc(%esp,%eax,4),%eax
    6717:	fe c3                	inc    %bl
    6719:	89 34 24             	mov    %esi,(%esp)
    671c:	89 44 24 04          	mov    %eax,0x4(%esp)
    6720:	e8 fc ff ff ff       	call   6721 <WriteRegistersMemoryStick+0x51>
			6721: R_386_PC32	MS_DATA2
    6725:	80 fb 07             	cmp    $0x7,%bl
    6728:	76 e6                	jbe    6710 <WriteRegistersMemoryStick+0x40>
    672a:	89 34 24             	mov    %esi,(%esp)
    672d:	b8 1f 00 00 00       	mov    $0x1f,%eax
    6732:	89 44 24 08          	mov    %eax,0x8(%esp)
    6736:	b8 0b 00 00 00       	mov    $0xb,%eax
    673b:	89 44 24 04          	mov    %eax,0x4(%esp)
    673f:	e8 7c fc ff ff       	call   63c0 <TPCMemoryStick>
    6744:	83 c4 2c             	add    $0x2c,%esp
    6747:	0f b6 c0             	movzbl %al,%eax
    674a:	5b                   	pop    %ebx
    674b:	5e                   	pop    %esi
    674c:	c3                   	ret    
    674d:	8d 76 00             	lea    0x0(%esi),%esi
    6750:	8b 46 3c             	mov    0x3c(%esi),%eax
    6753:	8b 40 28             	mov    0x28(%eax),%eax
    6756:	80 78 04 12          	cmpb   $0x12,0x4(%eax)
    675a:	75 99                	jne    66f5 <WriteRegistersMemoryStick+0x25>
    675c:	80 7e 1f 88          	cmpb   $0x88,0x1f(%esi)
    6760:	74 07                	je     6769 <WriteRegistersMemoryStick+0x99>
    6762:	8b 46 30             	mov    0x30(%esi),%eax
    6765:	85 c0                	test   %eax,%eax
    6767:	75 07                	jne    6770 <WriteRegistersMemoryStick+0xa0>
    6769:	c6 44 24 1c 88       	movb   $0x88,0x1c(%esp)
    676e:	eb 91                	jmp    6701 <WriteRegistersMemoryStick+0x31>
    6770:	c6 44 24 1c 80       	movb   $0x80,0x1c(%esp)
    6775:	eb 8a                	jmp    6701 <WriteRegistersMemoryStick+0x31>
    6777:	89 f6                	mov    %esi,%esi
    6779:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00006780 <SwitchToParallelIFMS>:
    6780:	83 ec 0c             	sub    $0xc,%esp
    6783:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    6787:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    678b:	b8 ff 00 00 00       	mov    $0xff,%eax
    6790:	85 db                	test   %ebx,%ebx
    6792:	74 60                	je     67f4 <SwitchToParallelIFMS+0x74>
    6794:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    679a:	c7 40 30 10 40 00 00 	movl   $0x4010,0x30(%eax)
    67a1:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    67a7:	c6 40 1f 88          	movb   $0x88,0x1f(%eax)
    67ab:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    67b1:	89 04 24             	mov    %eax,(%esp)
    67b4:	e8 17 ff ff ff       	call   66d0 <WriteRegistersMemoryStick>
    67b9:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    67bf:	c6 40 1f 88          	movb   $0x88,0x1f(%eax)
    67c3:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    67c9:	89 04 24             	mov    %eax,(%esp)
    67cc:	e8 ff fe ff ff       	call   66d0 <WriteRegistersMemoryStick>
    67d1:	84 c0                	test   %al,%al
    67d3:	75 2b                	jne    6800 <SwitchToParallelIFMS+0x80>
    67d5:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    67db:	c7 40 30 10 40 00 00 	movl   $0x4010,0x30(%eax)
    67e2:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    67e8:	8b 40 3c             	mov    0x3c(%eax),%eax
    67eb:	8b 40 28             	mov    0x28(%eax),%eax
    67ee:	c6 40 05 12          	movb   $0x12,0x5(%eax)
    67f2:	31 c0                	xor    %eax,%eax
    67f4:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    67f8:	83 c4 0c             	add    $0xc,%esp
    67fb:	c3                   	ret    
    67fc:	8d 74 26 00          	lea    0x0(%esi),%esi
    6800:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    6806:	8b 40 3c             	mov    0x3c(%eax),%eax
    6809:	8b 40 28             	mov    0x28(%eax),%eax
    680c:	89 04 24             	mov    %eax,(%esp)
    680f:	e8 fc ff ff ff       	call   6810 <SwitchToParallelIFMS+0x90>
			6810: R_386_PC32	SOCKET_CONTROL_SOCK1
    6814:	0d 00 01 00 00       	or     $0x100,%eax
    6819:	0f b7 c0             	movzwl %ax,%eax
    681c:	89 44 24 04          	mov    %eax,0x4(%esp)
    6820:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    6826:	8b 40 3c             	mov    0x3c(%eax),%eax
    6829:	8b 40 28             	mov    0x28(%eax),%eax
    682c:	89 04 24             	mov    %eax,(%esp)
    682f:	e8 fc ff ff ff       	call   6830 <SwitchToParallelIFMS+0xb0>
			6830: R_386_PC32	SOCKET_CONTROL_SOCK2
    6834:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    683a:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
    6841:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    6847:	8b 40 3c             	mov    0x3c(%eax),%eax
    684a:	8b 40 28             	mov    0x28(%eax),%eax
    684d:	c6 40 05 80          	movb   $0x80,0x5(%eax)
    6851:	eb 9f                	jmp    67f2 <SwitchToParallelIFMS+0x72>
    6853:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6859:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00006860 <SwitchToParallelIFMSPro>:
    6860:	83 ec 0c             	sub    $0xc,%esp
    6863:	89 74 24 08          	mov    %esi,0x8(%esp)
    6867:	8b 74 24 10          	mov    0x10(%esp),%esi
    686b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    686f:	8b 46 04             	mov    0x4(%esi),%eax
    6872:	31 db                	xor    %ebx,%ebx
    6874:	c7 40 30 10 40 00 00 	movl   $0x4010,0x30(%eax)
    687b:	8b 46 04             	mov    0x4(%esi),%eax
    687e:	fe c3                	inc    %bl
    6880:	c6 40 1f 00          	movb   $0x0,0x1f(%eax)
    6884:	8b 46 04             	mov    0x4(%esi),%eax
    6887:	89 04 24             	mov    %eax,(%esp)
    688a:	e8 41 fe ff ff       	call   66d0 <WriteRegistersMemoryStick>
    688f:	84 c0                	test   %al,%al
    6891:	74 16                	je     68a9 <SwitchToParallelIFMSPro+0x49>
    6893:	80 fb 01             	cmp    $0x1,%bl
    6896:	b8 4c 00 00 00       	mov    $0x4c,%eax
    689b:	76 de                	jbe    687b <SwitchToParallelIFMSPro+0x1b>
    689d:	8b 5c 24 04          	mov    0x4(%esp),%ebx
    68a1:	8b 74 24 08          	mov    0x8(%esp),%esi
    68a5:	83 c4 0c             	add    $0xc,%esp
    68a8:	c3                   	ret    
    68a9:	8b 46 04             	mov    0x4(%esi),%eax
    68ac:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
    68b3:	31 c0                	xor    %eax,%eax
    68b5:	eb e6                	jmp    689d <SwitchToParallelIFMSPro+0x3d>
    68b7:	89 f6                	mov    %esi,%esi
    68b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000068c0 <CmdMemoryStick>:
    68c0:	53                   	push   %ebx
    68c1:	83 ec 10             	sub    $0x10,%esp
    68c4:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    68c8:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
    68cd:	c6 44 24 0c 00       	movb   $0x0,0xc(%esp)
    68d2:	88 44 24 0f          	mov    %al,0xf(%esp)
    68d6:	0f b6 44 24 20       	movzbl 0x20(%esp),%eax
    68db:	88 44 24 0e          	mov    %al,0xe(%esp)
    68df:	0f b6 44 24 24       	movzbl 0x24(%esp),%eax
    68e4:	88 44 24 0d          	mov    %al,0xd(%esp)
    68e8:	0f b6 44 24 28       	movzbl 0x28(%esp),%eax
    68ed:	ba ff 00 00 00       	mov    $0xff,%edx
    68f2:	85 db                	test   %ebx,%ebx
    68f4:	0f 84 81 00 00 00    	je     697b <CmdMemoryStick+0xbb>
    68fa:	84 c0                	test   %al,%al
    68fc:	74 14                	je     6912 <CmdMemoryStick+0x52>
    68fe:	89 1c 24             	mov    %ebx,(%esp)
    6901:	e8 ca fd ff ff       	call   66d0 <WriteRegistersMemoryStick>
    6906:	88 44 24 0c          	mov    %al,0xc(%esp)
    690a:	84 c0                	test   %al,%al
    690c:	0f 85 8e 00 00 00    	jne    69a0 <CmdMemoryStick+0xe0>
    6912:	8b 43 30             	mov    0x30(%ebx),%eax
    6915:	89 1c 24             	mov    %ebx,(%esp)
    6918:	0d 07 27 00 00       	or     $0x2707,%eax
    691d:	89 44 24 04          	mov    %eax,0x4(%esp)
    6921:	e8 fc ff ff ff       	call   6922 <CmdMemoryStick+0x62>
			6922: R_386_PC32	MS_SYSTEM2
    6926:	0f b6 44 24 0f       	movzbl 0xf(%esp),%eax
    692b:	89 1c 24             	mov    %ebx,(%esp)
    692e:	89 44 24 04          	mov    %eax,0x4(%esp)
    6932:	e8 fc ff ff ff       	call   6933 <CmdMemoryStick+0x73>
			6933: R_386_PC32	MS_DATA2
    6937:	89 1c 24             	mov    %ebx,(%esp)
    693a:	31 c9                	xor    %ecx,%ecx
    693c:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6940:	e8 fc ff ff ff       	call   6941 <CmdMemoryStick+0x81>
			6941: R_386_PC32	MS_DATA2
    6945:	89 1c 24             	mov    %ebx,(%esp)
    6948:	ba 01 00 00 00       	mov    $0x1,%edx
    694d:	b8 0e 00 00 00       	mov    $0xe,%eax
    6952:	89 54 24 08          	mov    %edx,0x8(%esp)
    6956:	89 44 24 04          	mov    %eax,0x4(%esp)
    695a:	e8 61 fa ff ff       	call   63c0 <TPCMemoryStick>
    695f:	84 c0                	test   %al,%al
    6961:	ba 81 00 00 00       	mov    $0x81,%edx
    6966:	75 13                	jne    697b <CmdMemoryStick+0xbb>
    6968:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%esp)
    696d:	75 21                	jne    6990 <CmdMemoryStick+0xd0>
    696f:	80 7c 24 0d 00       	cmpb   $0x0,0xd(%esp)
    6974:	75 0c                	jne    6982 <CmdMemoryStick+0xc2>
    6976:	0f b6 54 24 0c       	movzbl 0xc(%esp),%edx
    697b:	83 c4 10             	add    $0x10,%esp
    697e:	89 d0                	mov    %edx,%eax
    6980:	5b                   	pop    %ebx
    6981:	c3                   	ret    
    6982:	89 1c 24             	mov    %ebx,(%esp)
    6985:	e8 46 fc ff ff       	call   65d0 <ReadRegistersMemoryStick>
    698a:	88 44 24 0c          	mov    %al,0xc(%esp)
    698e:	eb e6                	jmp    6976 <CmdMemoryStick+0xb6>
    6990:	89 1c 24             	mov    %ebx,(%esp)
    6993:	e8 68 f8 ff ff       	call   6200 <WaitForMSINT>
    6998:	88 44 24 0c          	mov    %al,0xc(%esp)
    699c:	84 c0                	test   %al,%al
    699e:	74 cf                	je     696f <CmdMemoryStick+0xaf>
    69a0:	0f b6 d0             	movzbl %al,%edx
    69a3:	eb d6                	jmp    697b <CmdMemoryStick+0xbb>
    69a5:	8d 74 26 00          	lea    0x0(%esi),%esi
    69a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000069b0 <ExCmdMSPro2>:
    69b0:	57                   	push   %edi
    69b1:	56                   	push   %esi
    69b2:	53                   	push   %ebx
    69b3:	83 ec 10             	sub    $0x10,%esp
    69b6:	8b 5c 24 2c          	mov    0x2c(%esp),%ebx
    69ba:	0f b6 44 24 24       	movzbl 0x24(%esp),%eax
    69bf:	8b 7c 24 20          	mov    0x20(%esp),%edi
    69c3:	89 da                	mov    %ebx,%edx
    69c5:	0f b7 74 24 28       	movzwl 0x28(%esp),%esi
    69ca:	c1 ea 18             	shr    $0x18,%edx
    69cd:	88 44 24 0f          	mov    %al,0xf(%esp)
    69d1:	89 d8                	mov    %ebx,%eax
    69d3:	25 00 00 ff 00       	and    $0xff0000,%eax
    69d8:	c1 e8 08             	shr    $0x8,%eax
    69db:	09 c2                	or     %eax,%edx
    69dd:	89 d8                	mov    %ebx,%eax
    69df:	25 00 ff 00 00       	and    $0xff00,%eax
    69e4:	c1 e3 18             	shl    $0x18,%ebx
    69e7:	c1 e0 08             	shl    $0x8,%eax
    69ea:	09 c2                	or     %eax,%edx
    69ec:	09 d3                	or     %edx,%ebx
    69ee:	8b 57 04             	mov    0x4(%edi),%edx
    69f1:	8b 42 30             	mov    0x30(%edx),%eax
    69f4:	89 14 24             	mov    %edx,(%esp)
    69f7:	0d 07 27 00 00       	or     $0x2707,%eax
    69fc:	89 44 24 04          	mov    %eax,0x4(%esp)
    6a00:	e8 fc ff ff ff       	call   6a01 <ExCmdMSPro2+0x51>
			6a01: R_386_PC32	MS_SYSTEM2
    6a05:	0f b6 54 24 0f       	movzbl 0xf(%esp),%edx
    6a0a:	89 f0                	mov    %esi,%eax
    6a0c:	25 00 ff 00 00       	and    $0xff00,%eax
    6a11:	81 e6 ff 00 00 00    	and    $0xff,%esi
    6a17:	c1 e6 10             	shl    $0x10,%esi
    6a1a:	09 c2                	or     %eax,%edx
    6a1c:	89 d8                	mov    %ebx,%eax
    6a1e:	09 f2                	or     %esi,%edx
    6a20:	c1 e0 18             	shl    $0x18,%eax
    6a23:	09 c2                	or     %eax,%edx
    6a25:	c1 eb 08             	shr    $0x8,%ebx
    6a28:	be 07 00 00 00       	mov    $0x7,%esi
    6a2d:	89 54 24 04          	mov    %edx,0x4(%esp)
    6a31:	8b 47 04             	mov    0x4(%edi),%eax
    6a34:	89 04 24             	mov    %eax,(%esp)
    6a37:	e8 fc ff ff ff       	call   6a38 <ExCmdMSPro2+0x88>
			6a38: R_386_PC32	MS_DATA2
    6a3c:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    6a40:	8b 47 04             	mov    0x4(%edi),%eax
    6a43:	bb 09 00 00 00       	mov    $0x9,%ebx
    6a48:	89 04 24             	mov    %eax,(%esp)
    6a4b:	e8 fc ff ff ff       	call   6a4c <ExCmdMSPro2+0x9c>
			6a4c: R_386_PC32	MS_DATA2
    6a50:	89 74 24 08          	mov    %esi,0x8(%esp)
    6a54:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    6a58:	8b 47 04             	mov    0x4(%edi),%eax
    6a5b:	89 04 24             	mov    %eax,(%esp)
    6a5e:	e8 5d f9 ff ff       	call   63c0 <TPCMemoryStick>
    6a63:	84 c0                	test   %al,%al
    6a65:	ba 81 00 00 00       	mov    $0x81,%edx
    6a6a:	75 26                	jne    6a92 <ExCmdMSPro2+0xe2>
    6a6c:	8b 47 04             	mov    0x4(%edi),%eax
    6a6f:	89 04 24             	mov    %eax,(%esp)
    6a72:	e8 89 f7 ff ff       	call   6200 <WaitForMSINT>
    6a77:	84 c0                	test   %al,%al
    6a79:	0f b6 d0             	movzbl %al,%edx
    6a7c:	75 14                	jne    6a92 <ExCmdMSPro2+0xe2>
    6a7e:	8b 47 04             	mov    0x4(%edi),%eax
    6a81:	ba 81 00 00 00       	mov    $0x81,%edx
    6a86:	8b 00                	mov    (%eax),%eax
    6a88:	a8 01                	test   $0x1,%al
    6a8a:	b8 00 00 00 00       	mov    $0x0,%eax
    6a8f:	0f 44 d0             	cmove  %eax,%edx
    6a92:	83 c4 10             	add    $0x10,%esp
    6a95:	89 d0                	mov    %edx,%eax
    6a97:	5b                   	pop    %ebx
    6a98:	5e                   	pop    %esi
    6a99:	5f                   	pop    %edi
    6a9a:	c3                   	ret    
    6a9b:	90                   	nop    
    6a9c:	8d 74 26 00          	lea    0x0(%esi),%esi

00006aa0 <SetAddressMS>:
    6aa0:	53                   	push   %ebx
    6aa1:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    6aa5:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    6aa9:	0f b7 54 24 0c       	movzwl 0xc(%esp),%edx
    6aae:	85 c9                	test   %ecx,%ecx
    6ab0:	74 28                	je     6ada <SetAddressMS+0x3a>
    6ab2:	8b 81 64 44 00 00    	mov    0x4464(%ecx),%eax
    6ab8:	88 50 22             	mov    %dl,0x22(%eax)
    6abb:	8b 81 64 44 00 00    	mov    0x4464(%ecx),%eax
    6ac1:	c1 ea 08             	shr    $0x8,%edx
    6ac4:	88 50 21             	mov    %dl,0x21(%eax)
    6ac7:	8b 81 64 44 00 00    	mov    0x4464(%ecx),%eax
    6acd:	c6 40 20 00          	movb   $0x0,0x20(%eax)
    6ad1:	8b 81 64 44 00 00    	mov    0x4464(%ecx),%eax
    6ad7:	88 58 24             	mov    %bl,0x24(%eax)
    6ada:	5b                   	pop    %ebx
    6adb:	c3                   	ret    
    6adc:	8d 74 26 00          	lea    0x0(%esi),%esi

00006ae0 <EraseBlockMS>:
    6ae0:	56                   	push   %esi
    6ae1:	53                   	push   %ebx
    6ae2:	83 ec 14             	sub    $0x14,%esp
    6ae5:	8b 5c 24 20          	mov    0x20(%esp),%ebx
    6ae9:	0f b7 74 24 24       	movzwl 0x24(%esp),%esi
    6aee:	ba ff 00 00 00       	mov    $0xff,%edx
    6af3:	85 db                	test   %ebx,%ebx
    6af5:	0f 84 84 00 00 00    	je     6b7f <EraseBlockMS+0x9f>
    6afb:	89 74 24 04          	mov    %esi,0x4(%esp)
    6aff:	31 d2                	xor    %edx,%edx
    6b01:	89 54 24 08          	mov    %edx,0x8(%esp)
    6b05:	89 1c 24             	mov    %ebx,(%esp)
    6b08:	e8 93 ff ff ff       	call   6aa0 <SetAddressMS>
    6b0d:	89 1c 24             	mov    %ebx,(%esp)
    6b10:	b8 20 00 00 00       	mov    $0x20,%eax
    6b15:	89 44 24 04          	mov    %eax,0x4(%esp)
    6b19:	e8 82 fa ff ff       	call   65a0 <SetCmdParameterMS>
    6b1e:	b8 01 00 00 00       	mov    $0x1,%eax
    6b23:	89 44 24 10          	mov    %eax,0x10(%esp)
    6b27:	b8 01 00 00 00       	mov    $0x1,%eax
    6b2c:	89 44 24 0c          	mov    %eax,0xc(%esp)
    6b30:	b8 01 00 00 00       	mov    $0x1,%eax
    6b35:	89 44 24 08          	mov    %eax,0x8(%esp)
    6b39:	b8 99 00 00 00       	mov    $0x99,%eax
    6b3e:	89 44 24 04          	mov    %eax,0x4(%esp)
    6b42:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    6b48:	89 04 24             	mov    %eax,(%esp)
    6b4b:	e8 70 fd ff ff       	call   68c0 <CmdMemoryStick>
    6b50:	84 c0                	test   %al,%al
    6b52:	ba 81 00 00 00       	mov    $0x81,%edx
    6b57:	75 26                	jne    6b7f <EraseBlockMS+0x9f>
    6b59:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    6b5f:	0f b6 40 10          	movzbl 0x10(%eax),%eax
    6b63:	a8 01                	test   $0x1,%al
    6b65:	75 18                	jne    6b7f <EraseBlockMS+0x9f>
    6b67:	84 c0                	test   %al,%al
    6b69:	79 14                	jns    6b7f <EraseBlockMS+0x9f>
    6b6b:	89 74 24 04          	mov    %esi,0x4(%esp)
    6b6f:	31 c0                	xor    %eax,%eax
    6b71:	89 44 24 08          	mov    %eax,0x8(%esp)
    6b75:	89 1c 24             	mov    %ebx,(%esp)
    6b78:	e8 d3 f1 ff ff       	call   5d50 <PhyBlockUsedMS2>
    6b7d:	31 d2                	xor    %edx,%edx
    6b7f:	83 c4 14             	add    $0x14,%esp
    6b82:	89 d0                	mov    %edx,%eax
    6b84:	5b                   	pop    %ebx
    6b85:	5e                   	pop    %esi
    6b86:	c3                   	ret    
    6b87:	89 f6                	mov    %esi,%esi
    6b89:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00006b90 <ReadPageMS>:
    6b90:	55                   	push   %ebp
    6b91:	57                   	push   %edi
    6b92:	56                   	push   %esi
    6b93:	53                   	push   %ebx
    6b94:	83 ec 3c             	sub    $0x3c,%esp
    6b97:	8b 74 24 50          	mov    0x50(%esp),%esi
    6b9b:	0f b6 44 24 58       	movzbl 0x58(%esp),%eax
    6ba0:	0f b6 54 24 5c       	movzbl 0x5c(%esp),%edx
    6ba5:	0f b7 7c 24 54       	movzwl 0x54(%esp),%edi
    6baa:	88 44 24 3b          	mov    %al,0x3b(%esp)
    6bae:	0f b6 44 24 60       	movzbl 0x60(%esp),%eax
    6bb3:	88 54 24 28          	mov    %dl,0x28(%esp)
    6bb7:	88 44 24 27          	mov    %al,0x27(%esp)
    6bbb:	0f b6 da             	movzbl %dl,%ebx
    6bbe:	f6 c3 20             	test   $0x20,%bl
    6bc1:	0f 85 6c 04 00 00    	jne    7033 <ReadPageMS+0x4a3>
    6bc7:	f6 c3 01             	test   $0x1,%bl
    6bca:	0f 85 50 04 00 00    	jne    7020 <ReadPageMS+0x490>
    6bd0:	f6 c3 04             	test   $0x4,%bl
    6bd3:	0f 85 2d 04 00 00    	jne    7006 <ReadPageMS+0x476>
    6bd9:	0f b6 44 24 3b       	movzbl 0x3b(%esp),%eax
    6bde:	89 7c 24 04          	mov    %edi,0x4(%esp)
    6be2:	89 34 24             	mov    %esi,(%esp)
    6be5:	89 44 24 08          	mov    %eax,0x8(%esp)
    6be9:	e8 b2 fe ff ff       	call   6aa0 <SetAddressMS>
    6bee:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    6bf4:	8b 41 3c             	mov    0x3c(%ecx),%eax
    6bf7:	80 78 09 00          	cmpb   $0x0,0x9(%eax)
    6bfb:	74 18                	je     6c15 <ReadPageMS+0x85>
    6bfd:	89 0c 24             	mov    %ecx,(%esp)
    6c00:	e8 bb f8 ff ff       	call   64c0 <GetIntMS>
    6c05:	84 c0                	test   %al,%al
    6c07:	88 c3                	mov    %al,%bl
    6c09:	0f 85 01 01 00 00    	jne    6d10 <ReadPageMS+0x180>
    6c0f:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    6c15:	89 0c 24             	mov    %ecx,(%esp)
    6c18:	b8 01 00 00 00       	mov    $0x1,%eax
    6c1d:	bb 01 00 00 00       	mov    $0x1,%ebx
    6c22:	89 44 24 08          	mov    %eax,0x8(%esp)
    6c26:	31 d2                	xor    %edx,%edx
    6c28:	b8 aa 00 00 00       	mov    $0xaa,%eax
    6c2d:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    6c31:	89 54 24 0c          	mov    %edx,0xc(%esp)
    6c35:	89 44 24 04          	mov    %eax,0x4(%esp)
    6c39:	e8 82 fc ff ff       	call   68c0 <CmdMemoryStick>
    6c3e:	84 c0                	test   %al,%al
    6c40:	88 c3                	mov    %al,%bl
    6c42:	0f 85 c8 00 00 00    	jne    6d10 <ReadPageMS+0x180>
    6c48:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6c4e:	89 04 24             	mov    %eax,(%esp)
    6c51:	e8 6a f8 ff ff       	call   64c0 <GetIntMS>
    6c56:	84 c0                	test   %al,%al
    6c58:	88 c3                	mov    %al,%bl
    6c5a:	0f 85 b0 00 00 00    	jne    6d10 <ReadPageMS+0x180>
    6c60:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    6c66:	89 cd                	mov    %ecx,%ebp
    6c68:	0f b6 51 10          	movzbl 0x10(%ecx),%edx
    6c6c:	f6 c2 01             	test   $0x1,%dl
    6c6f:	88 54 24 14          	mov    %dl,0x14(%esp)
    6c73:	0f 85 7b 03 00 00    	jne    6ff4 <ReadPageMS+0x464>
    6c79:	80 7c 24 14 00       	cmpb   $0x0,0x14(%esp)
    6c7e:	78 0d                	js     6c8d <ReadPageMS+0xfd>
    6c80:	0f b6 44 24 28       	movzbl 0x28(%esp),%eax
    6c85:	a8 05                	test   $0x5,%al
    6c87:	0f 84 55 03 00 00    	je     6fe2 <ReadPageMS+0x452>
    6c8d:	f6 44 24 14 20       	testb  $0x20,0x14(%esp)
    6c92:	0f 84 38 03 00 00    	je     6fd0 <ReadPageMS+0x440>
    6c98:	f6 44 24 28 08       	testb  $0x8,0x28(%esp)
    6c9d:	74 41                	je     6ce0 <ReadPageMS+0x150>
    6c9f:	84 db                	test   %bl,%bl
    6ca1:	75 6d                	jne    6d10 <ReadPageMS+0x180>
    6ca3:	0f b6 44 24 3b       	movzbl 0x3b(%esp),%eax
    6ca8:	0f b6 56 08          	movzbl 0x8(%esi),%edx
    6cac:	40                   	inc    %eax
    6cad:	39 d0                	cmp    %edx,%eax
    6caf:	74 2f                	je     6ce0 <ReadPageMS+0x150>
    6cb1:	89 2c 24             	mov    %ebp,(%esp)
    6cb4:	31 c0                	xor    %eax,%eax
    6cb6:	89 44 24 10          	mov    %eax,0x10(%esp)
    6cba:	31 c0                	xor    %eax,%eax
    6cbc:	89 44 24 0c          	mov    %eax,0xc(%esp)
    6cc0:	b8 01 00 00 00       	mov    $0x1,%eax
    6cc5:	89 44 24 08          	mov    %eax,0x8(%esp)
    6cc9:	b8 33 00 00 00       	mov    $0x33,%eax
    6cce:	89 44 24 04          	mov    %eax,0x4(%esp)
    6cd2:	e8 e9 fb ff ff       	call   68c0 <CmdMemoryStick>
    6cd7:	84 c0                	test   %al,%al
    6cd9:	88 c3                	mov    %al,%bl
    6cdb:	75 33                	jne    6d10 <ReadPageMS+0x180>
    6cdd:	8d 76 00             	lea    0x0(%esi),%esi
    6ce0:	f6 44 24 14 40       	testb  $0x40,0x14(%esp)
    6ce5:	0f 85 68 01 00 00    	jne    6e53 <ReadPageMS+0x2c3>
    6ceb:	80 7c 24 27 00       	cmpb   $0x0,0x27(%esp)
    6cf0:	0f 85 ca 00 00 00    	jne    6dc0 <ReadPageMS+0x230>
    6cf6:	0f b6 6c 24 28       	movzbl 0x28(%esp),%ebp
    6cfb:	f7 c5 05 00 00 00    	test   $0x5,%ebp
    6d01:	74 18                	je     6d1b <ReadPageMS+0x18b>
    6d03:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6d09:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    6d10:	0f b6 c3             	movzbl %bl,%eax
    6d13:	83 c4 3c             	add    $0x3c,%esp
    6d16:	5b                   	pop    %ebx
    6d17:	5e                   	pop    %esi
    6d18:	5f                   	pop    %edi
    6d19:	5d                   	pop    %ebp
    6d1a:	c3                   	ret    
    6d1b:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6d21:	89 04 24             	mov    %eax,(%esp)
    6d24:	e8 a7 f8 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    6d29:	84 c0                	test   %al,%al
    6d2b:	88 c3                	mov    %al,%bl
    6d2d:	75 e1                	jne    6d10 <ReadPageMS+0x180>
    6d2f:	8b 96 64 44 00 00    	mov    0x4464(%esi),%edx
    6d35:	0f b6 42 25          	movzbl 0x25(%edx),%eax
    6d39:	88 44 24 14          	mov    %al,0x14(%esp)
    6d3d:	83 e0 60             	and    $0x60,%eax
    6d40:	83 f8 60             	cmp    $0x60,%eax
    6d43:	74 12                	je     6d57 <ReadPageMS+0x1c7>
    6d45:	83 e5 02             	and    $0x2,%ebp
    6d48:	74 07                	je     6d51 <ReadPageMS+0x1c1>
    6d4a:	80 7c 24 14 c0       	cmpb   $0xc0,0x14(%esp)
    6d4f:	74 06                	je     6d57 <ReadPageMS+0x1c7>
    6d51:	66 83 ff 02          	cmp    $0x2,%di
    6d55:	77 04                	ja     6d5b <ReadPageMS+0x1cb>
    6d57:	31 c0                	xor    %eax,%eax
    6d59:	eb b8                	jmp    6d13 <ReadPageMS+0x183>
    6d5b:	c6 42 25 7f          	movb   $0x7f,0x25(%edx)
    6d5f:	31 c0                	xor    %eax,%eax
    6d61:	bd 01 00 00 00       	mov    $0x1,%ebp
    6d66:	89 44 24 08          	mov    %eax,0x8(%esp)
    6d6a:	bb 01 00 00 00       	mov    $0x1,%ebx
    6d6f:	89 7c 24 04          	mov    %edi,0x4(%esp)
    6d73:	bf 01 00 00 00       	mov    $0x1,%edi
    6d78:	89 34 24             	mov    %esi,(%esp)
    6d7b:	e8 20 fd ff ff       	call   6aa0 <SetAddressMS>
    6d80:	89 34 24             	mov    %esi,(%esp)
    6d83:	b8 80 00 00 00       	mov    $0x80,%eax
    6d88:	89 44 24 04          	mov    %eax,0x4(%esp)
    6d8c:	e8 0f f8 ff ff       	call   65a0 <SetCmdParameterMS>
    6d91:	89 6c 24 10          	mov    %ebp,0x10(%esp)
    6d95:	b9 55 00 00 00       	mov    $0x55,%ecx
    6d9a:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    6d9e:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    6da2:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6da6:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6dac:	89 04 24             	mov    %eax,(%esp)
    6daf:	e8 0c fb ff ff       	call   68c0 <CmdMemoryStick>
    6db4:	b8 42 00 00 00       	mov    $0x42,%eax
    6db9:	e9 55 ff ff ff       	jmp    6d13 <ReadPageMS+0x183>
    6dbe:	89 f6                	mov    %esi,%esi
    6dc0:	b8 00 02 00 00       	mov    $0x200,%eax
    6dc5:	89 44 24 08          	mov    %eax,0x8(%esp)
    6dc9:	b8 02 00 00 00       	mov    $0x2,%eax
    6dce:	89 44 24 04          	mov    %eax,0x4(%esp)
    6dd2:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6dd8:	89 04 24             	mov    %eax,(%esp)
    6ddb:	e8 e0 f5 ff ff       	call   63c0 <TPCMemoryStick>
    6de0:	84 c0                	test   %al,%al
    6de2:	88 c3                	mov    %al,%bl
    6de4:	0f 85 26 ff ff ff    	jne    6d10 <ReadPageMS+0x180>
    6dea:	f6 44 24 28 08       	testb  $0x8,0x28(%esp)
    6def:	0f 84 01 ff ff ff    	je     6cf6 <ReadPageMS+0x166>
    6df5:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    6dfb:	31 ed                	xor    %ebp,%ebp
    6dfd:	89 0c 24             	mov    %ecx,(%esp)
    6e00:	e8 bb f6 ff ff       	call   64c0 <GetIntMS>
    6e05:	84 c0                	test   %al,%al
    6e07:	88 c3                	mov    %al,%bl
    6e09:	0f 85 01 ff ff ff    	jne    6d10 <ReadPageMS+0x180>
    6e0f:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    6e15:	80 79 10 00          	cmpb   $0x0,0x10(%ecx)
    6e19:	78 02                	js     6e1d <ReadPageMS+0x28d>
    6e1b:	b3 4f                	mov    $0x4f,%bl
    6e1d:	80 fb 4f             	cmp    $0x4f,%bl
    6e20:	75 0f                	jne    6e31 <ReadPageMS+0x2a1>
    6e22:	89 ea                	mov    %ebp,%edx
    6e24:	8d 45 01             	lea    0x1(%ebp),%eax
    6e27:	66 81 fa e7 03       	cmp    $0x3e7,%dx
    6e2c:	0f b7 e8             	movzwl %ax,%ebp
    6e2f:	76 cc                	jbe    6dfd <ReadPageMS+0x26d>
    6e31:	84 db                	test   %bl,%bl
    6e33:	0f 84 bd fe ff ff    	je     6cf6 <ReadPageMS+0x166>
    6e39:	c7 04 24 60 0f 00 00 	movl   $0xf60,(%esp)
			6e3c: R_386_32	.rodata.str1.32
    6e40:	0f b6 db             	movzbl %bl,%ebx
    6e43:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    6e47:	e8 fc ff ff ff       	call   6e48 <ReadPageMS+0x2b8>
			6e48: R_386_PC32	printk
    6e4c:	89 d8                	mov    %ebx,%eax
    6e4e:	e9 c0 fe ff ff       	jmp    6d13 <ReadPageMS+0x183>
    6e53:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6e59:	89 04 24             	mov    %eax,(%esp)
    6e5c:	e8 6f f7 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    6e61:	84 c0                	test   %al,%al
    6e63:	88 c3                	mov    %al,%bl
    6e65:	0f 85 a5 fe ff ff    	jne    6d10 <ReadPageMS+0x180>
    6e6b:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6e71:	89 04 24             	mov    %eax,(%esp)
    6e74:	e8 f7 f5 ff ff       	call   6470 <PrintRegistersMemoryStick>
    6e79:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    6e7f:	0f b6 51 12          	movzbl 0x12(%ecx),%edx
    6e83:	f6 c2 10             	test   $0x10,%dl
    6e86:	75 25                	jne    6ead <ReadPageMS+0x31d>
    6e88:	f6 c2 04             	test   $0x4,%dl
    6e8b:	b8 40 00 00 00       	mov    $0x40,%eax
    6e90:	0f 85 7d fe ff ff    	jne    6d13 <ReadPageMS+0x183>
    6e96:	f6 c2 01             	test   $0x1,%dl
    6e99:	0f 85 74 fe ff ff    	jne    6d13 <ReadPageMS+0x183>
    6e9f:	f6 c2 08             	test   $0x8,%dl
    6ea2:	0f 84 43 fe ff ff    	je     6ceb <ReadPageMS+0x15b>
    6ea8:	e9 66 fe ff ff       	jmp    6d13 <ReadPageMS+0x183>
    6ead:	0f b6 51 25          	movzbl 0x25(%ecx),%edx
    6eb1:	f6 d2                	not    %dl
    6eb3:	88 54 24 14          	mov    %dl,0x14(%esp)
    6eb7:	80 4c 24 14 3f       	orb    $0x3f,0x14(%esp)
    6ebc:	0f b6 44 24 28       	movzbl 0x28(%esp),%eax
    6ec1:	a8 05                	test   $0x5,%al
    6ec3:	0f 85 da 00 00 00    	jne    6fa3 <ReadPageMS+0x413>
    6ec9:	80 7c 24 14 ff       	cmpb   $0xff,0x14(%esp)
    6ece:	0f 84 c5 00 00 00    	je     6f99 <ReadPageMS+0x409>
    6ed4:	0f b6 54 24 14       	movzbl 0x14(%esp),%edx
    6ed9:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6edf:	88 50 25             	mov    %dl,0x25(%eax)
    6ee2:	0f b6 44 24 3b       	movzbl 0x3b(%esp),%eax
    6ee7:	89 7c 24 04          	mov    %edi,0x4(%esp)
    6eeb:	89 34 24             	mov    %esi,(%esp)
    6eee:	89 44 24 08          	mov    %eax,0x8(%esp)
    6ef2:	e8 a9 fb ff ff       	call   6aa0 <SetAddressMS>
    6ef7:	89 34 24             	mov    %esi,(%esp)
    6efa:	b8 80 00 00 00       	mov    $0x80,%eax
    6eff:	89 44 24 04          	mov    %eax,0x4(%esp)
    6f03:	e8 98 f6 ff ff       	call   65a0 <SetCmdParameterMS>
    6f08:	b8 01 00 00 00       	mov    $0x1,%eax
    6f0d:	89 44 24 10          	mov    %eax,0x10(%esp)
    6f11:	b8 01 00 00 00       	mov    $0x1,%eax
    6f16:	89 44 24 0c          	mov    %eax,0xc(%esp)
    6f1a:	b8 01 00 00 00       	mov    $0x1,%eax
    6f1f:	89 44 24 08          	mov    %eax,0x8(%esp)
    6f23:	b8 55 00 00 00       	mov    $0x55,%eax
    6f28:	89 44 24 04          	mov    %eax,0x4(%esp)
    6f2c:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6f32:	89 04 24             	mov    %eax,(%esp)
    6f35:	e8 86 f9 ff ff       	call   68c0 <CmdMemoryStick>
    6f3a:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6f40:	31 ed                	xor    %ebp,%ebp
    6f42:	bb 80 00 00 00       	mov    $0x80,%ebx
    6f47:	c6 40 25 7f          	movb   $0x7f,0x25(%eax)
    6f4b:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    6f4f:	89 7c 24 04          	mov    %edi,0x4(%esp)
    6f53:	89 34 24             	mov    %esi,(%esp)
    6f56:	e8 45 fb ff ff       	call   6aa0 <SetAddressMS>
    6f5b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    6f5f:	89 34 24             	mov    %esi,(%esp)
    6f62:	e8 39 f6 ff ff       	call   65a0 <SetCmdParameterMS>
    6f67:	b8 01 00 00 00       	mov    $0x1,%eax
    6f6c:	b9 01 00 00 00       	mov    $0x1,%ecx
    6f71:	ba 01 00 00 00       	mov    $0x1,%edx
    6f76:	89 44 24 08          	mov    %eax,0x8(%esp)
    6f7a:	b8 55 00 00 00       	mov    $0x55,%eax
    6f7f:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    6f83:	89 54 24 0c          	mov    %edx,0xc(%esp)
    6f87:	89 44 24 04          	mov    %eax,0x4(%esp)
    6f8b:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    6f91:	89 04 24             	mov    %eax,(%esp)
    6f94:	e8 27 f9 ff ff       	call   68c0 <CmdMemoryStick>
    6f99:	b8 43 00 00 00       	mov    $0x43,%eax
    6f9e:	e9 70 fd ff ff       	jmp    6d13 <ReadPageMS+0x183>
    6fa3:	89 0c 24             	mov    %ecx,(%esp)
    6fa6:	31 ed                	xor    %ebp,%ebp
    6fa8:	31 db                	xor    %ebx,%ebx
    6faa:	89 6c 24 10          	mov    %ebp,0x10(%esp)
    6fae:	ba 01 00 00 00       	mov    $0x1,%edx
    6fb3:	b8 33 00 00 00       	mov    $0x33,%eax
    6fb8:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    6fbc:	89 54 24 08          	mov    %edx,0x8(%esp)
    6fc0:	89 44 24 04          	mov    %eax,0x4(%esp)
    6fc4:	e8 f7 f8 ff ff       	call   68c0 <CmdMemoryStick>
    6fc9:	e9 fb fe ff ff       	jmp    6ec9 <ReadPageMS+0x339>
    6fce:	89 f6                	mov    %esi,%esi
    6fd0:	89 2c 24             	mov    %ebp,(%esp)
    6fd3:	e8 98 f4 ff ff       	call   6470 <PrintRegistersMemoryStick>
    6fd8:	b8 4e 00 00 00       	mov    $0x4e,%eax
    6fdd:	e9 31 fd ff ff       	jmp    6d13 <ReadPageMS+0x183>
    6fe2:	89 0c 24             	mov    %ecx,(%esp)
    6fe5:	e8 86 f4 ff ff       	call   6470 <PrintRegistersMemoryStick>
    6fea:	b8 4f 00 00 00       	mov    $0x4f,%eax
    6fef:	e9 1f fd ff ff       	jmp    6d13 <ReadPageMS+0x183>
    6ff4:	89 0c 24             	mov    %ecx,(%esp)
    6ff7:	e8 74 f4 ff ff       	call   6470 <PrintRegistersMemoryStick>
    6ffc:	b8 49 00 00 00       	mov    $0x49,%eax
    7001:	e9 0d fd ff ff       	jmp    6d13 <ReadPageMS+0x183>
    7006:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    700c:	89 04 24             	mov    %eax,(%esp)
    700f:	e8 ec f1 ff ff       	call   6200 <WaitForMSINT>
    7014:	e9 25 fc ff ff       	jmp    6c3e <ReadPageMS+0xae>
    7019:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    7020:	89 34 24             	mov    %esi,(%esp)
    7023:	31 ed                	xor    %ebp,%ebp
    7025:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    7029:	e8 72 f5 ff ff       	call   65a0 <SetCmdParameterMS>
    702e:	e9 9d fb ff ff       	jmp    6bd0 <ReadPageMS+0x40>
    7033:	89 34 24             	mov    %esi,(%esp)
    7036:	b8 20 00 00 00       	mov    $0x20,%eax
    703b:	89 44 24 04          	mov    %eax,0x4(%esp)
    703f:	e8 5c f5 ff ff       	call   65a0 <SetCmdParameterMS>
    7044:	e9 7e fb ff ff       	jmp    6bc7 <ReadPageMS+0x37>
    7049:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00007050 <MakeLUTMS>:
    7050:	55                   	push   %ebp
    7051:	57                   	push   %edi
    7052:	56                   	push   %esi
    7053:	53                   	push   %ebx
    7054:	83 ec 34             	sub    $0x34,%esp
    7057:	8b 7c 24 48          	mov    0x48(%esp),%edi
    705b:	b8 ff 00 00 00       	mov    $0xff,%eax
    7060:	85 ff                	test   %edi,%edi
    7062:	74 13                	je     7077 <MakeLUTMS+0x27>
    7064:	0f b7 5f 5e          	movzwl 0x5e(%edi),%ebx
    7068:	0f b7 77 02          	movzwl 0x2(%edi),%esi
    706c:	66 39 f3             	cmp    %si,%bx
    706f:	72 0f                	jb     7080 <MakeLUTMS+0x30>
    7071:	c6 47 60 01          	movb   $0x1,0x60(%edi)
    7075:	31 c0                	xor    %eax,%eax
    7077:	83 c4 34             	add    $0x34,%esp
    707a:	5b                   	pop    %ebx
    707b:	5e                   	pop    %esi
    707c:	5f                   	pop    %edi
    707d:	5d                   	pop    %ebp
    707e:	c3                   	ret    
    707f:	90                   	nop    
    7080:	89 3c 24             	mov    %edi,(%esp)
    7083:	0f b7 c3             	movzwl %bx,%eax
    7086:	89 44 24 04          	mov    %eax,0x4(%esp)
    708a:	e8 81 ec ff ff       	call   5d10 <PhyBlockUsedMS1>
    708f:	84 c0                	test   %al,%al
    7091:	0f 84 a9 00 00 00    	je     7140 <MakeLUTMS+0xf0>
    7097:	8d 43 01             	lea    0x1(%ebx),%eax
    709a:	66 39 c6             	cmp    %ax,%si
    709d:	66 89 47 5e          	mov    %ax,0x5e(%edi)
    70a1:	75 d2                	jne    7075 <MakeLUTMS+0x25>
    70a3:	31 d2                	xor    %edx,%edx
    70a5:	8d 74 26 00          	lea    0x0(%esi),%esi
    70a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    70b0:	0f b6 c2             	movzbl %dl,%eax
    70b3:	fe c2                	inc    %dl
    70b5:	0f b7 44 47 0e       	movzwl 0xe(%edi,%eax,2),%eax
    70ba:	66 89 47 2e          	mov    %ax,0x2e(%edi)
    70be:	66 40                	inc    %ax
    70c0:	75 10                	jne    70d2 <MakeLUTMS+0x82>
    70c2:	0f b6 0f             	movzbl (%edi),%ecx
    70c5:	38 ca                	cmp    %cl,%dl
    70c7:	72 e7                	jb     70b0 <MakeLUTMS+0x60>
    70c9:	38 ca                	cmp    %cl,%dl
    70cb:	b8 84 00 00 00       	mov    $0x84,%eax
    70d0:	74 a5                	je     7077 <MakeLUTMS+0x27>
    70d2:	0f b7 77 04          	movzwl 0x4(%edi),%esi
    70d6:	31 db                	xor    %ebx,%ebx
    70d8:	66 83 fe 00          	cmp    $0x0,%si
    70dc:	76 1d                	jbe    70fb <MakeLUTMS+0xab>
    70de:	89 f6                	mov    %esi,%esi
    70e0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    70e4:	89 3c 24             	mov    %edi,(%esp)
    70e7:	e8 d4 ec ff ff       	call   5dc0 <LUTGetPhyBlockMS>
    70ec:	66 40                	inc    %ax
    70ee:	74 33                	je     7123 <MakeLUTMS+0xd3>
    70f0:	8d 43 01             	lea    0x1(%ebx),%eax
    70f3:	0f b7 d8             	movzwl %ax,%ebx
    70f6:	66 39 de             	cmp    %bx,%si
    70f9:	77 e5                	ja     70e0 <MakeLUTMS+0x90>
    70fb:	b8 01 00 00 00       	mov    $0x1,%eax
    7100:	89 44 24 08          	mov    %eax,0x8(%esp)
    7104:	0f b7 47 2e          	movzwl 0x2e(%edi),%eax
    7108:	89 3c 24             	mov    %edi,(%esp)
    710b:	89 44 24 04          	mov    %eax,0x4(%esp)
    710f:	e8 3c ec ff ff       	call   5d50 <PhyBlockUsedMS2>
    7114:	c6 47 60 01          	movb   $0x1,0x60(%edi)
    7118:	66 c7 47 5e 00 00    	movw   $0x0,0x5e(%edi)
    711e:	e9 52 ff ff ff       	jmp    7075 <MakeLUTMS+0x25>
    7123:	0f b7 47 2e          	movzwl 0x2e(%edi),%eax
    7127:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    712b:	89 3c 24             	mov    %edi,(%esp)
    712e:	89 44 24 08          	mov    %eax,0x8(%esp)
    7132:	e8 69 ec ff ff       	call   5da0 <LUTSetPhyBlockMS>
    7137:	0f b7 77 04          	movzwl 0x4(%edi),%esi
    713b:	eb b3                	jmp    70f0 <MakeLUTMS+0xa0>
    713d:	8d 76 00             	lea    0x0(%esi),%esi
    7140:	ba 01 00 00 00       	mov    $0x1,%edx
    7145:	89 54 24 04          	mov    %edx,0x4(%esp)
    7149:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    714f:	8b 40 3c             	mov    0x3c(%eax),%eax
    7152:	8b 40 28             	mov    0x28(%eax),%eax
    7155:	89 04 24             	mov    %eax,(%esp)
    7158:	e8 fc ff ff ff       	call   7159 <MakeLUTMS+0x109>
			7159: R_386_PC32	FIFO_CONTROL_SOCK2
    715d:	b8 00 01 00 00       	mov    $0x100,%eax
    7162:	89 44 24 04          	mov    %eax,0x4(%esp)
    7166:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    716c:	8b 40 3c             	mov    0x3c(%eax),%eax
    716f:	8b 40 28             	mov    0x28(%eax),%eax
    7172:	89 04 24             	mov    %eax,(%esp)
    7175:	e8 fc ff ff ff       	call   7176 <MakeLUTMS+0x126>
			7176: R_386_PC32	DMA_CONTROL_SOCK2
    717a:	b8 01 00 00 00       	mov    $0x1,%eax
    717f:	89 44 24 10          	mov    %eax,0x10(%esp)
    7183:	b8 20 00 00 00       	mov    $0x20,%eax
    7188:	89 44 24 0c          	mov    %eax,0xc(%esp)
    718c:	31 c0                	xor    %eax,%eax
    718e:	89 44 24 08          	mov    %eax,0x8(%esp)
    7192:	0f b7 47 5e          	movzwl 0x5e(%edi),%eax
    7196:	89 3c 24             	mov    %edi,(%esp)
    7199:	89 44 24 04          	mov    %eax,0x4(%esp)
    719d:	e8 ee f9 ff ff       	call   6b90 <ReadPageMS>
    71a2:	8b 97 64 44 00 00    	mov    0x4464(%edi),%edx
    71a8:	88 c3                	mov    %al,%bl
    71aa:	8b 42 3c             	mov    0x3c(%edx),%eax
    71ad:	80 78 06 00          	cmpb   $0x0,0x6(%eax)
    71b1:	0f 85 e1 01 00 00    	jne    7398 <MakeLUTMS+0x348>
    71b7:	84 db                	test   %bl,%bl
    71b9:	74 73                	je     722e <MakeLUTMS+0x1de>
    71bb:	89 14 24             	mov    %edx,(%esp)
    71be:	b8 01 00 00 00       	mov    $0x1,%eax
    71c3:	31 ed                	xor    %ebp,%ebp
    71c5:	89 44 24 10          	mov    %eax,0x10(%esp)
    71c9:	be 3c 00 00 00       	mov    $0x3c,%esi
    71ce:	bb 00 1f 00 1f       	mov    $0x1f001f00,%ebx
    71d3:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    71d7:	b8 01 00 00 00       	mov    $0x1,%eax
    71dc:	89 74 24 04          	mov    %esi,0x4(%esp)
    71e0:	89 44 24 0c          	mov    %eax,0xc(%esp)
    71e4:	e8 d7 f6 ff ff       	call   68c0 <CmdMemoryStick>
    71e9:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    71ef:	c7 40 30 10 40 00 00 	movl   $0x4010,0x30(%eax)
    71f6:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    71fa:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    7200:	89 04 24             	mov    %eax,(%esp)
    7203:	e8 58 f4 ff ff       	call   6660 <SetRWRegAddrsMemoryStick>
    7208:	b8 01 00 00 00       	mov    $0x1,%eax
    720d:	89 44 24 08          	mov    %eax,0x8(%esp)
    7211:	0f b7 47 5e          	movzwl 0x5e(%edi),%eax
    7215:	89 3c 24             	mov    %edi,(%esp)
    7218:	89 44 24 04          	mov    %eax,0x4(%esp)
    721c:	e8 2f eb ff ff       	call   5d50 <PhyBlockUsedMS2>
    7221:	0f b7 5f 5e          	movzwl 0x5e(%edi),%ebx
    7225:	0f b7 77 02          	movzwl 0x2(%edi),%esi
    7229:	e9 69 fe ff ff       	jmp    7097 <MakeLUTMS+0x47>
    722e:	89 14 24             	mov    %edx,(%esp)
    7231:	e8 9a f3 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    7236:	8b b7 64 44 00 00    	mov    0x4464(%edi),%esi
    723c:	0f b6 56 25          	movzbl 0x25(%esi),%edx
    7240:	0f b6 c2             	movzbl %dl,%eax
    7243:	89 c1                	mov    %eax,%ecx
    7245:	80 ca 0f             	or     $0xf,%dl
    7248:	83 e0 60             	and    $0x60,%eax
    724b:	c1 e9 07             	shr    $0x7,%ecx
    724e:	88 4c 24 24          	mov    %cl,0x24(%esp)
    7252:	c1 e8 05             	shr    $0x5,%eax
    7255:	fe c2                	inc    %dl
    7257:	88 44 24 14          	mov    %al,0x14(%esp)
    725b:	74 4f                	je     72ac <MakeLUTMS+0x25c>
    725d:	89 34 24             	mov    %esi,(%esp)
    7260:	31 c0                	xor    %eax,%eax
    7262:	b9 01 00 00 00       	mov    $0x1,%ecx
    7267:	89 44 24 08          	mov    %eax,0x8(%esp)
    726b:	ba 01 00 00 00       	mov    $0x1,%edx
    7270:	b3 ff                	mov    $0xff,%bl
    7272:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    7276:	b8 3c 00 00 00       	mov    $0x3c,%eax
    727b:	89 54 24 0c          	mov    %edx,0xc(%esp)
    727f:	89 44 24 04          	mov    %eax,0x4(%esp)
    7283:	e8 38 f6 ff ff       	call   68c0 <CmdMemoryStick>
    7288:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    728e:	c7 40 30 10 40 00 00 	movl   $0x4010,0x30(%eax)
    7295:	b8 00 1f 00 1f       	mov    $0x1f001f00,%eax
    729a:	89 44 24 04          	mov    %eax,0x4(%esp)
    729e:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    72a4:	89 04 24             	mov    %eax,(%esp)
    72a7:	e8 b4 f3 ff ff       	call   6660 <SetRWRegAddrsMemoryStick>
    72ac:	80 7c 24 24 00       	cmpb   $0x0,0x24(%esp)
    72b1:	0f 84 51 ff ff ff    	je     7208 <MakeLUTMS+0x1b8>
    72b7:	80 7c 24 14 03       	cmpb   $0x3,0x14(%esp)
    72bc:	0f 85 46 ff ff ff    	jne    7208 <MakeLUTMS+0x1b8>
    72c2:	84 db                	test   %bl,%bl
    72c4:	0f 85 3e ff ff ff    	jne    7208 <MakeLUTMS+0x1b8>
    72ca:	8b b7 64 44 00 00    	mov    0x4464(%edi),%esi
    72d0:	0f b6 46 27          	movzbl 0x27(%esi),%eax
    72d4:	66 0f b6 56 28       	movzbw 0x28(%esi),%dx
    72d9:	c1 e0 08             	shl    $0x8,%eax
    72dc:	09 d0                	or     %edx,%eax
    72de:	0f b7 d8             	movzwl %ax,%ebx
    72e1:	66 83 fb ff          	cmp    $0xffffffff,%bx
    72e5:	0f 84 88 00 00 00    	je     7373 <MakeLUTMS+0x323>
    72eb:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    72ef:	89 3c 24             	mov    %edi,(%esp)
    72f2:	e8 c9 ea ff ff       	call   5dc0 <LUTGetPhyBlockMS>
    72f7:	0f b7 e8             	movzwl %ax,%ebp
    72fa:	66 83 fd ff          	cmp    $0xffffffff,%bp
    72fe:	74 5a                	je     735a <MakeLUTMS+0x30a>
    7300:	f6 46 25 10          	testb  $0x10,0x25(%esi)
    7304:	74 4e                	je     7354 <MakeLUTMS+0x304>
    7306:	0f b7 47 5e          	movzwl 0x5e(%edi),%eax
    730a:	66 39 e8             	cmp    %bp,%ax
    730d:	76 2f                	jbe    733e <MakeLUTMS+0x2ee>
    730f:	0f b7 c0             	movzwl %ax,%eax
    7312:	89 44 24 08          	mov    %eax,0x8(%esp)
    7316:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    731a:	89 3c 24             	mov    %edi,(%esp)
    731d:	e8 7e ea ff ff       	call   5da0 <LUTSetPhyBlockMS>
    7322:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    7326:	89 3c 24             	mov    %edi,(%esp)
    7329:	e8 b2 f7 ff ff       	call   6ae0 <EraseBlockMS>
    732e:	84 c0                	test   %al,%al
    7330:	0f 84 d2 fe ff ff    	je     7208 <MakeLUTMS+0x1b8>
    7336:	0f b6 c0             	movzbl %al,%eax
    7339:	e9 39 fd ff ff       	jmp    7077 <MakeLUTMS+0x27>
    733e:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    7342:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    7346:	89 3c 24             	mov    %edi,(%esp)
    7349:	e8 52 ea ff ff       	call   5da0 <LUTSetPhyBlockMS>
    734e:	0f b7 6f 5e          	movzwl 0x5e(%edi),%ebp
    7352:	eb ce                	jmp    7322 <MakeLUTMS+0x2d2>
    7354:	0f b7 47 5e          	movzwl 0x5e(%edi),%eax
    7358:	eb b8                	jmp    7312 <MakeLUTMS+0x2c2>
    735a:	0f b7 47 5e          	movzwl 0x5e(%edi),%eax
    735e:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    7362:	89 3c 24             	mov    %edi,(%esp)
    7365:	89 44 24 08          	mov    %eax,0x8(%esp)
    7369:	e8 32 ea ff ff       	call   5da0 <LUTSetPhyBlockMS>
    736e:	e9 95 fe ff ff       	jmp    7208 <MakeLUTMS+0x1b8>
    7373:	0f b7 5f 5e          	movzwl 0x5e(%edi),%ebx
    7377:	0f b7 c3             	movzwl %bx,%eax
    737a:	89 c2                	mov    %eax,%edx
    737c:	c1 ea 09             	shr    $0x9,%edx
    737f:	0f b6 c2             	movzbl %dl,%eax
    7382:	66 83 7c 47 0e ff    	cmpw   $0xffffffff,0xe(%edi,%eax,2)
    7388:	0f 85 97 fe ff ff    	jne    7225 <MakeLUTMS+0x1d5>
    738e:	66 89 5c 47 0e       	mov    %bx,0xe(%edi,%eax,2)
    7393:	e9 8d fe ff ff       	jmp    7225 <MakeLUTMS+0x1d5>
    7398:	b8 86 00 00 00       	mov    $0x86,%eax
    739d:	e9 d5 fc ff ff       	jmp    7077 <MakeLUTMS+0x27>
    73a2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    73a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000073b0 <FindBootBlocksMS>:
    73b0:	53                   	push   %ebx
    73b1:	83 ec 18             	sub    $0x18,%esp
    73b4:	8b 5c 24 20          	mov    0x20(%esp),%ebx
    73b8:	c6 44 24 16 00       	movb   $0x0,0x16(%esp)
    73bd:	c6 44 24 15 00       	movb   $0x0,0x15(%esp)
    73c2:	b8 ff 00 00 00       	mov    $0xff,%eax
    73c7:	85 db                	test   %ebx,%ebx
    73c9:	0f 84 fb 00 00 00    	je     74ca <FindBootBlocksMS+0x11a>
    73cf:	90                   	nop    
    73d0:	b8 01 00 00 00       	mov    $0x1,%eax
    73d5:	89 44 24 04          	mov    %eax,0x4(%esp)
    73d9:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    73df:	8b 40 3c             	mov    0x3c(%eax),%eax
    73e2:	8b 40 28             	mov    0x28(%eax),%eax
    73e5:	89 04 24             	mov    %eax,(%esp)
    73e8:	e8 fc ff ff ff       	call   73e9 <FindBootBlocksMS+0x39>
			73e9: R_386_PC32	FIFO_CONTROL_SOCK2
    73ed:	b8 00 01 00 00       	mov    $0x100,%eax
    73f2:	89 44 24 04          	mov    %eax,0x4(%esp)
    73f6:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    73fc:	8b 40 3c             	mov    0x3c(%eax),%eax
    73ff:	8b 40 28             	mov    0x28(%eax),%eax
    7402:	89 04 24             	mov    %eax,(%esp)
    7405:	e8 fc ff ff ff       	call   7406 <FindBootBlocksMS+0x56>
			7406: R_386_PC32	DMA_CONTROL_SOCK2
    740a:	89 1c 24             	mov    %ebx,(%esp)
    740d:	31 c0                	xor    %eax,%eax
    740f:	b9 01 00 00 00       	mov    $0x1,%ecx
    7414:	89 44 24 08          	mov    %eax,0x8(%esp)
    7418:	ba 22 00 00 00       	mov    $0x22,%edx
    741d:	0f b6 44 24 16       	movzbl 0x16(%esp),%eax
    7422:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    7426:	89 54 24 0c          	mov    %edx,0xc(%esp)
    742a:	89 44 24 04          	mov    %eax,0x4(%esp)
    742e:	e8 5d f7 ff ff       	call   6b90 <ReadPageMS>
    7433:	88 44 24 17          	mov    %al,0x17(%esp)
    7437:	84 c0                	test   %al,%al
    7439:	0f 84 91 00 00 00    	je     74d0 <FindBootBlocksMS+0x120>
    743f:	b8 01 00 00 00       	mov    $0x1,%eax
    7444:	89 44 24 10          	mov    %eax,0x10(%esp)
    7448:	b8 01 00 00 00       	mov    $0x1,%eax
    744d:	89 44 24 0c          	mov    %eax,0xc(%esp)
    7451:	31 c0                	xor    %eax,%eax
    7453:	89 44 24 08          	mov    %eax,0x8(%esp)
    7457:	b8 3c 00 00 00       	mov    $0x3c,%eax
    745c:	89 44 24 04          	mov    %eax,0x4(%esp)
    7460:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7466:	89 04 24             	mov    %eax,(%esp)
    7469:	e8 52 f4 ff ff       	call   68c0 <CmdMemoryStick>
    746e:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7474:	c7 40 30 10 40 00 00 	movl   $0x4010,0x30(%eax)
    747b:	b8 00 1f 00 1f       	mov    $0x1f001f00,%eax
    7480:	89 44 24 04          	mov    %eax,0x4(%esp)
    7484:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    748a:	89 04 24             	mov    %eax,(%esp)
    748d:	e8 ce f1 ff ff       	call   6660 <SetRWRegAddrsMemoryStick>
    7492:	fe 44 24 16          	incb   0x16(%esp)
    7496:	80 7c 24 15 01       	cmpb   $0x1,0x15(%esp)
    749b:	77 0b                	ja     74a8 <FindBootBlocksMS+0xf8>
    749d:	80 7c 24 16 09       	cmpb   $0x9,0x16(%esp)
    74a2:	0f 86 28 ff ff ff    	jbe    73d0 <FindBootBlocksMS+0x20>
    74a8:	80 7c 24 15 00       	cmpb   $0x0,0x15(%esp)
    74ad:	74 11                	je     74c0 <FindBootBlocksMS+0x110>
    74af:	80 7c 24 17 00       	cmpb   $0x0,0x17(%esp)
    74b4:	74 0f                	je     74c5 <FindBootBlocksMS+0x115>
    74b6:	8d 76 00             	lea    0x0(%esi),%esi
    74b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    74c0:	c6 44 24 17 ff       	movb   $0xff,0x17(%esp)
    74c5:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
    74ca:	83 c4 18             	add    $0x18,%esp
    74cd:	5b                   	pop    %ebx
    74ce:	c3                   	ret    
    74cf:	90                   	nop    
    74d0:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    74d6:	89 04 24             	mov    %eax,(%esp)
    74d9:	e8 f2 f0 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    74de:	84 c0                	test   %al,%al
    74e0:	75 b0                	jne    7492 <FindBootBlocksMS+0xe2>
    74e2:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    74e8:	f6 40 26 40          	testb  $0x40,0x26(%eax)
    74ec:	74 a4                	je     7492 <FindBootBlocksMS+0xe2>
    74ee:	31 c9                	xor    %ecx,%ecx
    74f0:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    74f4:	8b 40 3c             	mov    0x3c(%eax),%eax
    74f7:	8b 40 28             	mov    0x28(%eax),%eax
    74fa:	89 04 24             	mov    %eax,(%esp)
    74fd:	e8 fc ff ff ff       	call   74fe <FindBootBlocksMS+0x14e>
			74fe: R_386_PC32	FIFO_ACCESS_SOCK2
    7502:	c1 e8 10             	shr    $0x10,%eax
    7505:	66 48                	dec    %ax
    7507:	75 89                	jne    7492 <FindBootBlocksMS+0xe2>
    7509:	0f b6 54 24 15       	movzbl 0x15(%esp),%edx
    750e:	66 0f b6 44 24 16    	movzbw 0x16(%esp),%ax
    7514:	66 89 44 53 0a       	mov    %ax,0xa(%ebx,%edx,2)
    7519:	fe 44 24 15          	incb   0x15(%esp)
    751d:	e9 70 ff ff ff       	jmp    7492 <FindBootBlocksMS+0xe2>
    7522:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    7529:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00007530 <MediaModelMS>:
    7530:	57                   	push   %edi
    7531:	56                   	push   %esi
    7532:	53                   	push   %ebx
    7533:	83 ec 14             	sub    $0x14,%esp
    7536:	8b 7c 24 24          	mov    0x24(%esp),%edi
    753a:	b8 ff 00 00 00       	mov    $0xff,%eax
    753f:	85 ff                	test   %edi,%edi
    7541:	74 69                	je     75ac <MediaModelMS+0x7c>
    7543:	ba 01 00 00 00       	mov    $0x1,%edx
    7548:	89 54 24 04          	mov    %edx,0x4(%esp)
    754c:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    7552:	8b 40 3c             	mov    0x3c(%eax),%eax
    7555:	8b 40 28             	mov    0x28(%eax),%eax
    7558:	89 04 24             	mov    %eax,(%esp)
    755b:	e8 fc ff ff ff       	call   755c <MediaModelMS+0x2c>
			755c: R_386_PC32	FIFO_CONTROL_SOCK2
    7560:	b8 00 01 00 00       	mov    $0x100,%eax
    7565:	89 44 24 04          	mov    %eax,0x4(%esp)
    7569:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    756f:	8b 40 3c             	mov    0x3c(%eax),%eax
    7572:	8b 40 28             	mov    0x28(%eax),%eax
    7575:	89 04 24             	mov    %eax,(%esp)
    7578:	e8 fc ff ff ff       	call   7579 <MediaModelMS+0x49>
			7579: R_386_PC32	DMA_CONTROL_SOCK2
    757d:	b8 01 00 00 00       	mov    $0x1,%eax
    7582:	89 44 24 10          	mov    %eax,0x10(%esp)
    7586:	b8 22 00 00 00       	mov    $0x22,%eax
    758b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    758f:	31 c0                	xor    %eax,%eax
    7591:	89 44 24 08          	mov    %eax,0x8(%esp)
    7595:	0f b7 47 0a          	movzwl 0xa(%edi),%eax
    7599:	89 3c 24             	mov    %edi,(%esp)
    759c:	89 44 24 04          	mov    %eax,0x4(%esp)
    75a0:	e8 eb f5 ff ff       	call   6b90 <ReadPageMS>
    75a5:	84 c0                	test   %al,%al
    75a7:	74 0a                	je     75b3 <MediaModelMS+0x83>
    75a9:	0f b6 c0             	movzbl %al,%eax
    75ac:	83 c4 14             	add    $0x14,%esp
    75af:	5b                   	pop    %ebx
    75b0:	5e                   	pop    %esi
    75b1:	5f                   	pop    %edi
    75b2:	c3                   	ret    
    75b3:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    75b9:	89 04 24             	mov    %eax,(%esp)
    75bc:	e8 0f f0 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    75c1:	84 c0                	test   %al,%al
    75c3:	75 e4                	jne    75a9 <MediaModelMS+0x79>
    75c5:	b8 a3 01 00 00       	mov    $0x1a3,%eax
    75ca:	be a5 01 00 00       	mov    $0x1a5,%esi
    75cf:	bb a6 01 00 00       	mov    $0x1a6,%ebx
    75d4:	89 44 24 04          	mov    %eax,0x4(%esp)
    75d8:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    75de:	8b 40 3c             	mov    0x3c(%eax),%eax
    75e1:	8b 40 28             	mov    0x28(%eax),%eax
    75e4:	89 04 24             	mov    %eax,(%esp)
    75e7:	e8 fc ff ff ff       	call   75e8 <MediaModelMS+0xb8>
			75e8: R_386_PC32	FIFO_BYTE_ACCESS_SOCK1
    75ec:	00 c0                	add    %al,%al
    75ee:	88 47 08             	mov    %al,0x8(%edi)
    75f1:	b8 a4 01 00 00       	mov    $0x1a4,%eax
    75f6:	89 44 24 04          	mov    %eax,0x4(%esp)
    75fa:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    7600:	8b 40 3c             	mov    0x3c(%eax),%eax
    7603:	8b 40 28             	mov    0x28(%eax),%eax
    7606:	89 04 24             	mov    %eax,(%esp)
    7609:	e8 fc ff ff ff       	call   760a <MediaModelMS+0xda>
			760a: R_386_PC32	FIFO_BYTE_ACCESS_SOCK1
    760e:	c1 e0 08             	shl    $0x8,%eax
    7611:	66 89 47 02          	mov    %ax,0x2(%edi)
    7615:	89 74 24 04          	mov    %esi,0x4(%esp)
    7619:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    761f:	8b 40 3c             	mov    0x3c(%eax),%eax
    7622:	8b 40 28             	mov    0x28(%eax),%eax
    7625:	89 04 24             	mov    %eax,(%esp)
    7628:	e8 fc ff ff ff       	call   7629 <MediaModelMS+0xf9>
			7629: R_386_PC32	FIFO_BYTE_ACCESS_SOCK1
    762d:	66 0f b6 d0          	movzbw %al,%dx
    7631:	0f b7 47 02          	movzwl 0x2(%edi),%eax
    7635:	01 d0                	add    %edx,%eax
    7637:	66 89 47 02          	mov    %ax,0x2(%edi)
    763b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    763f:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    7645:	8b 40 3c             	mov    0x3c(%eax),%eax
    7648:	8b 40 28             	mov    0x28(%eax),%eax
    764b:	89 04 24             	mov    %eax,(%esp)
    764e:	e8 fc ff ff ff       	call   764f <MediaModelMS+0x11f>
			764f: R_386_PC32	FIFO_BYTE_ACCESS_SOCK1
    7653:	c1 e0 08             	shl    $0x8,%eax
    7656:	b9 a7 01 00 00       	mov    $0x1a7,%ecx
    765b:	66 89 47 06          	mov    %ax,0x6(%edi)
    765f:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    7663:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    7669:	8b 40 3c             	mov    0x3c(%eax),%eax
    766c:	8b 40 28             	mov    0x28(%eax),%eax
    766f:	89 04 24             	mov    %eax,(%esp)
    7672:	e8 fc ff ff ff       	call   7673 <MediaModelMS+0x143>
			7673: R_386_PC32	FIFO_BYTE_ACCESS_SOCK1
    7677:	66 0f b6 d0          	movzbw %al,%dx
    767b:	0f b7 47 06          	movzwl 0x6(%edi),%eax
    767f:	01 d0                	add    %edx,%eax
    7681:	ba b5 01 00 00       	mov    $0x1b5,%edx
    7686:	66 89 47 06          	mov    %ax,0x6(%edi)
    768a:	83 e8 04             	sub    $0x4,%eax
    768d:	66 89 47 04          	mov    %ax,0x4(%edi)
    7691:	0f b7 47 02          	movzwl 0x2(%edi),%eax
    7695:	c1 e8 09             	shr    $0x9,%eax
    7698:	88 07                	mov    %al,(%edi)
    769a:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    76a0:	8b 70 3c             	mov    0x3c(%eax),%esi
    76a3:	89 54 24 04          	mov    %edx,0x4(%esp)
    76a7:	8b 40 3c             	mov    0x3c(%eax),%eax
    76aa:	8b 40 28             	mov    0x28(%eax),%eax
    76ad:	89 04 24             	mov    %eax,(%esp)
    76b0:	e8 fc ff ff ff       	call   76b1 <MediaModelMS+0x181>
			76b1: R_386_PC32	FIFO_BYTE_ACCESS_SOCK1
    76b5:	0f b6 d8             	movzbl %al,%ebx
    76b8:	b8 b6 01 00 00       	mov    $0x1b6,%eax
    76bd:	c1 e3 10             	shl    $0x10,%ebx
    76c0:	89 44 24 04          	mov    %eax,0x4(%esp)
    76c4:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    76ca:	8b 40 3c             	mov    0x3c(%eax),%eax
    76cd:	8b 40 28             	mov    0x28(%eax),%eax
    76d0:	89 04 24             	mov    %eax,(%esp)
    76d3:	e8 fc ff ff ff       	call   76d4 <MediaModelMS+0x1a4>
			76d4: R_386_PC32	FIFO_BYTE_ACCESS_SOCK1
    76d8:	0f b6 c0             	movzbl %al,%eax
    76db:	c1 e0 08             	shl    $0x8,%eax
    76de:	01 c3                	add    %eax,%ebx
    76e0:	b8 b7 01 00 00       	mov    $0x1b7,%eax
    76e5:	89 44 24 04          	mov    %eax,0x4(%esp)
    76e9:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    76ef:	8b 40 3c             	mov    0x3c(%eax),%eax
    76f2:	8b 40 28             	mov    0x28(%eax),%eax
    76f5:	89 04 24             	mov    %eax,(%esp)
    76f8:	e8 fc ff ff ff       	call   76f9 <MediaModelMS+0x1c9>
			76f9: R_386_PC32	FIFO_BYTE_ACCESS_SOCK1
    76fd:	0f b6 c0             	movzbl %al,%eax
    7700:	01 c3                	add    %eax,%ebx
    7702:	31 c0                	xor    %eax,%eax
    7704:	89 5e 0c             	mov    %ebx,0xc(%esi)
    7707:	e9 a0 fe ff ff       	jmp    75ac <MediaModelMS+0x7c>
    770c:	8d 74 26 00          	lea    0x0(%esi),%esi

00007710 <GetCHSMS>:
    7710:	57                   	push   %edi
    7711:	56                   	push   %esi
    7712:	53                   	push   %ebx
    7713:	83 ec 14             	sub    $0x14,%esp
    7716:	8b 74 24 24          	mov    0x24(%esp),%esi
    771a:	b8 ff 00 00 00       	mov    $0xff,%eax
    771f:	85 f6                	test   %esi,%esi
    7721:	74 7c                	je     779f <GetCHSMS+0x8f>
    7723:	b8 01 00 00 00       	mov    $0x1,%eax
    7728:	89 44 24 04          	mov    %eax,0x4(%esp)
    772c:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    7732:	8b 40 3c             	mov    0x3c(%eax),%eax
    7735:	8b 40 28             	mov    0x28(%eax),%eax
    7738:	89 04 24             	mov    %eax,(%esp)
    773b:	e8 fc ff ff ff       	call   773c <GetCHSMS+0x2c>
			773c: R_386_PC32	FIFO_CONTROL_SOCK2
    7740:	b8 00 01 00 00       	mov    $0x100,%eax
    7745:	89 44 24 04          	mov    %eax,0x4(%esp)
    7749:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    774f:	8b 40 3c             	mov    0x3c(%eax),%eax
    7752:	8b 40 28             	mov    0x28(%eax),%eax
    7755:	89 04 24             	mov    %eax,(%esp)
    7758:	e8 fc ff ff ff       	call   7759 <GetCHSMS+0x49>
			7759: R_386_PC32	DMA_CONTROL_SOCK2
    775d:	b8 01 00 00 00       	mov    $0x1,%eax
    7762:	89 44 24 10          	mov    %eax,0x10(%esp)
    7766:	b8 22 00 00 00       	mov    $0x22,%eax
    776b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    776f:	b8 02 00 00 00       	mov    $0x2,%eax
    7774:	89 44 24 08          	mov    %eax,0x8(%esp)
    7778:	0f b7 46 0a          	movzwl 0xa(%esi),%eax
    777c:	89 34 24             	mov    %esi,(%esp)
    777f:	89 44 24 04          	mov    %eax,0x4(%esp)
    7783:	e8 08 f4 ff ff       	call   6b90 <ReadPageMS>
    7788:	88 c3                	mov    %al,%bl
    778a:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    7790:	89 04 24             	mov    %eax,(%esp)
    7793:	e8 38 ee ff ff       	call   65d0 <ReadRegistersMemoryStick>
    7798:	84 db                	test   %bl,%bl
    779a:	0f b6 c3             	movzbl %bl,%eax
    779d:	74 07                	je     77a6 <GetCHSMS+0x96>
    779f:	83 c4 14             	add    $0x14,%esp
    77a2:	5b                   	pop    %ebx
    77a3:	5e                   	pop    %esi
    77a4:	5f                   	pop    %edi
    77a5:	c3                   	ret    
    77a6:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    77ac:	bf 83 00 00 00       	mov    $0x83,%edi
    77b1:	8b 58 3c             	mov    0x3c(%eax),%ebx
    77b4:	89 7c 24 04          	mov    %edi,0x4(%esp)
    77b8:	8b 40 3c             	mov    0x3c(%eax),%eax
    77bb:	8b 40 28             	mov    0x28(%eax),%eax
    77be:	89 04 24             	mov    %eax,(%esp)
    77c1:	e8 fc ff ff ff       	call   77c2 <GetCHSMS+0xb2>
			77c2: R_386_PC32	FIFO_WORD_ACCESS_SOCK
    77c6:	66 0f b6 c0          	movzbw %al,%ax
    77ca:	b9 86 00 00 00       	mov    $0x86,%ecx
    77cf:	66 89 43 14          	mov    %ax,0x14(%ebx)
    77d3:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    77d9:	8b 58 3c             	mov    0x3c(%eax),%ebx
    77dc:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    77e0:	8b 40 3c             	mov    0x3c(%eax),%eax
    77e3:	8b 40 28             	mov    0x28(%eax),%eax
    77e6:	89 04 24             	mov    %eax,(%esp)
    77e9:	e8 fc ff ff ff       	call   77ea <GetCHSMS+0xda>
			77ea: R_386_PC32	FIFO_WORD_ACCESS_SOCK
    77ee:	66 0f b6 c0          	movzbw %al,%ax
    77f2:	66 89 43 16          	mov    %ax,0x16(%ebx)
    77f6:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    77fc:	0f b7 4e 04          	movzwl 0x4(%esi),%ecx
    7800:	8b 58 3c             	mov    0x3c(%eax),%ebx
    7803:	0f b6 46 08          	movzbl 0x8(%esi),%eax
    7807:	0f b7 53 16          	movzwl 0x16(%ebx),%edx
    780b:	0f b7 7b 14          	movzwl 0x14(%ebx),%edi
    780f:	0f af c8             	imul   %eax,%ecx
    7812:	0f af fa             	imul   %edx,%edi
    7815:	89 c8                	mov    %ecx,%eax
    7817:	99                   	cltd   
    7818:	f7 ff                	idiv   %edi
    781a:	66 89 43 12          	mov    %ax,0x12(%ebx)
    781e:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    7824:	8b 48 3c             	mov    0x3c(%eax),%ecx
    7827:	0f b7 51 14          	movzwl 0x14(%ecx),%edx
    782b:	0f b7 41 12          	movzwl 0x12(%ecx),%eax
    782f:	0f af c2             	imul   %edx,%eax
    7832:	0f b7 51 16          	movzwl 0x16(%ecx),%edx
    7836:	0f af c2             	imul   %edx,%eax
    7839:	c1 e0 09             	shl    $0x9,%eax
    783c:	c1 e8 14             	shr    $0x14,%eax
    783f:	66 89 41 10          	mov    %ax,0x10(%ecx)
    7843:	31 c0                	xor    %eax,%eax
    7845:	e9 55 ff ff ff       	jmp    779f <GetCHSMS+0x8f>
    784a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00007850 <GetCHSMSPro>:
    7850:	56                   	push   %esi
    7851:	53                   	push   %ebx
    7852:	8b 74 24 0c          	mov    0xc(%esp),%esi
    7856:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    785a:	b8 ff 00 00 00       	mov    $0xff,%eax
    785f:	85 f6                	test   %esi,%esi
    7861:	74 6b                	je     78ce <GetCHSMSPro+0x7e>
    7863:	66 0f b6 53 01       	movzbw 0x1(%ebx),%dx
    7868:	8b 46 04             	mov    0x4(%esi),%eax
    786b:	8b 48 3c             	mov    0x3c(%eax),%ecx
    786e:	0f b6 03             	movzbl (%ebx),%eax
    7871:	c1 e0 08             	shl    $0x8,%eax
    7874:	09 d0                	or     %edx,%eax
    7876:	66 89 41 12          	mov    %ax,0x12(%ecx)
    787a:	8b 46 04             	mov    0x4(%esi),%eax
    787d:	66 0f b6 53 09       	movzbw 0x9(%ebx),%dx
    7882:	8b 48 3c             	mov    0x3c(%eax),%ecx
    7885:	0f b6 43 08          	movzbl 0x8(%ebx),%eax
    7889:	c1 e0 08             	shl    $0x8,%eax
    788c:	09 d0                	or     %edx,%eax
    788e:	66 89 41 16          	mov    %ax,0x16(%ecx)
    7892:	8b 46 04             	mov    0x4(%esi),%eax
    7895:	66 0f b6 53 03       	movzbw 0x3(%ebx),%dx
    789a:	8b 48 3c             	mov    0x3c(%eax),%ecx
    789d:	0f b6 43 02          	movzbl 0x2(%ebx),%eax
    78a1:	c1 e0 08             	shl    $0x8,%eax
    78a4:	09 d0                	or     %edx,%eax
    78a6:	66 89 41 14          	mov    %ax,0x14(%ecx)
    78aa:	8b 46 04             	mov    0x4(%esi),%eax
    78ad:	8b 48 3c             	mov    0x3c(%eax),%ecx
    78b0:	0f b7 51 16          	movzwl 0x16(%ecx),%edx
    78b4:	0f b7 41 12          	movzwl 0x12(%ecx),%eax
    78b8:	0f af c2             	imul   %edx,%eax
    78bb:	0f b7 51 14          	movzwl 0x14(%ecx),%edx
    78bf:	0f af c2             	imul   %edx,%eax
    78c2:	c1 e0 09             	shl    $0x9,%eax
    78c5:	c1 e8 14             	shr    $0x14,%eax
    78c8:	66 89 41 10          	mov    %ax,0x10(%ecx)
    78cc:	31 c0                	xor    %eax,%eax
    78ce:	5b                   	pop    %ebx
    78cf:	5e                   	pop    %esi
    78d0:	c3                   	ret    
    78d1:	eb 0d                	jmp    78e0 <MediaModelMSPro>
    78d3:	90                   	nop    
    78d4:	90                   	nop    
    78d5:	90                   	nop    
    78d6:	90                   	nop    
    78d7:	90                   	nop    
    78d8:	90                   	nop    
    78d9:	90                   	nop    
    78da:	90                   	nop    
    78db:	90                   	nop    
    78dc:	90                   	nop    
    78dd:	90                   	nop    
    78de:	90                   	nop    
    78df:	90                   	nop    

000078e0 <MediaModelMSPro>:
    78e0:	55                   	push   %ebp
    78e1:	57                   	push   %edi
    78e2:	31 ff                	xor    %edi,%edi
    78e4:	56                   	push   %esi
    78e5:	53                   	push   %ebx
    78e6:	81 ec 14 04 00 00    	sub    $0x414,%esp
    78ec:	8b ac 24 28 04 00 00 	mov    0x428(%esp),%ebp
    78f3:	b8 01 00 00 00       	mov    $0x1,%eax
    78f8:	be 01 00 00 00       	mov    $0x1,%esi
    78fd:	bb 24 00 00 00       	mov    $0x24,%ebx
    7902:	89 44 24 04          	mov    %eax,0x4(%esp)
    7906:	8b 45 04             	mov    0x4(%ebp),%eax
    7909:	8b 40 3c             	mov    0x3c(%eax),%eax
    790c:	8b 40 28             	mov    0x28(%eax),%eax
    790f:	89 04 24             	mov    %eax,(%esp)
    7912:	e8 fc ff ff ff       	call   7913 <MediaModelMSPro+0x33>
			7913: R_386_PC32	FIFO_CONTROL_SOCK2
    7917:	b8 00 01 00 00       	mov    $0x100,%eax
    791c:	89 44 24 04          	mov    %eax,0x4(%esp)
    7920:	8b 45 04             	mov    0x4(%ebp),%eax
    7923:	8b 40 3c             	mov    0x3c(%eax),%eax
    7926:	8b 40 28             	mov    0x28(%eax),%eax
    7929:	89 04 24             	mov    %eax,(%esp)
    792c:	e8 fc ff ff ff       	call   792d <MediaModelMSPro+0x4d>
			792d: R_386_PC32	DMA_CONTROL_SOCK2
    7931:	89 74 24 08          	mov    %esi,0x8(%esp)
    7935:	89 f8                	mov    %edi,%eax
    7937:	c1 e8 09             	shr    $0x9,%eax
    793a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    793e:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    7942:	89 2c 24             	mov    %ebp,(%esp)
    7945:	e8 66 f0 ff ff       	call   69b0 <ExCmdMSPro2>
    794a:	88 44 24 13          	mov    %al,0x13(%esp)
    794e:	84 c0                	test   %al,%al
    7950:	0f 85 51 01 00 00    	jne    7aa7 <MediaModelMSPro+0x1c7>
    7956:	8b 55 04             	mov    0x4(%ebp),%edx
    7959:	80 7a 0c 00          	cmpb   $0x0,0xc(%edx)
    795d:	0f 84 7c 01 00 00    	je     7adf <MediaModelMSPro+0x1ff>
    7963:	8b 02                	mov    (%edx),%eax
    7965:	b9 4e 00 00 00       	mov    $0x4e,%ecx
    796a:	a8 02                	test   $0x2,%al
    796c:	0f 84 3a 01 00 00    	je     7aac <MediaModelMSPro+0x1cc>
    7972:	8b 02                	mov    (%edx),%eax
    7974:	b9 51 00 00 00       	mov    $0x51,%ecx
    7979:	a8 04                	test   $0x4,%al
    797b:	0f 85 2b 01 00 00    	jne    7aac <MediaModelMSPro+0x1cc>
    7981:	89 14 24             	mov    %edx,(%esp)
    7984:	b9 00 02 00 00       	mov    $0x200,%ecx
    7989:	b8 02 00 00 00       	mov    $0x2,%eax
    798e:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    7992:	89 44 24 04          	mov    %eax,0x4(%esp)
    7996:	e8 25 ea ff ff       	call   63c0 <TPCMemoryStick>
    799b:	88 44 24 13          	mov    %al,0x13(%esp)
    799f:	84 c0                	test   %al,%al
    79a1:	0f 85 00 01 00 00    	jne    7aa7 <MediaModelMSPro+0x1c7>
    79a7:	31 f6                	xor    %esi,%esi
    79a9:	66 81 ff ff 03       	cmp    $0x3ff,%di
    79ae:	77 3b                	ja     79eb <MediaModelMSPro+0x10b>
    79b0:	89 f2                	mov    %esi,%edx
    79b2:	8d 47 01             	lea    0x1(%edi),%eax
    79b5:	89 fb                	mov    %edi,%ebx
    79b7:	89 54 24 04          	mov    %edx,0x4(%esp)
    79bb:	0f b7 f8             	movzwl %ax,%edi
    79be:	8d 46 01             	lea    0x1(%esi),%eax
    79c1:	0f b7 f0             	movzwl %ax,%esi
    79c4:	8b 45 04             	mov    0x4(%ebp),%eax
    79c7:	8b 40 3c             	mov    0x3c(%eax),%eax
    79ca:	8b 40 28             	mov    0x28(%eax),%eax
    79cd:	89 04 24             	mov    %eax,(%esp)
    79d0:	e8 fc ff ff ff       	call   79d1 <MediaModelMSPro+0xf1>
			79d1: R_386_PC32	FIFO_BYTE_ACCESS_SOCK1
    79d5:	88 44 1c 14          	mov    %al,0x14(%esp,%ebx,1)
    79d9:	66 81 fe ff 01       	cmp    $0x1ff,%si
    79de:	0f 87 eb 00 00 00    	ja     7acf <MediaModelMSPro+0x1ef>
    79e4:	66 81 ff ff 03       	cmp    $0x3ff,%di
    79e9:	76 c5                	jbe    79b0 <MediaModelMSPro+0xd0>
    79eb:	0f b6 44 24 18       	movzbl 0x18(%esp),%eax
    79f0:	b9 50 00 00 00       	mov    $0x50,%ecx
    79f5:	88 44 24 12          	mov    %al,0x12(%esp)
    79f9:	fe c8                	dec    %al
    79fb:	3c 0b                	cmp    $0xb,%al
    79fd:	0f 87 a9 00 00 00    	ja     7aac <MediaModelMSPro+0x1cc>
    7a03:	be 10 00 00 00       	mov    $0x10,%esi
    7a08:	90                   	nop    
    7a09:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    7a10:	0f b6 44 34 16       	movzbl 0x16(%esp,%esi,1),%eax
    7a15:	66 0f b6 54 34 17    	movzbw 0x17(%esp,%esi,1),%dx
    7a1b:	c1 e0 08             	shl    $0x8,%eax
    7a1e:	01 d0                	add    %edx,%eax
    7a20:	66 0f b6 54 34 1b    	movzbw 0x1b(%esp,%esi,1),%dx
    7a26:	0f b7 d8             	movzwl %ax,%ebx
    7a29:	0f b6 44 34 1a       	movzbl 0x1a(%esp,%esi,1),%eax
    7a2e:	c1 e0 08             	shl    $0x8,%eax
    7a31:	01 d0                	add    %edx,%eax
    7a33:	0f b6 54 34 1c       	movzbl 0x1c(%esp,%esi,1),%edx
    7a38:	0f b7 c0             	movzwl %ax,%eax
    7a3b:	66 81 fb 9f 01       	cmp    $0x19f,%bx
    7a40:	76 4e                	jbe    7a90 <MediaModelMSPro+0x1b0>
    7a42:	66 85 c0             	test   %ax,%ax
    7a45:	74 49                	je     7a90 <MediaModelMSPro+0x1b0>
    7a47:	8d 04 18             	lea    (%eax,%ebx,1),%eax
    7a4a:	3d ff f7 00 00       	cmp    $0xf7ff,%eax
    7a4f:	7f 3f                	jg     7a90 <MediaModelMSPro+0x1b0>
    7a51:	0f b6 c2             	movzbl %dl,%eax
    7a54:	83 e8 10             	sub    $0x10,%eax
    7a57:	83 f8 30             	cmp    $0x30,%eax
    7a5a:	77 34                	ja     7a90 <MediaModelMSPro+0x1b0>
    7a5c:	ff 24 85 90 05 00 00 	jmp    *0x590(,%eax,4)
			7a5f: R_386_32	.rodata
    7a63:	0f b6 54 1c 28       	movzbl 0x28(%esp,%ebx,1),%edx
    7a68:	8b 45 04             	mov    0x4(%ebp),%eax
    7a6b:	8b 48 3c             	mov    0x3c(%eax),%ecx
    7a6e:	0f b6 44 1c 29       	movzbl 0x29(%esp,%ebx,1),%eax
    7a73:	c1 e2 18             	shl    $0x18,%edx
    7a76:	c1 e0 10             	shl    $0x10,%eax
    7a79:	01 c2                	add    %eax,%edx
    7a7b:	0f b6 44 1c 2a       	movzbl 0x2a(%esp,%ebx,1),%eax
    7a80:	c1 e0 08             	shl    $0x8,%eax
    7a83:	01 c2                	add    %eax,%edx
    7a85:	0f b6 44 1c 2b       	movzbl 0x2b(%esp,%ebx,1),%eax
    7a8a:	01 c2                	add    %eax,%edx
    7a8c:	89 51 0c             	mov    %edx,0xc(%ecx)
    7a8f:	90                   	nop    
    7a90:	fe 4c 24 12          	decb   0x12(%esp)
    7a94:	8d 46 0c             	lea    0xc(%esi),%eax
    7a97:	0f b7 f0             	movzwl %ax,%esi
    7a9a:	74 0b                	je     7aa7 <MediaModelMSPro+0x1c7>
    7a9c:	80 7c 24 13 00       	cmpb   $0x0,0x13(%esp)
    7aa1:	0f 84 69 ff ff ff    	je     7a10 <MediaModelMSPro+0x130>
    7aa7:	0f b6 4c 24 13       	movzbl 0x13(%esp),%ecx
    7aac:	81 c4 14 04 00 00    	add    $0x414,%esp
    7ab2:	89 c8                	mov    %ecx,%eax
    7ab4:	5b                   	pop    %ebx
    7ab5:	5e                   	pop    %esi
    7ab6:	5f                   	pop    %edi
    7ab7:	5d                   	pop    %ebp
    7ab8:	c3                   	ret    
    7ab9:	89 2c 24             	mov    %ebp,(%esp)
    7abc:	8d 44 1c 14          	lea    0x14(%esp,%ebx,1),%eax
    7ac0:	89 44 24 04          	mov    %eax,0x4(%esp)
    7ac4:	e8 87 fd ff ff       	call   7850 <GetCHSMSPro>
    7ac9:	88 44 24 13          	mov    %al,0x13(%esp)
    7acd:	eb c1                	jmp    7a90 <MediaModelMSPro+0x1b0>
    7acf:	66 81 ff ff 03       	cmp    $0x3ff,%di
    7ad4:	0f 86 19 fe ff ff    	jbe    78f3 <MediaModelMSPro+0x13>
    7ada:	e9 0c ff ff ff       	jmp    79eb <MediaModelMSPro+0x10b>
    7adf:	89 14 24             	mov    %edx,(%esp)
    7ae2:	e8 49 ea ff ff       	call   6530 <GetIntMSPro>
    7ae7:	88 44 24 13          	mov    %al,0x13(%esp)
    7aeb:	84 c0                	test   %al,%al
    7aed:	0f b6 c8             	movzbl %al,%ecx
    7af0:	75 ba                	jne    7aac <MediaModelMSPro+0x1cc>
    7af2:	8b 55 04             	mov    0x4(%ebp),%edx
    7af5:	f6 42 10 20          	testb  $0x20,0x10(%edx)
    7af9:	0f 85 73 fe ff ff    	jne    7972 <MediaModelMSPro+0x92>
    7aff:	b9 4e 00 00 00       	mov    $0x4e,%ecx
    7b04:	eb a6                	jmp    7aac <MediaModelMSPro+0x1cc>
    7b06:	8d 76 00             	lea    0x0(%esi),%esi
    7b09:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00007b10 <ReportMediaModelMS>:
    7b10:	c3                   	ret    
    7b11:	eb 0d                	jmp    7b20 <ReportMediaModelMSPro>
    7b13:	90                   	nop    
    7b14:	90                   	nop    
    7b15:	90                   	nop    
    7b16:	90                   	nop    
    7b17:	90                   	nop    
    7b18:	90                   	nop    
    7b19:	90                   	nop    
    7b1a:	90                   	nop    
    7b1b:	90                   	nop    
    7b1c:	90                   	nop    
    7b1d:	90                   	nop    
    7b1e:	90                   	nop    
    7b1f:	90                   	nop    

00007b20 <ReportMediaModelMSPro>:
    7b20:	c3                   	ret    
    7b21:	eb 0d                	jmp    7b30 <ConfirmCPUStartupMSPro>
    7b23:	90                   	nop    
    7b24:	90                   	nop    
    7b25:	90                   	nop    
    7b26:	90                   	nop    
    7b27:	90                   	nop    
    7b28:	90                   	nop    
    7b29:	90                   	nop    
    7b2a:	90                   	nop    
    7b2b:	90                   	nop    
    7b2c:	90                   	nop    
    7b2d:	90                   	nop    
    7b2e:	90                   	nop    
    7b2f:	90                   	nop    

00007b30 <ConfirmCPUStartupMSPro>:
    7b30:	56                   	push   %esi
    7b31:	53                   	push   %ebx
    7b32:	83 ec 04             	sub    $0x4,%esp
    7b35:	31 db                	xor    %ebx,%ebx
    7b37:	8b 74 24 10          	mov    0x10(%esp),%esi
    7b3b:	8b 56 04             	mov    0x4(%esi),%edx
    7b3e:	89 f6                	mov    %esi,%esi
    7b40:	89 14 24             	mov    %edx,(%esp)
    7b43:	e8 e8 e9 ff ff       	call   6530 <GetIntMSPro>
    7b48:	84 c0                	test   %al,%al
    7b4a:	75 34                	jne    7b80 <ConfirmCPUStartupMSPro+0x50>
    7b4c:	8b 46 04             	mov    0x4(%esi),%eax
    7b4f:	31 c9                	xor    %ecx,%ecx
    7b51:	89 c2                	mov    %eax,%edx
    7b53:	0f b6 40 10          	movzbl 0x10(%eax),%eax
    7b57:	84 c0                	test   %al,%al
    7b59:	78 1d                	js     7b78 <ConfirmCPUStartupMSPro+0x48>
    7b5b:	88 d8                	mov    %bl,%al
    7b5d:	fe c3                	inc    %bl
    7b5f:	3c 0a                	cmp    $0xa,%al
    7b61:	77 0a                	ja     7b6d <ConfirmCPUStartupMSPro+0x3d>
    7b63:	84 c9                	test   %cl,%cl
    7b65:	74 d9                	je     7b40 <ConfirmCPUStartupMSPro+0x10>
    7b67:	31 c0                	xor    %eax,%eax
    7b69:	5a                   	pop    %edx
    7b6a:	5b                   	pop    %ebx
    7b6b:	5e                   	pop    %esi
    7b6c:	c3                   	ret    
    7b6d:	84 c9                	test   %cl,%cl
    7b6f:	b8 4d 00 00 00       	mov    $0x4d,%eax
    7b74:	75 f1                	jne    7b67 <ConfirmCPUStartupMSPro+0x37>
    7b76:	eb f1                	jmp    7b69 <ConfirmCPUStartupMSPro+0x39>
    7b78:	a8 40                	test   $0x40,%al
    7b7a:	75 df                	jne    7b5b <ConfirmCPUStartupMSPro+0x2b>
    7b7c:	b1 01                	mov    $0x1,%cl
    7b7e:	eb db                	jmp    7b5b <ConfirmCPUStartupMSPro+0x2b>
    7b80:	0f b6 c0             	movzbl %al,%eax
    7b83:	eb e4                	jmp    7b69 <ConfirmCPUStartupMSPro+0x39>
    7b85:	8d 74 26 00          	lea    0x0(%esi),%esi
    7b89:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00007b90 <InitializeLUTMS>:
    7b90:	57                   	push   %edi
    7b91:	56                   	push   %esi
    7b92:	53                   	push   %ebx
    7b93:	83 ec 14             	sub    $0x14,%esp
    7b96:	8b 74 24 24          	mov    0x24(%esp),%esi
    7b9a:	31 c0                	xor    %eax,%eax
    7b9c:	8d 74 26 00          	lea    0x0(%esi),%esi
    7ba0:	66 c7 44 46 62 ff ff 	movw   $0xffff,0x62(%esi,%eax,2)
    7ba7:	40                   	inc    %eax
    7ba8:	0f b7 c0             	movzwl %ax,%eax
    7bab:	66 3d ff 1f          	cmp    $0x1fff,%ax
    7baf:	76 ef                	jbe    7ba0 <InitializeLUTMS+0x10>
    7bb1:	31 c0                	xor    %eax,%eax
    7bb3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7bb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    7bc0:	31 c9                	xor    %ecx,%ecx
    7bc2:	88 8c 06 62 40 00 00 	mov    %cl,0x4062(%esi,%eax,1)
    7bc9:	40                   	inc    %eax
    7bca:	0f b7 c0             	movzwl %ax,%eax
    7bcd:	66 3d ff 03          	cmp    $0x3ff,%ax
    7bd1:	76 ed                	jbe    7bc0 <InitializeLUTMS+0x30>
    7bd3:	31 d2                	xor    %edx,%edx
    7bd5:	8d 74 26 00          	lea    0x0(%esi),%esi
    7bd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    7be0:	0f b6 c2             	movzbl %dl,%eax
    7be3:	fe c2                	inc    %dl
    7be5:	80 fa 0f             	cmp    $0xf,%dl
    7be8:	66 c7 44 46 0e ff ff 	movw   $0xffff,0xe(%esi,%eax,2)
    7bef:	76 ef                	jbe    7be0 <InitializeLUTMS+0x50>
    7bf1:	c6 46 60 00          	movb   $0x0,0x60(%esi)
    7bf5:	ba 01 00 00 00       	mov    $0x1,%edx
    7bfa:	89 54 24 04          	mov    %edx,0x4(%esp)
    7bfe:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    7c04:	8b 40 3c             	mov    0x3c(%eax),%eax
    7c07:	8b 40 28             	mov    0x28(%eax),%eax
    7c0a:	89 04 24             	mov    %eax,(%esp)
    7c0d:	e8 fc ff ff ff       	call   7c0e <InitializeLUTMS+0x7e>
			7c0e: R_386_PC32	FIFO_CONTROL_SOCK2
    7c12:	b8 00 01 00 00       	mov    $0x100,%eax
    7c17:	89 44 24 04          	mov    %eax,0x4(%esp)
    7c1b:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    7c21:	8b 40 3c             	mov    0x3c(%eax),%eax
    7c24:	8b 40 28             	mov    0x28(%eax),%eax
    7c27:	89 04 24             	mov    %eax,(%esp)
    7c2a:	e8 fc ff ff ff       	call   7c2b <InitializeLUTMS+0x9b>
			7c2b: R_386_PC32	DMA_CONTROL_SOCK2
    7c2f:	b8 01 00 00 00       	mov    $0x1,%eax
    7c34:	89 44 24 10          	mov    %eax,0x10(%esp)
    7c38:	b8 22 00 00 00       	mov    $0x22,%eax
    7c3d:	89 44 24 0c          	mov    %eax,0xc(%esp)
    7c41:	b8 01 00 00 00       	mov    $0x1,%eax
    7c46:	89 44 24 08          	mov    %eax,0x8(%esp)
    7c4a:	0f b7 46 0a          	movzwl 0xa(%esi),%eax
    7c4e:	89 34 24             	mov    %esi,(%esp)
    7c51:	89 44 24 04          	mov    %eax,0x4(%esp)
    7c55:	e8 36 ef ff ff       	call   6b90 <ReadPageMS>
    7c5a:	84 c0                	test   %al,%al
    7c5c:	ba ff 00 00 00       	mov    $0xff,%edx
    7c61:	0f 85 b3 00 00 00    	jne    7d1a <InitializeLUTMS+0x18a>
    7c67:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    7c6d:	89 04 24             	mov    %eax,(%esp)
    7c70:	e8 5b e9 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    7c75:	84 c0                	test   %al,%al
    7c77:	ba ff 00 00 00       	mov    $0xff,%edx
    7c7c:	0f 85 98 00 00 00    	jne    7d1a <InitializeLUTMS+0x18a>
    7c82:	31 ff                	xor    %edi,%edi
    7c84:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7c8a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
    7c90:	89 fa                	mov    %edi,%edx
    7c92:	8d 47 01             	lea    0x1(%edi),%eax
    7c95:	0f b7 f8             	movzwl %ax,%edi
    7c98:	89 54 24 04          	mov    %edx,0x4(%esp)
    7c9c:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    7ca2:	8b 40 3c             	mov    0x3c(%eax),%eax
    7ca5:	8b 40 28             	mov    0x28(%eax),%eax
    7ca8:	89 04 24             	mov    %eax,(%esp)
    7cab:	e8 fc ff ff ff       	call   7cac <InitializeLUTMS+0x11c>
			7cac: R_386_PC32	FIFO_WORD_ACCESS_SOCK
    7cb0:	0f b6 d4             	movzbl %ah,%edx
    7cb3:	89 c1                	mov    %eax,%ecx
    7cb5:	66 c1 e1 08          	shl    $0x8,%cx
    7cb9:	66 0f b6 d2          	movzbw %dl,%dx
    7cbd:	66 09 d1             	or     %dx,%cx
    7cc0:	0f b7 d9             	movzwl %cx,%ebx
    7cc3:	66 39 5e 02          	cmp    %bx,0x2(%esi)
    7cc7:	73 5a                	jae    7d23 <InitializeLUTMS+0x193>
    7cc9:	66 43                	inc    %bx
    7ccb:	74 07                	je     7cd4 <InitializeLUTMS+0x144>
    7ccd:	66 81 ff ff 01       	cmp    $0x1ff,%di
    7cd2:	76 bc                	jbe    7c90 <InitializeLUTMS+0x100>
    7cd4:	0f b7 46 0a          	movzwl 0xa(%esi),%eax
    7cd8:	66 83 f8 ff          	cmp    $0xffffffff,%ax
    7cdc:	74 18                	je     7cf6 <InitializeLUTMS+0x166>
    7cde:	89 34 24             	mov    %esi,(%esp)
    7ce1:	bb 01 00 00 00       	mov    $0x1,%ebx
    7ce6:	0f b7 c0             	movzwl %ax,%eax
    7ce9:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    7ced:	89 44 24 04          	mov    %eax,0x4(%esp)
    7cf1:	e8 5a e0 ff ff       	call   5d50 <PhyBlockUsedMS2>
    7cf6:	0f b7 46 0c          	movzwl 0xc(%esi),%eax
    7cfa:	66 83 f8 ff          	cmp    $0xffffffff,%ax
    7cfe:	74 18                	je     7d18 <InitializeLUTMS+0x188>
    7d00:	89 34 24             	mov    %esi,(%esp)
    7d03:	b9 01 00 00 00       	mov    $0x1,%ecx
    7d08:	0f b7 c0             	movzwl %ax,%eax
    7d0b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    7d0f:	89 44 24 04          	mov    %eax,0x4(%esp)
    7d13:	e8 38 e0 ff ff       	call   5d50 <PhyBlockUsedMS2>
    7d18:	31 d2                	xor    %edx,%edx
    7d1a:	83 c4 14             	add    $0x14,%esp
    7d1d:	89 d0                	mov    %edx,%eax
    7d1f:	5b                   	pop    %ebx
    7d20:	5e                   	pop    %esi
    7d21:	5f                   	pop    %edi
    7d22:	c3                   	ret    
    7d23:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    7d27:	b8 54 06 00 00       	mov    $0x654,%eax
			7d28: R_386_32	.rodata
    7d2c:	89 44 24 04          	mov    %eax,0x4(%esp)
    7d30:	c7 04 24 a0 0f 00 00 	movl   $0xfa0,(%esp)
			7d33: R_386_32	.rodata.str1.32
    7d37:	e8 fc ff ff ff       	call   7d38 <InitializeLUTMS+0x1a8>
			7d38: R_386_PC32	printk
    7d3c:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    7d40:	b8 01 00 00 00       	mov    $0x1,%eax
    7d45:	89 44 24 08          	mov    %eax,0x8(%esp)
    7d49:	89 34 24             	mov    %esi,(%esp)
    7d4c:	e8 ff df ff ff       	call   5d50 <PhyBlockUsedMS2>
    7d51:	e9 73 ff ff ff       	jmp    7cc9 <InitializeLUTMS+0x139>
    7d56:	8d 76 00             	lea    0x0(%esi),%esi
    7d59:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00007d60 <InitializeCardMSTICK>:
    7d60:	83 ec 10             	sub    $0x10,%esp
    7d63:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    7d67:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    7d6b:	b8 ff 00 00 00       	mov    $0xff,%eax
    7d70:	85 db                	test   %ebx,%ebx
    7d72:	74 18                	je     7d8c <InitializeCardMSTICK+0x2c>
    7d74:	89 1c 24             	mov    %ebx,(%esp)
    7d77:	b8 00 1f 00 1f       	mov    $0x1f001f00,%eax
    7d7c:	89 44 24 04          	mov    %eax,0x4(%esp)
    7d80:	e8 db e8 ff ff       	call   6660 <SetRWRegAddrsMemoryStick>
    7d85:	84 c0                	test   %al,%al
    7d87:	74 0b                	je     7d94 <InitializeCardMSTICK+0x34>
    7d89:	0f b6 c0             	movzbl %al,%eax
    7d8c:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    7d90:	83 c4 10             	add    $0x10,%esp
    7d93:	c3                   	ret    
    7d94:	89 1c 24             	mov    %ebx,(%esp)
    7d97:	e8 34 e8 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    7d9c:	84 c0                	test   %al,%al
    7d9e:	75 e9                	jne    7d89 <InitializeCardMSTICK+0x29>
    7da0:	8b 43 3c             	mov    0x3c(%ebx),%eax
    7da3:	8b 40 28             	mov    0x28(%eax),%eax
    7da6:	c6 40 04 12          	movb   $0x12,0x4(%eax)
    7daa:	8b 43 3c             	mov    0x3c(%ebx),%eax
    7dad:	8b 40 28             	mov    0x28(%eax),%eax
    7db0:	c6 40 05 12          	movb   $0x12,0x5(%eax)
    7db4:	f6 43 13 01          	testb  $0x1,0x13(%ebx)
    7db8:	74 1a                	je     7dd4 <InitializeCardMSTICK+0x74>
    7dba:	80 7b 15 00          	cmpb   $0x0,0x15(%ebx)
    7dbe:	75 14                	jne    7dd4 <InitializeCardMSTICK+0x74>
    7dc0:	80 7b 16 03          	cmpb   $0x3,0x16(%ebx)
    7dc4:	77 0e                	ja     7dd4 <InitializeCardMSTICK+0x74>
    7dc6:	8b 43 3c             	mov    0x3c(%ebx),%eax
    7dc9:	8b 40 28             	mov    0x28(%eax),%eax
    7dcc:	c6 40 04 22          	movb   $0x22,0x4(%eax)
    7dd0:	31 c0                	xor    %eax,%eax
    7dd2:	eb b8                	jmp    7d8c <InitializeCardMSTICK+0x2c>
    7dd4:	8b 43 3c             	mov    0x3c(%ebx),%eax
    7dd7:	bb 64 06 00 00       	mov    $0x664,%ebx
			7dd8: R_386_32	.rodata
    7ddc:	8b 40 28             	mov    0x28(%eax),%eax
    7ddf:	0f b6 40 04          	movzbl 0x4(%eax),%eax
    7de3:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    7de7:	c7 04 24 e0 0f 00 00 	movl   $0xfe0,(%esp)
			7dea: R_386_32	.rodata.str1.32
    7dee:	89 44 24 08          	mov    %eax,0x8(%esp)
    7df2:	e8 fc ff ff ff       	call   7df3 <InitializeCardMSTICK+0x93>
			7df3: R_386_PC32	printk
    7df7:	eb d7                	jmp    7dd0 <InitializeCardMSTICK+0x70>
    7df9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00007e00 <InitializeCardMS>:
    7e00:	53                   	push   %ebx
    7e01:	83 ec 14             	sub    $0x14,%esp
    7e04:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    7e08:	b8 ff 00 00 00       	mov    $0xff,%eax
    7e0d:	85 db                	test   %ebx,%ebx
    7e0f:	0f 84 9b 00 00 00    	je     7eb0 <InitializeCardMS+0xb0>
    7e15:	c6 43 60 00          	movb   $0x0,0x60(%ebx)
    7e19:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7e1f:	8b 40 3c             	mov    0x3c(%eax),%eax
    7e22:	c6 40 04 00          	movb   $0x0,0x4(%eax)
    7e26:	66 c7 43 0a ff ff    	movw   $0xffff,0xa(%ebx)
    7e2c:	66 c7 43 0c ff ff    	movw   $0xffff,0xc(%ebx)
    7e32:	66 c7 43 2e ff ff    	movw   $0xffff,0x2e(%ebx)
    7e38:	31 c0                	xor    %eax,%eax
    7e3a:	b9 3c 00 00 00       	mov    $0x3c,%ecx
    7e3f:	89 44 24 10          	mov    %eax,0x10(%esp)
    7e43:	31 c0                	xor    %eax,%eax
    7e45:	89 44 24 0c          	mov    %eax,0xc(%esp)
    7e49:	31 c0                	xor    %eax,%eax
    7e4b:	89 44 24 08          	mov    %eax,0x8(%esp)
    7e4f:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    7e53:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7e59:	89 04 24             	mov    %eax,(%esp)
    7e5c:	e8 5f ea ff ff       	call   68c0 <CmdMemoryStick>
    7e61:	84 c0                	test   %al,%al
    7e63:	74 2d                	je     7e92 <InitializeCardMS+0x92>
    7e65:	31 c0                	xor    %eax,%eax
    7e67:	31 d2                	xor    %edx,%edx
    7e69:	89 44 24 0c          	mov    %eax,0xc(%esp)
    7e6d:	31 c0                	xor    %eax,%eax
    7e6f:	89 44 24 08          	mov    %eax,0x8(%esp)
    7e73:	b8 3c 00 00 00       	mov    $0x3c,%eax
    7e78:	89 54 24 10          	mov    %edx,0x10(%esp)
    7e7c:	89 44 24 04          	mov    %eax,0x4(%esp)
    7e80:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7e86:	89 04 24             	mov    %eax,(%esp)
    7e89:	e8 32 ea ff ff       	call   68c0 <CmdMemoryStick>
    7e8e:	84 c0                	test   %al,%al
    7e90:	75 1b                	jne    7ead <InitializeCardMS+0xad>
    7e92:	b8 00 1f 00 1f       	mov    $0x1f001f00,%eax
    7e97:	89 44 24 04          	mov    %eax,0x4(%esp)
    7e9b:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7ea1:	89 04 24             	mov    %eax,(%esp)
    7ea4:	e8 b7 e7 ff ff       	call   6660 <SetRWRegAddrsMemoryStick>
    7ea9:	84 c0                	test   %al,%al
    7eab:	74 08                	je     7eb5 <InitializeCardMS+0xb5>
    7ead:	0f b6 c0             	movzbl %al,%eax
    7eb0:	83 c4 14             	add    $0x14,%esp
    7eb3:	5b                   	pop    %ebx
    7eb4:	c3                   	ret    
    7eb5:	89 1c 24             	mov    %ebx,(%esp)
    7eb8:	e8 f3 f4 ff ff       	call   73b0 <FindBootBlocksMS>
    7ebd:	84 c0                	test   %al,%al
    7ebf:	75 ec                	jne    7ead <InitializeCardMS+0xad>
    7ec1:	89 1c 24             	mov    %ebx,(%esp)
    7ec4:	e8 67 f6 ff ff       	call   7530 <MediaModelMS>
    7ec9:	84 c0                	test   %al,%al
    7ecb:	75 e0                	jne    7ead <InitializeCardMS+0xad>
    7ecd:	89 1c 24             	mov    %ebx,(%esp)
    7ed0:	e8 3b f8 ff ff       	call   7710 <GetCHSMS>
    7ed5:	84 c0                	test   %al,%al
    7ed7:	75 d4                	jne    7ead <InitializeCardMS+0xad>
    7ed9:	89 1c 24             	mov    %ebx,(%esp)
    7edc:	e8 2f fc ff ff       	call   7b10 <ReportMediaModelMS>
    7ee1:	89 1c 24             	mov    %ebx,(%esp)
    7ee4:	e8 a7 fc ff ff       	call   7b90 <InitializeLUTMS>
    7ee9:	84 c0                	test   %al,%al
    7eeb:	75 c0                	jne    7ead <InitializeCardMS+0xad>
    7eed:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7ef3:	89 04 24             	mov    %eax,(%esp)
    7ef6:	e8 d5 e6 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    7efb:	84 c0                	test   %al,%al
    7efd:	75 ae                	jne    7ead <InitializeCardMS+0xad>
    7eff:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7f05:	8b 50 3c             	mov    0x3c(%eax),%edx
    7f08:	0f b6 40 11          	movzbl 0x11(%eax),%eax
    7f0c:	24 01                	and    $0x1,%al
    7f0e:	88 42 05             	mov    %al,0x5(%edx)
    7f11:	89 1c 24             	mov    %ebx,(%esp)
    7f14:	e8 37 f1 ff ff       	call   7050 <MakeLUTMS>
    7f19:	80 7b 60 00          	cmpb   $0x0,0x60(%ebx)
    7f1d:	75 27                	jne    7f46 <InitializeCardMS+0x146>
    7f1f:	84 c0                	test   %al,%al
    7f21:	74 ee                	je     7f11 <InitializeCardMS+0x111>
    7f23:	c7 04 24 20 10 00 00 	movl   $0x1020,(%esp)
			7f26: R_386_32	.rodata.str1.32
    7f2a:	0f b6 d8             	movzbl %al,%ebx
    7f2d:	b8 79 06 00 00       	mov    $0x679,%eax
			7f2e: R_386_32	.rodata
    7f32:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    7f36:	89 44 24 04          	mov    %eax,0x4(%esp)
    7f3a:	e8 fc ff ff ff       	call   7f3b <InitializeCardMS+0x13b>
			7f3b: R_386_PC32	printk
    7f3f:	89 d8                	mov    %ebx,%eax
    7f41:	e9 6a ff ff ff       	jmp    7eb0 <InitializeCardMS+0xb0>
    7f46:	84 c0                	test   %al,%al
    7f48:	75 d9                	jne    7f23 <InitializeCardMS+0x123>
    7f4a:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7f50:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)
    7f54:	75 0e                	jne    7f64 <InitializeCardMS+0x164>
    7f56:	8b 40 3c             	mov    0x3c(%eax),%eax
    7f59:	c6 40 04 01          	movb   $0x1,0x4(%eax)
    7f5d:	31 c0                	xor    %eax,%eax
    7f5f:	e9 4c ff ff ff       	jmp    7eb0 <InitializeCardMS+0xb0>
    7f64:	89 1c 24             	mov    %ebx,(%esp)
    7f67:	e8 14 e8 ff ff       	call   6780 <SwitchToParallelIFMS>
    7f6c:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    7f72:	eb e2                	jmp    7f56 <InitializeCardMS+0x156>
    7f74:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7f7a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00007f80 <InitializeCardMSPro>:
    7f80:	83 ec 0c             	sub    $0xc,%esp
    7f83:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    7f87:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    7f8b:	8b 43 04             	mov    0x4(%ebx),%eax
    7f8e:	c6 40 40 00          	movb   $0x0,0x40(%eax)
    7f92:	85 db                	test   %ebx,%ebx
    7f94:	b8 ff 00 00 00       	mov    $0xff,%eax
    7f99:	74 25                	je     7fc0 <InitializeCardMSPro+0x40>
    7f9b:	8b 43 04             	mov    0x4(%ebx),%eax
    7f9e:	8b 40 3c             	mov    0x3c(%eax),%eax
    7fa1:	c6 40 04 00          	movb   $0x0,0x4(%eax)
    7fa5:	b8 00 1f 00 1f       	mov    $0x1f001f00,%eax
    7faa:	89 44 24 04          	mov    %eax,0x4(%esp)
    7fae:	8b 43 04             	mov    0x4(%ebx),%eax
    7fb1:	89 04 24             	mov    %eax,(%esp)
    7fb4:	e8 a7 e6 ff ff       	call   6660 <SetRWRegAddrsMemoryStick>
    7fb9:	84 c0                	test   %al,%al
    7fbb:	74 0b                	je     7fc8 <InitializeCardMSPro+0x48>
    7fbd:	0f b6 c0             	movzbl %al,%eax
    7fc0:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    7fc4:	83 c4 0c             	add    $0xc,%esp
    7fc7:	c3                   	ret    
    7fc8:	8b 43 04             	mov    0x4(%ebx),%eax
    7fcb:	89 04 24             	mov    %eax,(%esp)
    7fce:	e8 fd e5 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    7fd3:	84 c0                	test   %al,%al
    7fd5:	75 e6                	jne    7fbd <InitializeCardMSPro+0x3d>
    7fd7:	8b 43 04             	mov    0x4(%ebx),%eax
    7fda:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)
    7fde:	74 0c                	je     7fec <InitializeCardMSPro+0x6c>
    7fe0:	89 1c 24             	mov    %ebx,(%esp)
    7fe3:	e8 78 e8 ff ff       	call   6860 <SwitchToParallelIFMSPro>
    7fe8:	84 c0                	test   %al,%al
    7fea:	75 d1                	jne    7fbd <InitializeCardMSPro+0x3d>
    7fec:	89 1c 24             	mov    %ebx,(%esp)
    7fef:	e8 3c fb ff ff       	call   7b30 <ConfirmCPUStartupMSPro>
    7ff4:	84 c0                	test   %al,%al
    7ff6:	75 c5                	jne    7fbd <InitializeCardMSPro+0x3d>
    7ff8:	8b 43 04             	mov    0x4(%ebx),%eax
    7ffb:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)
    7fff:	75 4a                	jne    804b <InitializeCardMSPro+0xcb>
    8001:	89 1c 24             	mov    %ebx,(%esp)
    8004:	e8 d7 f8 ff ff       	call   78e0 <MediaModelMSPro>
    8009:	84 c0                	test   %al,%al
    800b:	75 b0                	jne    7fbd <InitializeCardMSPro+0x3d>
    800d:	89 1c 24             	mov    %ebx,(%esp)
    8010:	e8 0b fb ff ff       	call   7b20 <ReportMediaModelMSPro>
    8015:	8b 43 04             	mov    0x4(%ebx),%eax
    8018:	89 04 24             	mov    %eax,(%esp)
    801b:	e8 b0 e5 ff ff       	call   65d0 <ReadRegistersMemoryStick>
    8020:	84 c0                	test   %al,%al
    8022:	75 99                	jne    7fbd <InitializeCardMSPro+0x3d>
    8024:	8b 43 04             	mov    0x4(%ebx),%eax
    8027:	8b 50 3c             	mov    0x3c(%eax),%edx
    802a:	0f b6 40 11          	movzbl 0x11(%eax),%eax
    802e:	24 01                	and    $0x1,%al
    8030:	88 42 05             	mov    %al,0x5(%edx)
    8033:	8b 43 04             	mov    0x4(%ebx),%eax
    8036:	8b 40 3c             	mov    0x3c(%eax),%eax
    8039:	c6 40 04 01          	movb   $0x1,0x4(%eax)
    803d:	8b 43 04             	mov    0x4(%ebx),%eax
    8040:	c6 40 40 01          	movb   $0x1,0x40(%eax)
    8044:	31 c0                	xor    %eax,%eax
    8046:	e9 75 ff ff ff       	jmp    7fc0 <InitializeCardMSPro+0x40>
    804b:	8b 40 3c             	mov    0x3c(%eax),%eax
    804e:	8b 40 28             	mov    0x28(%eax),%eax
    8051:	89 04 24             	mov    %eax,(%esp)
    8054:	e8 fc ff ff ff       	call   8055 <InitializeCardMSPro+0xd5>
			8055: R_386_PC32	SOCKET_CONTROL_SOCK1
    8059:	0d 00 01 00 00       	or     $0x100,%eax
    805e:	0f b7 c0             	movzwl %ax,%eax
    8061:	89 44 24 04          	mov    %eax,0x4(%esp)
    8065:	8b 43 04             	mov    0x4(%ebx),%eax
    8068:	8b 40 3c             	mov    0x3c(%eax),%eax
    806b:	8b 40 28             	mov    0x28(%eax),%eax
    806e:	89 04 24             	mov    %eax,(%esp)
    8071:	e8 fc ff ff ff       	call   8072 <InitializeCardMSPro+0xf2>
			8072: R_386_PC32	SOCKET_CONTROL_SOCK2
    8076:	eb 89                	jmp    8001 <InitializeCardMSPro+0x81>
    8078:	90                   	nop    
    8079:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00008080 <InitializeSubCardMSTICK>:
    8080:	83 ec 14             	sub    $0x14,%esp
    8083:	0f b6 44 24 1c       	movzbl 0x1c(%esp),%eax
    8088:	89 74 24 10          	mov    %esi,0x10(%esp)
    808c:	8b 74 24 18          	mov    0x18(%esp),%esi
    8090:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    8094:	88 44 24 0b          	mov    %al,0xb(%esp)
    8098:	b9 ff 00 00 00       	mov    $0xff,%ecx
    809d:	85 f6                	test   %esi,%esi
    809f:	74 4d                	je     80ee <InitializeSubCardMSTICK+0x6e>
    80a1:	0f b6 d8             	movzbl %al,%ebx
    80a4:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    80a8:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    80ae:	89 04 24             	mov    %eax,(%esp)
    80b1:	e8 fc ff ff ff       	call   80b2 <InitializeSubCardMSTICK+0x32>
			80b2: R_386_PC32	GetMediaIDFM
    80b6:	88 44 24 0a          	mov    %al,0xa(%esp)
    80ba:	8b 86 a0 00 00 00    	mov    0xa0(%esi),%eax
    80c0:	b9 ff 00 00 00       	mov    $0xff,%ecx
    80c5:	8b 5c 98 0c          	mov    0xc(%eax,%ebx,4),%ebx
    80c9:	85 db                	test   %ebx,%ebx
    80cb:	74 21                	je     80ee <InitializeSubCardMSTICK+0x6e>
    80cd:	80 7c 24 0a 12       	cmpb   $0x12,0xa(%esp)
    80d2:	74 5c                	je     8130 <InitializeSubCardMSTICK+0xb0>
    80d4:	80 7c 24 0a 22       	cmpb   $0x22,0xa(%esp)
    80d9:	74 25                	je     8100 <InitializeSubCardMSTICK+0x80>
    80db:	0f b6 44 24 0b       	movzbl 0xb(%esp),%eax
    80e0:	31 c9                	xor    %ecx,%ecx
    80e2:	0f b6 54 24 0a       	movzbl 0xa(%esp),%edx
    80e7:	c1 e0 04             	shl    $0x4,%eax
    80ea:	88 54 06 68          	mov    %dl,0x68(%esi,%eax,1)
    80ee:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    80f2:	89 c8                	mov    %ecx,%eax
    80f4:	8b 74 24 10          	mov    0x10(%esp),%esi
    80f8:	83 c4 14             	add    $0x14,%esp
    80fb:	c3                   	ret    
    80fc:	8d 74 26 00          	lea    0x0(%esi),%esi
    8100:	89 1c 24             	mov    %ebx,(%esp)
    8103:	e8 78 df ff ff       	call   6080 <CMSPro_init>
    8108:	84 c0                	test   %al,%al
    810a:	b9 ff 00 00 00       	mov    $0xff,%ecx
    810f:	75 dd                	jne    80ee <InitializeSubCardMSTICK+0x6e>
    8111:	8b 13                	mov    (%ebx),%edx
    8113:	85 d2                	test   %edx,%edx
    8115:	74 d7                	je     80ee <InitializeSubCardMSTICK+0x6e>
    8117:	89 14 24             	mov    %edx,(%esp)
    811a:	e8 61 fe ff ff       	call   7f80 <InitializeCardMSPro>
    811f:	84 c0                	test   %al,%al
    8121:	b9 ff 00 00 00       	mov    $0xff,%ecx
    8126:	74 b3                	je     80db <InitializeSubCardMSTICK+0x5b>
    8128:	eb c4                	jmp    80ee <InitializeSubCardMSTICK+0x6e>
    812a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8130:	89 1c 24             	mov    %ebx,(%esp)
    8133:	e8 58 de ff ff       	call   5f90 <CMS_init>
    8138:	84 c0                	test   %al,%al
    813a:	b9 ff 00 00 00       	mov    $0xff,%ecx
    813f:	75 ad                	jne    80ee <InitializeSubCardMSTICK+0x6e>
    8141:	8b 13                	mov    (%ebx),%edx
    8143:	85 d2                	test   %edx,%edx
    8145:	74 a7                	je     80ee <InitializeSubCardMSTICK+0x6e>
    8147:	89 14 24             	mov    %edx,(%esp)
    814a:	e8 b1 fc ff ff       	call   7e00 <InitializeCardMS>
    814f:	eb ce                	jmp    811f <InitializeSubCardMSTICK+0x9f>
    8151:	eb 0d                	jmp    8160 <GetEmptyPhyBlockInSegmentMS>
    8153:	90                   	nop    
    8154:	90                   	nop    
    8155:	90                   	nop    
    8156:	90                   	nop    
    8157:	90                   	nop    
    8158:	90                   	nop    
    8159:	90                   	nop    
    815a:	90                   	nop    
    815b:	90                   	nop    
    815c:	90                   	nop    
    815d:	90                   	nop    
    815e:	90                   	nop    
    815f:	90                   	nop    

00008160 <GetEmptyPhyBlockInSegmentMS>:
    8160:	55                   	push   %ebp
    8161:	57                   	push   %edi
    8162:	56                   	push   %esi
    8163:	53                   	push   %ebx
    8164:	83 ec 18             	sub    $0x18,%esp
    8167:	0f b6 44 24 34       	movzbl 0x34(%esp),%eax
    816c:	88 44 24 08          	mov    %al,0x8(%esp)
    8170:	88 c2                	mov    %al,%dl
    8172:	c1 e2 09             	shl    $0x9,%edx
    8175:	89 d7                	mov    %edx,%edi
    8177:	0f b6 c0             	movzbl %al,%eax
    817a:	8b 54 24 2c          	mov    0x2c(%esp),%edx
    817e:	81 e7 00 fe 00 00    	and    $0xfe00,%edi
    8184:	0f b7 74 42 0e       	movzwl 0xe(%edx,%eax,2),%esi
    8189:	b8 84 00 00 00       	mov    $0x84,%eax
    818e:	66 83 fe ff          	cmp    $0xffffffff,%si
    8192:	74 47                	je     81db <GetEmptyPhyBlockInSegmentMS+0x7b>
    8194:	8d 46 01             	lea    0x1(%esi),%eax
    8197:	0f b7 d8             	movzwl %ax,%ebx
    819a:	8d af 00 02 00 00    	lea    0x200(%edi),%ebp
    81a0:	39 eb                	cmp    %ebp,%ebx
    81a2:	7c 0c                	jl     81b0 <GetEmptyPhyBlockInSegmentMS+0x50>
    81a4:	89 fb                	mov    %edi,%ebx
    81a6:	8d 76 00             	lea    0x0(%esi),%esi
    81a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    81b0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    81b4:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    81b8:	89 04 24             	mov    %eax,(%esp)
    81bb:	e8 50 db ff ff       	call   5d10 <PhyBlockUsedMS1>
    81c0:	84 c0                	test   %al,%al
    81c2:	74 1f                	je     81e3 <GetEmptyPhyBlockInSegmentMS+0x83>
    81c4:	66 39 f3             	cmp    %si,%bx
    81c7:	74 0d                	je     81d6 <GetEmptyPhyBlockInSegmentMS+0x76>
    81c9:	8d 43 01             	lea    0x1(%ebx),%eax
    81cc:	0f b7 d8             	movzwl %ax,%ebx
    81cf:	39 eb                	cmp    %ebp,%ebx
    81d1:	0f 4d df             	cmovge %edi,%ebx
    81d4:	eb da                	jmp    81b0 <GetEmptyPhyBlockInSegmentMS+0x50>
    81d6:	b8 84 00 00 00       	mov    $0x84,%eax
    81db:	83 c4 18             	add    $0x18,%esp
    81de:	5b                   	pop    %ebx
    81df:	5e                   	pop    %esi
    81e0:	5f                   	pop    %edi
    81e1:	5d                   	pop    %ebp
    81e2:	c3                   	ret    
    81e3:	66 39 f3             	cmp    %si,%bx
    81e6:	74 ee                	je     81d6 <GetEmptyPhyBlockInSegmentMS+0x76>
    81e8:	0f b6 44 24 08       	movzbl 0x8(%esp),%eax
    81ed:	8b 54 24 2c          	mov    0x2c(%esp),%edx
    81f1:	66 89 5c 42 0e       	mov    %bx,0xe(%edx,%eax,2)
    81f6:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    81fa:	89 14 24             	mov    %edx,(%esp)
    81fd:	e8 de e8 ff ff       	call   6ae0 <EraseBlockMS>
    8202:	8b 44 24 30          	mov    0x30(%esp),%eax
    8206:	66 89 18             	mov    %bx,(%eax)
    8209:	31 c0                	xor    %eax,%eax
    820b:	eb ce                	jmp    81db <GetEmptyPhyBlockInSegmentMS+0x7b>
    820d:	8d 76 00             	lea    0x0(%esi),%esi

00008210 <GetEmptyPhyBlockMS>:
    8210:	57                   	push   %edi
    8211:	56                   	push   %esi
    8212:	53                   	push   %ebx
    8213:	83 ec 10             	sub    $0x10,%esp
    8216:	8b 44 24 28          	mov    0x28(%esp),%eax
    821a:	8b 74 24 20          	mov    0x20(%esp),%esi
    821e:	8b 7c 24 24          	mov    0x24(%esp),%edi
    8222:	88 44 24 0f          	mov    %al,0xf(%esp)
    8226:	88 c3                	mov    %al,%bl
    8228:	90                   	nop    
    8229:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    8230:	89 7c 24 04          	mov    %edi,0x4(%esp)
    8234:	0f b6 c3             	movzbl %bl,%eax
    8237:	89 44 24 08          	mov    %eax,0x8(%esp)
    823b:	89 34 24             	mov    %esi,(%esp)
    823e:	e8 1d ff ff ff       	call   8160 <GetEmptyPhyBlockInSegmentMS>
    8243:	3c 84                	cmp    $0x84,%al
    8245:	88 c2                	mov    %al,%dl
    8247:	75 19                	jne    8262 <GetEmptyPhyBlockMS+0x52>
    8249:	fe c3                	inc    %bl
    824b:	3a 1e                	cmp    (%esi),%bl
    824d:	72 02                	jb     8251 <GetEmptyPhyBlockMS+0x41>
    824f:	31 db                	xor    %ebx,%ebx
    8251:	0f b6 c3             	movzbl %bl,%eax
    8254:	0f b7 44 46 0e       	movzwl 0xe(%esi,%eax,2),%eax
    8259:	66 89 07             	mov    %ax,(%edi)
    825c:	3a 5c 24 0f          	cmp    0xf(%esp),%bl
    8260:	75 ce                	jne    8230 <GetEmptyPhyBlockMS+0x20>
    8262:	83 c4 10             	add    $0x10,%esp
    8265:	0f b6 c2             	movzbl %dl,%eax
    8268:	5b                   	pop    %ebx
    8269:	5e                   	pop    %esi
    826a:	5f                   	pop    %edi
    826b:	c3                   	ret    
    826c:	8d 74 26 00          	lea    0x0(%esi),%esi

00008270 <CheckFFPhyBlockMS>:
    8270:	83 ec 20             	sub    $0x20,%esp
    8273:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    8277:	8b 5c 24 24          	mov    0x24(%esp),%ebx
    827b:	89 6c 24 1c          	mov    %ebp,0x1c(%esp)
    827f:	0f b7 6c 24 28       	movzwl 0x28(%esp),%ebp
    8284:	89 74 24 14          	mov    %esi,0x14(%esp)
    8288:	89 7c 24 18          	mov    %edi,0x18(%esp)
    828c:	c6 44 24 0d 00       	movb   $0x0,0xd(%esp)
    8291:	66 39 6b 2e          	cmp    %bp,0x2e(%ebx)
    8295:	74 19                	je     82b0 <CheckFFPhyBlockMS+0x40>
    8297:	0f b6 44 24 0d       	movzbl 0xd(%esp),%eax
    829c:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    82a0:	8b 74 24 14          	mov    0x14(%esp),%esi
    82a4:	8b 7c 24 18          	mov    0x18(%esp),%edi
    82a8:	8b 6c 24 1c          	mov    0x1c(%esp),%ebp
    82ac:	83 c4 20             	add    $0x20,%esp
    82af:	c3                   	ret    
    82b0:	89 1c 24             	mov    %ebx,(%esp)
    82b3:	31 c0                	xor    %eax,%eax
    82b5:	89 44 24 08          	mov    %eax,0x8(%esp)
    82b9:	8d 44 24 0e          	lea    0xe(%esp),%eax
    82bd:	89 44 24 04          	mov    %eax,0x4(%esp)
    82c1:	e8 4a ff ff ff       	call   8210 <GetEmptyPhyBlockMS>
    82c6:	88 44 24 0d          	mov    %al,0xd(%esp)
    82ca:	84 c0                	test   %al,%al
    82cc:	74 05                	je     82d3 <CheckFFPhyBlockMS+0x63>
    82ce:	0f b6 c0             	movzbl %al,%eax
    82d1:	eb c9                	jmp    829c <CheckFFPhyBlockMS+0x2c>
    82d3:	0f b7 7b 04          	movzwl 0x4(%ebx),%edi
    82d7:	31 f6                	xor    %esi,%esi
    82d9:	0f b7 44 24 0e       	movzwl 0xe(%esp),%eax
    82de:	66 83 ff 00          	cmp    $0x0,%di
    82e2:	66 89 43 2e          	mov    %ax,0x2e(%ebx)
    82e6:	76 af                	jbe    8297 <CheckFFPhyBlockMS+0x27>
    82e8:	90                   	nop    
    82e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    82f0:	89 74 24 04          	mov    %esi,0x4(%esp)
    82f4:	89 1c 24             	mov    %ebx,(%esp)
    82f7:	e8 c4 da ff ff       	call   5dc0 <LUTGetPhyBlockMS>
    82fc:	66 39 e8             	cmp    %bp,%ax
    82ff:	74 0d                	je     830e <CheckFFPhyBlockMS+0x9e>
    8301:	8d 46 01             	lea    0x1(%esi),%eax
    8304:	0f b7 f0             	movzwl %ax,%esi
    8307:	66 39 f7             	cmp    %si,%di
    830a:	77 e4                	ja     82f0 <CheckFFPhyBlockMS+0x80>
    830c:	eb 89                	jmp    8297 <CheckFFPhyBlockMS+0x27>
    830e:	0f b7 43 2e          	movzwl 0x2e(%ebx),%eax
    8312:	89 74 24 04          	mov    %esi,0x4(%esp)
    8316:	89 1c 24             	mov    %ebx,(%esp)
    8319:	89 44 24 08          	mov    %eax,0x8(%esp)
    831d:	e8 7e da ff ff       	call   5da0 <LUTSetPhyBlockMS>
    8322:	0f b7 7b 04          	movzwl 0x4(%ebx),%edi
    8326:	eb d9                	jmp    8301 <CheckFFPhyBlockMS+0x91>
    8328:	90                   	nop    
    8329:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00008330 <WritePageMS>:
    8330:	55                   	push   %ebp
    8331:	57                   	push   %edi
    8332:	56                   	push   %esi
    8333:	53                   	push   %ebx
    8334:	83 ec 18             	sub    $0x18,%esp
    8337:	8b 74 24 2c          	mov    0x2c(%esp),%esi
    833b:	0f b6 44 24 38       	movzbl 0x38(%esp),%eax
    8340:	0f b6 54 24 3c       	movzbl 0x3c(%esp),%edx
    8345:	0f b6 4c 24 40       	movzbl 0x40(%esp),%ecx
    834a:	0f b7 6c 24 30       	movzwl 0x30(%esp),%ebp
    834f:	0f b7 7c 24 34       	movzwl 0x34(%esp),%edi
    8354:	88 44 24 17          	mov    %al,0x17(%esp)
    8358:	88 54 24 16          	mov    %dl,0x16(%esp)
    835c:	88 4c 24 15          	mov    %cl,0x15(%esp)
    8360:	66 39 7e 0a          	cmp    %di,0xa(%esi)
    8364:	0f 84 76 03 00 00    	je     86e0 <WritePageMS+0x3b0>
    836a:	66 39 7e 0c          	cmp    %di,0xc(%esi)
    836e:	0f 84 6c 03 00 00    	je     86e0 <WritePageMS+0x3b0>
    8374:	0f b6 5c 24 16       	movzbl 0x16(%esp),%ebx
    8379:	f6 c3 20             	test   $0x20,%bl
    837c:	0f 85 45 03 00 00    	jne    86c7 <WritePageMS+0x397>
    8382:	f6 c3 01             	test   $0x1,%bl
    8385:	0f 85 29 03 00 00    	jne    86b4 <WritePageMS+0x384>
    838b:	f6 c3 04             	test   $0x4,%bl
    838e:	0f 85 f3 02 00 00    	jne    8687 <WritePageMS+0x357>
    8394:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    839a:	89 e9                	mov    %ebp,%ecx
    839c:	c6 40 25 ff          	movb   $0xff,0x25(%eax)
    83a0:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    83a6:	c6 40 26 ff          	movb   $0xff,0x26(%eax)
    83aa:	8b 96 64 44 00 00    	mov    0x4464(%esi),%edx
    83b0:	0f b6 c5             	movzbl %ch,%eax
    83b3:	88 42 27             	mov    %al,0x27(%edx)
    83b6:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    83bc:	88 48 28             	mov    %cl,0x28(%eax)
    83bf:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
    83c4:	89 7c 24 04          	mov    %edi,0x4(%esp)
    83c8:	89 34 24             	mov    %esi,(%esp)
    83cb:	89 44 24 08          	mov    %eax,0x8(%esp)
    83cf:	e8 cc e6 ff ff       	call   6aa0 <SetAddressMS>
    83d4:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    83da:	8b 41 3c             	mov    0x3c(%ecx),%eax
    83dd:	80 78 09 00          	cmpb   $0x0,0x9(%eax)
    83e1:	74 1d                	je     8400 <WritePageMS+0xd0>
    83e3:	89 0c 24             	mov    %ecx,(%esp)
    83e6:	e8 d5 e0 ff ff       	call   64c0 <GetIntMS>
    83eb:	84 c0                	test   %al,%al
    83ed:	88 c3                	mov    %al,%bl
    83ef:	0f 85 80 01 00 00    	jne    8575 <WritePageMS+0x245>
    83f5:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    83fb:	90                   	nop    
    83fc:	8d 74 26 00          	lea    0x0(%esi),%esi
    8400:	89 0c 24             	mov    %ecx,(%esp)
    8403:	b8 01 00 00 00       	mov    $0x1,%eax
    8408:	bd 55 00 00 00       	mov    $0x55,%ebp
    840d:	89 44 24 10          	mov    %eax,0x10(%esp)
    8411:	31 c0                	xor    %eax,%eax
    8413:	89 44 24 0c          	mov    %eax,0xc(%esp)
    8417:	b8 01 00 00 00       	mov    $0x1,%eax
    841c:	89 44 24 08          	mov    %eax,0x8(%esp)
    8420:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    8424:	e8 97 e4 ff ff       	call   68c0 <CmdMemoryStick>
    8429:	84 c0                	test   %al,%al
    842b:	88 c3                	mov    %al,%bl
    842d:	0f 85 3f 02 00 00    	jne    8672 <WritePageMS+0x342>
    8433:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    8439:	89 04 24             	mov    %eax,(%esp)
    843c:	e8 7f e0 ff ff       	call   64c0 <GetIntMS>
    8441:	84 c0                	test   %al,%al
    8443:	88 c3                	mov    %al,%bl
    8445:	0f 85 1b 02 00 00    	jne    8666 <WritePageMS+0x336>
    844b:	8b 96 64 44 00 00    	mov    0x4464(%esi),%edx
    8451:	0f b6 42 10          	movzbl 0x10(%edx),%eax
    8455:	a8 01                	test   $0x1,%al
    8457:	0f 85 dd 01 00 00    	jne    863a <WritePageMS+0x30a>
    845d:	a8 40                	test   $0x40,%al
    845f:	0f 85 a1 01 00 00    	jne    8606 <WritePageMS+0x2d6>
    8465:	80 7c 24 15 00       	cmpb   $0x0,0x15(%esp)
    846a:	75 0c                	jne    8478 <WritePageMS+0x148>
    846c:	31 c0                	xor    %eax,%eax
    846e:	89 f6                	mov    %esi,%esi
    8470:	83 c4 18             	add    $0x18,%esp
    8473:	5b                   	pop    %ebx
    8474:	5e                   	pop    %esi
    8475:	5f                   	pop    %edi
    8476:	5d                   	pop    %ebp
    8477:	c3                   	ret    
    8478:	89 14 24             	mov    %edx,(%esp)
    847b:	e8 fc ff ff ff       	call   847c <WritePageMS+0x14c>
			847c: R_386_PC32	MS_SYSTEM1
    8480:	0d 00 01 01 00       	or     $0x10100,%eax
    8485:	25 ff ef ff ff       	and    $0xffffefff,%eax
    848a:	89 44 24 04          	mov    %eax,0x4(%esp)
    848e:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    8494:	89 04 24             	mov    %eax,(%esp)
    8497:	e8 fc ff ff ff       	call   8498 <WritePageMS+0x168>
			8498: R_386_PC32	MS_SYSTEM2
    849c:	b8 00 02 00 00       	mov    $0x200,%eax
    84a1:	89 44 24 08          	mov    %eax,0x8(%esp)
    84a5:	b8 0d 00 00 00       	mov    $0xd,%eax
    84aa:	89 44 24 04          	mov    %eax,0x4(%esp)
    84ae:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    84b4:	89 04 24             	mov    %eax,(%esp)
    84b7:	e8 04 df ff ff       	call   63c0 <TPCMemoryStick>
    84bc:	84 c0                	test   %al,%al
    84be:	0f 85 23 01 00 00    	jne    85e7 <WritePageMS+0x2b7>
    84c4:	0f b6 7c 24 16       	movzbl 0x16(%esp),%edi
    84c9:	f7 c7 28 00 00 00    	test   $0x28,%edi
    84cf:	74 9b                	je     846c <WritePageMS+0x13c>
    84d1:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    84d7:	89 04 24             	mov    %eax,(%esp)
    84da:	e8 21 dd ff ff       	call   6200 <WaitForMSINT>
    84df:	84 c0                	test   %al,%al
    84e1:	0f 85 e4 00 00 00    	jne    85cb <WritePageMS+0x29b>
    84e7:	83 e7 08             	and    $0x8,%edi
    84ea:	0f 85 8d 00 00 00    	jne    857d <WritePageMS+0x24d>
    84f0:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    84f6:	31 ff                	xor    %edi,%edi
    84f8:	89 0c 24             	mov    %ecx,(%esp)
    84fb:	e8 c0 df ff ff       	call   64c0 <GetIntMS>
    8500:	84 c0                	test   %al,%al
    8502:	88 c3                	mov    %al,%bl
    8504:	75 4f                	jne    8555 <WritePageMS+0x225>
    8506:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    850c:	89 c1                	mov    %eax,%ecx
    850e:	80 78 10 00          	cmpb   $0x0,0x10(%eax)
    8512:	78 02                	js     8516 <WritePageMS+0x1e6>
    8514:	b3 4f                	mov    $0x4f,%bl
    8516:	80 fb 4f             	cmp    $0x4f,%bl
    8519:	75 0f                	jne    852a <WritePageMS+0x1fa>
    851b:	89 fa                	mov    %edi,%edx
    851d:	8d 47 01             	lea    0x1(%edi),%eax
    8520:	66 81 fa e7 03       	cmp    $0x3e7,%dx
    8525:	0f b7 f8             	movzwl %ax,%edi
    8528:	76 ce                	jbe    84f8 <WritePageMS+0x1c8>
    852a:	84 db                	test   %bl,%bl
    852c:	0f 84 3a ff ff ff    	je     846c <WritePageMS+0x13c>
    8532:	c7 04 24 60 10 00 00 	movl   $0x1060,(%esp)
			8535: R_386_32	.rodata.str1.32
    8539:	0f b6 db             	movzbl %bl,%ebx
    853c:	ba 8a 06 00 00       	mov    $0x68a,%edx
			853d: R_386_32	.rodata
    8541:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    8545:	89 54 24 04          	mov    %edx,0x4(%esp)
    8549:	e8 fc ff ff ff       	call   854a <WritePageMS+0x21a>
			854a: R_386_PC32	printk
    854e:	89 d8                	mov    %ebx,%eax
    8550:	e9 1b ff ff ff       	jmp    8470 <WritePageMS+0x140>
    8555:	c7 04 24 c0 10 00 00 	movl   $0x10c0,(%esp)
			8558: R_386_32	.rodata.str1.32
    855c:	b8 8a 06 00 00       	mov    $0x68a,%eax
			855d: R_386_32	.rodata
    8561:	89 44 24 04          	mov    %eax,0x4(%esp)
    8565:	8d 74 26 00          	lea    0x0(%esi),%esi
    8569:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    8570:	e8 fc ff ff ff       	call   8571 <WritePageMS+0x241>
			8571: R_386_PC32	printk
    8575:	0f b6 c3             	movzbl %bl,%eax
    8578:	e9 f3 fe ff ff       	jmp    8470 <WritePageMS+0x140>
    857d:	31 c0                	xor    %eax,%eax
    857f:	31 ed                	xor    %ebp,%ebp
    8581:	bb 33 00 00 00       	mov    $0x33,%ebx
    8586:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    858a:	bf 01 00 00 00       	mov    $0x1,%edi
    858f:	89 44 24 10          	mov    %eax,0x10(%esp)
    8593:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    8597:	89 7c 24 08          	mov    %edi,0x8(%esp)
    859b:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    85a1:	89 04 24             	mov    %eax,(%esp)
    85a4:	e8 17 e3 ff ff       	call   68c0 <CmdMemoryStick>
    85a9:	84 c0                	test   %al,%al
    85ab:	88 c3                	mov    %al,%bl
    85ad:	0f 84 3d ff ff ff    	je     84f0 <WritePageMS+0x1c0>
    85b3:	c7 04 24 00 11 00 00 	movl   $0x1100,(%esp)
			85b6: R_386_32	.rodata.str1.32
    85ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    85c0:	b9 8a 06 00 00       	mov    $0x68a,%ecx
			85c1: R_386_32	.rodata
    85c5:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    85c9:	eb a5                	jmp    8570 <WritePageMS+0x240>
    85cb:	c7 04 24 40 11 00 00 	movl   $0x1140,(%esp)
			85ce: R_386_32	.rodata.str1.32
    85d2:	0f b6 d8             	movzbl %al,%ebx
    85d5:	b8 8a 06 00 00       	mov    $0x68a,%eax
			85d6: R_386_32	.rodata
    85da:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    85de:	89 44 24 04          	mov    %eax,0x4(%esp)
    85e2:	e9 62 ff ff ff       	jmp    8549 <WritePageMS+0x219>
    85e7:	c7 04 24 80 11 00 00 	movl   $0x1180,(%esp)
			85ea: R_386_32	.rodata.str1.32
    85ee:	b8 8a 06 00 00       	mov    $0x68a,%eax
			85ef: R_386_32	.rodata
    85f3:	89 44 24 04          	mov    %eax,0x4(%esp)
    85f7:	e8 fc ff ff ff       	call   85f8 <WritePageMS+0x2c8>
			85f8: R_386_PC32	printk
    85fc:	b8 81 00 00 00       	mov    $0x81,%eax
    8601:	e9 6a fe ff ff       	jmp    8470 <WritePageMS+0x140>
    8606:	0f b6 42 12          	movzbl 0x12(%edx),%eax
    860a:	89 7c 24 08          	mov    %edi,0x8(%esp)
    860e:	c7 04 24 c0 11 00 00 	movl   $0x11c0,(%esp)
			8611: R_386_32	.rodata.str1.32
    8615:	89 44 24 10          	mov    %eax,0x10(%esp)
    8619:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
    861e:	89 44 24 0c          	mov    %eax,0xc(%esp)
    8622:	b8 8a 06 00 00       	mov    $0x68a,%eax
			8623: R_386_32	.rodata
    8627:	89 44 24 04          	mov    %eax,0x4(%esp)
    862b:	e8 fc ff ff ff       	call   862c <WritePageMS+0x2fc>
			862c: R_386_PC32	printk
    8630:	b8 44 00 00 00       	mov    $0x44,%eax
    8635:	e9 36 fe ff ff       	jmp    8470 <WritePageMS+0x140>
    863a:	0f b6 44 24 17       	movzbl 0x17(%esp),%eax
    863f:	ba 8a 06 00 00       	mov    $0x68a,%edx
			8640: R_386_32	.rodata
    8644:	89 7c 24 08          	mov    %edi,0x8(%esp)
    8648:	89 54 24 04          	mov    %edx,0x4(%esp)
    864c:	c7 04 24 20 12 00 00 	movl   $0x1220,(%esp)
			864f: R_386_32	.rodata.str1.32
    8653:	89 44 24 0c          	mov    %eax,0xc(%esp)
    8657:	e8 fc ff ff ff       	call   8658 <WritePageMS+0x328>
			8658: R_386_PC32	printk
    865c:	b8 49 00 00 00       	mov    $0x49,%eax
    8661:	e9 0a fe ff ff       	jmp    8470 <WritePageMS+0x140>
    8666:	c7 04 24 80 12 00 00 	movl   $0x1280,(%esp)
			8669: R_386_32	.rodata.str1.32
    866d:	e9 4e ff ff ff       	jmp    85c0 <WritePageMS+0x290>
    8672:	c7 04 24 c0 12 00 00 	movl   $0x12c0,(%esp)
			8675: R_386_32	.rodata.str1.32
    8679:	bf 8a 06 00 00       	mov    $0x68a,%edi
			867a: R_386_32	.rodata
    867e:	89 7c 24 04          	mov    %edi,0x4(%esp)
    8682:	e9 e9 fe ff ff       	jmp    8570 <WritePageMS+0x240>
    8687:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    868d:	89 04 24             	mov    %eax,(%esp)
    8690:	e8 6b db ff ff       	call   6200 <WaitForMSINT>
    8695:	84 c0                	test   %al,%al
    8697:	88 c3                	mov    %al,%bl
    8699:	0f 84 94 fd ff ff    	je     8433 <WritePageMS+0x103>
    869f:	c7 04 24 00 13 00 00 	movl   $0x1300,(%esp)
			86a2: R_386_32	.rodata.str1.32
    86a6:	be 8a 06 00 00       	mov    $0x68a,%esi
			86a7: R_386_32	.rodata
    86ab:	89 74 24 04          	mov    %esi,0x4(%esp)
    86af:	e9 bc fe ff ff       	jmp    8570 <WritePageMS+0x240>
    86b4:	89 34 24             	mov    %esi,(%esp)
    86b7:	31 c0                	xor    %eax,%eax
    86b9:	89 44 24 04          	mov    %eax,0x4(%esp)
    86bd:	e8 de de ff ff       	call   65a0 <SetCmdParameterMS>
    86c2:	e9 c4 fc ff ff       	jmp    838b <WritePageMS+0x5b>
    86c7:	89 34 24             	mov    %esi,(%esp)
    86ca:	b8 20 00 00 00       	mov    $0x20,%eax
    86cf:	89 44 24 04          	mov    %eax,0x4(%esp)
    86d3:	e8 c8 de ff ff       	call   65a0 <SetCmdParameterMS>
    86d8:	e9 a5 fc ff ff       	jmp    8382 <WritePageMS+0x52>
    86dd:	8d 76 00             	lea    0x0(%esi),%esi
    86e0:	89 7c 24 08          	mov    %edi,0x8(%esp)
    86e4:	b8 8a 06 00 00       	mov    $0x68a,%eax
			86e5: R_386_32	.rodata
    86e9:	89 44 24 04          	mov    %eax,0x4(%esp)
    86ed:	c7 04 24 40 13 00 00 	movl   $0x1340,(%esp)
			86f0: R_386_32	.rodata.str1.32
    86f4:	e8 fc ff ff ff       	call   86f5 <WritePageMS+0x3c5>
			86f5: R_386_PC32	printk
    86f9:	b8 85 00 00 00       	mov    $0x85,%eax
    86fe:	e9 6d fd ff ff       	jmp    8470 <WritePageMS+0x140>
    8703:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8709:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00008710 <CopyPagesMS>:
    8710:	55                   	push   %ebp
    8711:	57                   	push   %edi
    8712:	56                   	push   %esi
    8713:	53                   	push   %ebx
    8714:	83 ec 20             	sub    $0x20,%esp
    8717:	31 db                	xor    %ebx,%ebx
    8719:	0f b7 44 24 38       	movzwl 0x38(%esp),%eax
    871e:	0f b7 6c 24 3c       	movzwl 0x3c(%esp),%ebp
    8723:	0f b7 7c 24 40       	movzwl 0x40(%esp),%edi
    8728:	c6 44 24 19 00       	movb   $0x0,0x19(%esp)
    872d:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8731:	0f b6 44 24 48       	movzbl 0x48(%esp),%eax
    8736:	88 44 24 1b          	mov    %al,0x1b(%esp)
    873a:	0f b6 44 24 44       	movzbl 0x44(%esp),%eax
    873f:	88 44 24 1a          	mov    %al,0x1a(%esp)
    8743:	0f b6 44 24 1b       	movzbl 0x1b(%esp),%eax
    8748:	38 44 24 1a          	cmp    %al,0x1a(%esp)
    874c:	72 12                	jb     8760 <CopyPagesMS+0x50>
    874e:	0f b6 c3             	movzbl %bl,%eax
    8751:	83 c4 20             	add    $0x20,%esp
    8754:	5b                   	pop    %ebx
    8755:	5e                   	pop    %esi
    8756:	5f                   	pop    %edi
    8757:	5d                   	pop    %ebp
    8758:	c3                   	ret    
    8759:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    8760:	0f b6 74 24 1a       	movzbl 0x1a(%esp),%esi
    8765:	31 c0                	xor    %eax,%eax
    8767:	89 44 24 10          	mov    %eax,0x10(%esp)
    876b:	b8 20 00 00 00       	mov    $0x20,%eax
    8770:	89 44 24 0c          	mov    %eax,0xc(%esp)
    8774:	8b 44 24 34          	mov    0x34(%esp),%eax
    8778:	89 74 24 08          	mov    %esi,0x8(%esp)
    877c:	89 7c 24 04          	mov    %edi,0x4(%esp)
    8780:	89 04 24             	mov    %eax,(%esp)
    8783:	e8 08 e4 ff ff       	call   6b90 <ReadPageMS>
    8788:	84 c0                	test   %al,%al
    878a:	88 c3                	mov    %al,%bl
    878c:	74 24                	je     87b2 <CopyPagesMS+0xa2>
    878e:	c6 44 24 19 01       	movb   $0x1,0x19(%esp)
    8793:	b8 96 06 00 00       	mov    $0x696,%eax
			8794: R_386_32	.rodata
    8798:	89 44 24 04          	mov    %eax,0x4(%esp)
    879c:	c7 04 24 a0 13 00 00 	movl   $0x13a0,(%esp)
			879f: R_386_32	.rodata.str1.32
    87a3:	e8 fc ff ff ff       	call   87a4 <CopyPagesMS+0x94>
			87a4: R_386_PC32	printk
    87a8:	80 fb 81             	cmp    $0x81,%bl
    87ab:	b8 81 00 00 00       	mov    $0x81,%eax
    87b0:	74 9f                	je     8751 <CopyPagesMS+0x41>
    87b2:	89 74 24 0c          	mov    %esi,0xc(%esp)
    87b6:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    87ba:	31 c9                	xor    %ecx,%ecx
    87bc:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    87c0:	ba 20 00 00 00       	mov    $0x20,%edx
    87c5:	89 54 24 10          	mov    %edx,0x10(%esp)
    87c9:	89 44 24 04          	mov    %eax,0x4(%esp)
    87cd:	8b 44 24 34          	mov    0x34(%esp),%eax
    87d1:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    87d5:	89 04 24             	mov    %eax,(%esp)
    87d8:	e8 53 fb ff ff       	call   8330 <WritePageMS>
    87dd:	fe 44 24 1a          	incb   0x1a(%esp)
    87e1:	88 c3                	mov    %al,%bl
    87e3:	84 c0                	test   %al,%al
    87e5:	75 21                	jne    8808 <CopyPagesMS+0xf8>
    87e7:	0f b6 44 24 1b       	movzbl 0x1b(%esp),%eax
    87ec:	38 44 24 1a          	cmp    %al,0x1a(%esp)
    87f0:	0f 82 6a ff ff ff    	jb     8760 <CopyPagesMS+0x50>
    87f6:	80 7c 24 19 00       	cmpb   $0x0,0x19(%esp)
    87fb:	0f 84 4d ff ff ff    	je     874e <CopyPagesMS+0x3e>
    8801:	b3 45                	mov    $0x45,%bl
    8803:	e9 46 ff ff ff       	jmp    874e <CopyPagesMS+0x3e>
    8808:	b3 46                	mov    $0x46,%bl
    880a:	e9 3f ff ff ff       	jmp    874e <CopyPagesMS+0x3e>
    880f:	90                   	nop    

00008810 <WritePhyBlockMS>:
    8810:	55                   	push   %ebp
    8811:	57                   	push   %edi
    8812:	56                   	push   %esi
    8813:	53                   	push   %ebx
    8814:	83 ec 24             	sub    $0x24,%esp
    8817:	8b 74 24 38          	mov    0x38(%esp),%esi
    881b:	0f b6 44 24 44       	movzbl 0x44(%esp),%eax
    8820:	0f b7 54 24 48       	movzwl 0x48(%esp),%edx
    8825:	c6 44 24 1a 00       	movb   $0x0,0x1a(%esp)
    882a:	0f b7 6c 24 3c       	movzwl 0x3c(%esp),%ebp
    882f:	88 44 24 23          	mov    %al,0x23(%esp)
    8833:	0f b6 44 24 4c       	movzbl 0x4c(%esp),%eax
    8838:	89 54 24 1c          	mov    %edx,0x1c(%esp)
    883c:	8b 54 24 40          	mov    0x40(%esp),%edx
    8840:	88 44 24 1b          	mov    %al,0x1b(%esp)
    8844:	0f b7 1a             	movzwl (%edx),%ebx
    8847:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    884d:	89 cf                	mov    %ecx,%edi
    884f:	80 79 0d 00          	cmpb   $0x0,0xd(%ecx)
    8853:	0f 85 0d 01 00 00    	jne    8966 <WritePhyBlockMS+0x156>
    8859:	66 39 5e 34          	cmp    %bx,0x34(%esi)
    885d:	66 89 6e 32          	mov    %bp,0x32(%esi)
    8861:	66 89 5e 30          	mov    %bx,0x30(%esi)
    8865:	0f b7 4e 2e          	movzwl 0x2e(%esi),%ecx
    8869:	74 23                	je     888e <WritePhyBlockMS+0x7e>
    886b:	66 0f b6 56 08       	movzbw 0x8(%esi),%dx
    8870:	31 c0                	xor    %eax,%eax
    8872:	66 83 fa 00          	cmp    $0x0,%dx
    8876:	76 16                	jbe    888e <WritePhyBlockMS+0x7e>
    8878:	90                   	nop    
    8879:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    8880:	c6 44 06 38 00       	movb   $0x0,0x38(%esi,%eax,1)
    8885:	40                   	inc    %eax
    8886:	0f b7 c0             	movzwl %ax,%eax
    8889:	66 39 c2             	cmp    %ax,%dx
    888c:	77 f2                	ja     8880 <WritePhyBlockMS+0x70>
    888e:	66 c7 46 34 ff ff    	movw   $0xffff,0x34(%esi)
    8894:	66 39 cb             	cmp    %cx,%bx
    8897:	74 10                	je     88a9 <WritePhyBlockMS+0x99>
    8899:	0f b6 44 24 23       	movzbl 0x23(%esp),%eax
    889e:	80 7c 06 38 00       	cmpb   $0x0,0x38(%esi,%eax,1)
    88a3:	0f 85 c8 03 00 00    	jne    8c71 <WritePhyBlockMS+0x461>
    88a9:	c6 47 0d 01          	movb   $0x1,0xd(%edi)
    88ad:	31 d2                	xor    %edx,%edx
    88af:	b8 ed 01 00 00       	mov    $0x1ed,%eax
    88b4:	0f b6 0e             	movzbl (%esi),%ecx
    88b7:	38 ca                	cmp    %cl,%dl
    88b9:	73 3d                	jae    88f8 <WritePhyBlockMS+0xe8>
    88bb:	90                   	nop    
    88bc:	8d 74 26 00          	lea    0x0(%esi),%esi
    88c0:	66 39 c5             	cmp    %ax,%bp
    88c3:	0f 86 89 03 00 00    	jbe    8c52 <WritePhyBlockMS+0x442>
    88c9:	fe c2                	inc    %dl
    88cb:	05 f0 01 00 00       	add    $0x1f0,%eax
    88d0:	38 ca                	cmp    %cl,%dl
    88d2:	0f b7 c0             	movzwl %ax,%eax
    88d5:	72 e9                	jb     88c0 <WritePhyBlockMS+0xb0>
    88d7:	80 7c 24 1a 00       	cmpb   $0x0,0x1a(%esp)
    88dc:	74 1a                	je     88f8 <WritePhyBlockMS+0xe8>
    88de:	0f b6 44 24 1a       	movzbl 0x1a(%esp),%eax
    88e3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    88e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    88f0:	83 c4 24             	add    $0x24,%esp
    88f3:	5b                   	pop    %ebx
    88f4:	5e                   	pop    %esi
    88f5:	5f                   	pop    %edi
    88f6:	5d                   	pop    %ebp
    88f7:	c3                   	ret    
    88f8:	b8 01 00 00 00       	mov    $0x1,%eax
    88fd:	89 44 24 08          	mov    %eax,0x8(%esp)
    8901:	0f b7 46 30          	movzwl 0x30(%esi),%eax
    8905:	89 34 24             	mov    %esi,(%esp)
    8908:	89 44 24 04          	mov    %eax,0x4(%esp)
    890c:	e8 3f d4 ff ff       	call   5d50 <PhyBlockUsedMS2>
    8911:	66 0f b6 56 08       	movzbw 0x8(%esi),%dx
    8916:	31 c0                	xor    %eax,%eax
    8918:	66 83 fa 00          	cmp    $0x0,%dx
    891c:	76 10                	jbe    892e <WritePhyBlockMS+0x11e>
    891e:	89 f6                	mov    %esi,%esi
    8920:	c6 44 06 38 01       	movb   $0x1,0x38(%esi,%eax,1)
    8925:	40                   	inc    %eax
    8926:	0f b7 c0             	movzwl %ax,%eax
    8929:	66 39 c2             	cmp    %ax,%dx
    892c:	77 f2                	ja     8920 <WritePhyBlockMS+0x110>
    892e:	0f b7 46 36          	movzwl 0x36(%esi),%eax
    8932:	66 83 f8 ff          	cmp    $0xffffffff,%ax
    8936:	74 0f                	je     8947 <WritePhyBlockMS+0x137>
    8938:	89 34 24             	mov    %esi,(%esp)
    893b:	0f b7 c0             	movzwl %ax,%eax
    893e:	89 44 24 04          	mov    %eax,0x4(%esp)
    8942:	e8 99 e1 ff ff       	call   6ae0 <EraseBlockMS>
    8947:	66 c7 46 36 ff ff    	movw   $0xffff,0x36(%esi)
    894d:	0f b7 46 30          	movzwl 0x30(%esi),%eax
    8951:	8b 54 24 40          	mov    0x40(%esp),%edx
    8955:	66 89 02             	mov    %ax,(%edx)
    8958:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    895e:	0f b7 46 30          	movzwl 0x30(%esi),%eax
    8962:	66 89 46 34          	mov    %ax,0x34(%esi)
    8966:	80 79 0d 01          	cmpb   $0x1,0xd(%ecx)
    896a:	0f 84 44 02 00 00    	je     8bb4 <WritePhyBlockMS+0x3a4>
    8970:	80 79 0d 03          	cmpb   $0x3,0xd(%ecx)
    8974:	0f 84 e6 01 00 00    	je     8b60 <WritePhyBlockMS+0x350>
    897a:	80 79 0d 02          	cmpb   $0x2,0xd(%ecx)
    897e:	0f 84 e2 00 00 00    	je     8a66 <WritePhyBlockMS+0x256>
    8984:	80 79 0d 04          	cmpb   $0x4,0xd(%ecx)
    8988:	74 48                	je     89d2 <WritePhyBlockMS+0x1c2>
    898a:	31 c0                	xor    %eax,%eax
    898c:	80 7c 24 1a 00       	cmpb   $0x0,0x1a(%esp)
    8991:	0f 84 59 ff ff ff    	je     88f0 <WritePhyBlockMS+0xe0>
    8997:	0f b6 5c 24 1a       	movzbl 0x1a(%esp),%ebx
    899c:	b8 a2 06 00 00       	mov    $0x6a2,%eax
			899d: R_386_32	.rodata
    89a1:	89 44 24 04          	mov    %eax,0x4(%esp)
    89a5:	c7 04 24 e0 13 00 00 	movl   $0x13e0,(%esp)
			89a8: R_386_32	.rodata.str1.32
    89ac:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    89b0:	e8 fc ff ff ff       	call   89b1 <WritePhyBlockMS+0x1a1>
			89b1: R_386_PC32	printk
    89b5:	0f b7 46 30          	movzwl 0x30(%esi),%eax
    89b9:	89 34 24             	mov    %esi,(%esp)
    89bc:	89 44 24 04          	mov    %eax,0x4(%esp)
    89c0:	e8 1b e1 ff ff       	call   6ae0 <EraseBlockMS>
    89c5:	66 c7 46 36 ff ff    	movw   $0xffff,0x36(%esi)
    89cb:	89 d8                	mov    %ebx,%eax
    89cd:	e9 1e ff ff ff       	jmp    88f0 <WritePhyBlockMS+0xe0>
    89d2:	0f b6 46 08          	movzbl 0x8(%esi),%eax
    89d6:	89 44 24 14          	mov    %eax,0x14(%esp)
    89da:	0f b6 46 5a          	movzbl 0x5a(%esi),%eax
    89de:	89 44 24 10          	mov    %eax,0x10(%esp)
    89e2:	0f b7 46 36          	movzwl 0x36(%esi),%eax
    89e6:	89 44 24 0c          	mov    %eax,0xc(%esp)
    89ea:	0f b7 46 30          	movzwl 0x30(%esi),%eax
    89ee:	89 44 24 08          	mov    %eax,0x8(%esp)
    89f2:	0f b7 46 32          	movzwl 0x32(%esi),%eax
    89f6:	89 34 24             	mov    %esi,(%esp)
    89f9:	89 44 24 04          	mov    %eax,0x4(%esp)
    89fd:	e8 0e fd ff ff       	call   8710 <CopyPagesMS>
    8a02:	88 44 24 1a          	mov    %al,0x1a(%esp)
    8a06:	0f b7 46 5a          	movzwl 0x5a(%esi),%eax
    8a0a:	66 0f b6 56 08       	movzbw 0x8(%esi),%dx
    8a0f:	66 39 c2             	cmp    %ax,%dx
    8a12:	76 1a                	jbe    8a2e <WritePhyBlockMS+0x21e>
    8a14:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8a1a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
    8a20:	c6 44 06 38 00       	movb   $0x0,0x38(%esi,%eax,1)
    8a25:	40                   	inc    %eax
    8a26:	0f b7 c0             	movzwl %ax,%eax
    8a29:	66 39 c2             	cmp    %ax,%dx
    8a2c:	77 f2                	ja     8a20 <WritePhyBlockMS+0x210>
    8a2e:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    8a34:	c6 40 0d 00          	movb   $0x0,0xd(%eax)
    8a38:	80 7c 24 1a 45       	cmpb   $0x45,0x1a(%esp)
    8a3d:	74 07                	je     8a46 <WritePhyBlockMS+0x236>
    8a3f:	80 7c 24 1a 00       	cmpb   $0x0,0x1a(%esp)
    8a44:	75 15                	jne    8a5b <WritePhyBlockMS+0x24b>
    8a46:	0f b7 46 36          	movzwl 0x36(%esi),%eax
    8a4a:	89 34 24             	mov    %esi,(%esp)
    8a4d:	89 44 24 04          	mov    %eax,0x4(%esp)
    8a51:	e8 8a e0 ff ff       	call   6ae0 <EraseBlockMS>
    8a56:	c6 44 24 1a 00       	movb   $0x0,0x1a(%esp)
    8a5b:	66 c7 46 36 ff ff    	movw   $0xffff,0x36(%esi)
    8a61:	e9 24 ff ff ff       	jmp    898a <WritePhyBlockMS+0x17a>
    8a66:	80 7c 24 1b 00       	cmpb   $0x0,0x1b(%esp)
    8a6b:	74 09                	je     8a76 <WritePhyBlockMS+0x266>
    8a6d:	80 7c 24 23 00       	cmpb   $0x0,0x23(%esp)
    8a72:	b1 04                	mov    $0x4,%cl
    8a74:	75 02                	jne    8a78 <WritePhyBlockMS+0x268>
    8a76:	b1 01                	mov    $0x1,%cl
    8a78:	0f b6 46 08          	movzbl 0x8(%esi),%eax
    8a7c:	0f b6 54 24 23       	movzbl 0x23(%esp),%edx
    8a81:	48                   	dec    %eax
    8a82:	39 c2                	cmp    %eax,%edx
    8a84:	0f 84 ca 00 00 00    	je     8b54 <WritePhyBlockMS+0x344>
    8a8a:	66 83 7c 24 1c 01    	cmpw   $0x1,0x1c(%esp)
    8a90:	0f 84 be 00 00 00    	je     8b54 <WritePhyBlockMS+0x344>
    8a96:	0f b6 44 24 23       	movzbl 0x23(%esp),%eax
    8a9b:	0f b7 56 5a          	movzwl 0x5a(%esi),%edx
    8a9f:	40                   	inc    %eax
    8aa0:	39 d0                	cmp    %edx,%eax
    8aa2:	7c 03                	jl     8aa7 <WritePhyBlockMS+0x297>
    8aa4:	80 c9 08             	or     $0x8,%cl
    8aa7:	80 7c 24 1b 00       	cmpb   $0x0,0x1b(%esp)
    8aac:	75 0c                	jne    8aba <WritePhyBlockMS+0x2aa>
    8aae:	66 83 7c 24 1c 01    	cmpw   $0x1,0x1c(%esp)
    8ab4:	0f 84 93 00 00 00    	je     8b4d <WritePhyBlockMS+0x33d>
    8aba:	0f b6 5c 24 23       	movzbl 0x23(%esp),%ebx
    8abf:	b8 01 00 00 00       	mov    $0x1,%eax
    8ac4:	89 44 24 14          	mov    %eax,0x14(%esp)
    8ac8:	0f b6 c1             	movzbl %cl,%eax
    8acb:	89 44 24 10          	mov    %eax,0x10(%esp)
    8acf:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    8ad3:	0f b7 46 30          	movzwl 0x30(%esi),%eax
    8ad7:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    8adb:	89 34 24             	mov    %esi,(%esp)
    8ade:	89 44 24 08          	mov    %eax,0x8(%esp)
    8ae2:	e8 49 f8 ff ff       	call   8330 <WritePageMS>
    8ae7:	88 44 24 1a          	mov    %al,0x1a(%esp)
    8aeb:	c6 44 1e 38 00       	movb   $0x0,0x38(%esi,%ebx,1)
    8af0:	80 7c 24 1a 00       	cmpb   $0x0,0x1a(%esp)
    8af5:	75 33                	jne    8b2a <WritePhyBlockMS+0x31a>
    8af7:	0f b7 4e 5a          	movzwl 0x5a(%esi),%ecx
    8afb:	8d 53 01             	lea    0x1(%ebx),%edx
    8afe:	0f b7 c1             	movzwl %cx,%eax
    8b01:	39 c2                	cmp    %eax,%edx
    8b03:	7c 25                	jl     8b2a <WritePhyBlockMS+0x31a>
    8b05:	66 0f b6 44 24 23    	movzbw 0x23(%esp),%ax
    8b0b:	66 83 7e 36 ff       	cmpw   $0xffffffff,0x36(%esi)
    8b10:	66 89 46 5c          	mov    %ax,0x5c(%esi)
    8b14:	74 2b                	je     8b41 <WritePhyBlockMS+0x331>
    8b16:	66 0f b6 46 08       	movzbw 0x8(%esi),%ax
    8b1b:	66 39 c1             	cmp    %ax,%cx
    8b1e:	73 15                	jae    8b35 <WritePhyBlockMS+0x325>
    8b20:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    8b26:	c6 40 0d 03          	movb   $0x3,0xd(%eax)
    8b2a:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    8b30:	e9 4f fe ff ff       	jmp    8984 <WritePhyBlockMS+0x174>
    8b35:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    8b3b:	c6 40 0d 04          	movb   $0x4,0xd(%eax)
    8b3f:	eb e9                	jmp    8b2a <WritePhyBlockMS+0x31a>
    8b41:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    8b47:	c6 40 0d 00          	movb   $0x0,0xd(%eax)
    8b4b:	eb dd                	jmp    8b2a <WritePhyBlockMS+0x31a>
    8b4d:	b1 20                	mov    $0x20,%cl
    8b4f:	e9 66 ff ff ff       	jmp    8aba <WritePhyBlockMS+0x2aa>
    8b54:	80 c9 08             	or     $0x8,%cl
    8b57:	e9 3a ff ff ff       	jmp    8a96 <WritePhyBlockMS+0x286>
    8b5c:	8d 74 26 00          	lea    0x0(%esi),%esi
    8b60:	66 39 5e 34          	cmp    %bx,0x34(%esi)
    8b64:	75 0e                	jne    8b74 <WritePhyBlockMS+0x364>
    8b66:	0f b7 46 5c          	movzwl 0x5c(%esi),%eax
    8b6a:	0f b6 54 24 23       	movzbl 0x23(%esp),%edx
    8b6f:	40                   	inc    %eax
    8b70:	39 c2                	cmp    %eax,%edx
    8b72:	74 0a                	je     8b7e <WritePhyBlockMS+0x36e>
    8b74:	b8 52 00 00 00       	mov    $0x52,%eax
    8b79:	e9 72 fd ff ff       	jmp    88f0 <WritePhyBlockMS+0xe0>
    8b7e:	66 0f b6 44 24 23    	movzbw 0x23(%esp),%ax
    8b84:	66 89 46 58          	mov    %ax,0x58(%esi)
    8b88:	8b 54 24 1c          	mov    0x1c(%esp),%edx
    8b8c:	01 d0                	add    %edx,%eax
    8b8e:	66 0f b6 56 08       	movzbw 0x8(%esi),%dx
    8b93:	66 89 46 5a          	mov    %ax,0x5a(%esi)
    8b97:	66 39 c2             	cmp    %ax,%dx
    8b9a:	73 04                	jae    8ba0 <WritePhyBlockMS+0x390>
    8b9c:	66 89 56 5a          	mov    %dx,0x5a(%esi)
    8ba0:	c6 41 0d 02          	movb   $0x2,0xd(%ecx)
    8ba4:	c6 44 24 1b 00       	movb   $0x0,0x1b(%esp)
    8ba9:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    8baf:	e9 c6 fd ff ff       	jmp    897a <WritePhyBlockMS+0x16a>
    8bb4:	66 0f b6 7c 24 23    	movzbw 0x23(%esp),%di
    8bba:	66 0f b6 46 08       	movzbw 0x8(%esi),%ax
    8bbf:	66 89 5e 36          	mov    %bx,0x36(%esi)
    8bc3:	66 89 7e 58          	mov    %di,0x58(%esi)
    8bc7:	66 89 46 5a          	mov    %ax,0x5a(%esi)
    8bcb:	0f b6 46 58          	movzbl 0x58(%esi),%eax
    8bcf:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    8bd3:	89 44 24 14          	mov    %eax,0x14(%esp)
    8bd7:	31 c0                	xor    %eax,%eax
    8bd9:	89 44 24 10          	mov    %eax,0x10(%esp)
    8bdd:	0f b7 46 30          	movzwl 0x30(%esi),%eax
    8be1:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    8be5:	89 34 24             	mov    %esi,(%esp)
    8be8:	89 44 24 08          	mov    %eax,0x8(%esp)
    8bec:	e8 1f fb ff ff       	call   8710 <CopyPagesMS>
    8bf1:	88 44 24 1a          	mov    %al,0x1a(%esp)
    8bf5:	31 c0                	xor    %eax,%eax
    8bf7:	66 83 ff 00          	cmp    $0x0,%di
    8bfb:	76 11                	jbe    8c0e <WritePhyBlockMS+0x3fe>
    8bfd:	89 fa                	mov    %edi,%edx
    8bff:	90                   	nop    
    8c00:	c6 44 06 38 00       	movb   $0x0,0x38(%esi,%eax,1)
    8c05:	40                   	inc    %eax
    8c06:	0f b7 c0             	movzwl %ax,%eax
    8c09:	66 39 c2             	cmp    %ax,%dx
    8c0c:	77 f2                	ja     8c00 <WritePhyBlockMS+0x3f0>
    8c0e:	0f b7 46 58          	movzwl 0x58(%esi),%eax
    8c12:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    8c16:	66 0f b6 56 08       	movzbw 0x8(%esi),%dx
    8c1b:	01 c8                	add    %ecx,%eax
    8c1d:	66 89 46 5a          	mov    %ax,0x5a(%esi)
    8c21:	66 39 c2             	cmp    %ax,%dx
    8c24:	73 04                	jae    8c2a <WritePhyBlockMS+0x41a>
    8c26:	66 89 56 5a          	mov    %dx,0x5a(%esi)
    8c2a:	80 7c 24 1a 45       	cmpb   $0x45,0x1a(%esp)
    8c2f:	74 07                	je     8c38 <WritePhyBlockMS+0x428>
    8c31:	80 7c 24 1a 00       	cmpb   $0x0,0x1a(%esp)
    8c36:	75 0f                	jne    8c47 <WritePhyBlockMS+0x437>
    8c38:	c6 44 24 1a 00       	movb   $0x0,0x1a(%esp)
    8c3d:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    8c43:	c6 40 0d 02          	movb   $0x2,0xd(%eax)
    8c47:	8b 8e 64 44 00 00    	mov    0x4464(%esi),%ecx
    8c4d:	e9 1e fd ff ff       	jmp    8970 <WritePhyBlockMS+0x160>
    8c52:	89 34 24             	mov    %esi,(%esp)
    8c55:	0f b6 c2             	movzbl %dl,%eax
    8c58:	89 44 24 08          	mov    %eax,0x8(%esp)
    8c5c:	8d 46 30             	lea    0x30(%esi),%eax
    8c5f:	89 44 24 04          	mov    %eax,0x4(%esp)
    8c63:	e8 a8 f5 ff ff       	call   8210 <GetEmptyPhyBlockMS>
    8c68:	88 44 24 1a          	mov    %al,0x1a(%esp)
    8c6c:	e9 66 fc ff ff       	jmp    88d7 <WritePhyBlockMS+0xc7>
    8c71:	66 89 5e 30          	mov    %bx,0x30(%esi)
    8c75:	e9 d3 fc ff ff       	jmp    894d <WritePhyBlockMS+0x13d>
    8c7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008c80 <CloseWriteMS>:
    8c80:	83 ec 20             	sub    $0x20,%esp
    8c83:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
    8c87:	8b 5c 24 24          	mov    0x24(%esp),%ebx
    8c8b:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    8c91:	80 78 0d 03          	cmpb   $0x3,0xd(%eax)
    8c95:	74 11                	je     8ca8 <CloseWriteMS+0x28>
    8c97:	8b 40 3c             	mov    0x3c(%eax),%eax
    8c9a:	c6 40 08 00          	movb   $0x0,0x8(%eax)
    8c9e:	31 c0                	xor    %eax,%eax
    8ca0:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
    8ca4:	83 c4 20             	add    $0x20,%esp
    8ca7:	c3                   	ret    
    8ca8:	8b 40 3c             	mov    0x3c(%eax),%eax
    8cab:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    8caf:	8b 83 64 44 00 00    	mov    0x4464(%ebx),%eax
    8cb5:	c6 40 0d 04          	movb   $0x4,0xd(%eax)
    8cb9:	31 c0                	xor    %eax,%eax
    8cbb:	89 44 24 14          	mov    %eax,0x14(%esp)
    8cbf:	31 c0                	xor    %eax,%eax
    8cc1:	89 44 24 10          	mov    %eax,0x10(%esp)
    8cc5:	31 c0                	xor    %eax,%eax
    8cc7:	89 44 24 0c          	mov    %eax,0xc(%esp)
    8ccb:	8d 44 24 1a          	lea    0x1a(%esp),%eax
    8ccf:	89 44 24 08          	mov    %eax,0x8(%esp)
    8cd3:	31 c0                	xor    %eax,%eax
    8cd5:	89 44 24 04          	mov    %eax,0x4(%esp)
    8cd9:	89 1c 24             	mov    %ebx,(%esp)
    8cdc:	e8 2f fb ff ff       	call   8810 <WritePhyBlockMS>
    8ce1:	8b 93 64 44 00 00    	mov    0x4464(%ebx),%edx
    8ce7:	0f b6 c0             	movzbl %al,%eax
    8cea:	8b 52 3c             	mov    0x3c(%edx),%edx
    8ced:	c6 42 08 00          	movb   $0x0,0x8(%edx)
    8cf1:	eb ad                	jmp    8ca0 <CloseWriteMS+0x20>
    8cf3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8cf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00008d00 <CloseWriteMSPro>:
    8d00:	83 ec 1c             	sub    $0x1c,%esp
    8d03:	31 d2                	xor    %edx,%edx
    8d05:	89 74 24 18          	mov    %esi,0x18(%esp)
    8d09:	8b 74 24 20          	mov    0x20(%esp),%esi
    8d0d:	89 5c 24 14          	mov    %ebx,0x14(%esp)
    8d11:	8b 46 04             	mov    0x4(%esi),%eax
    8d14:	80 78 0d 03          	cmpb   $0x3,0xd(%eax)
    8d18:	74 16                	je     8d30 <CloseWriteMSPro+0x30>
    8d1a:	8b 40 3c             	mov    0x3c(%eax),%eax
    8d1d:	c6 40 08 00          	movb   $0x0,0x8(%eax)
    8d21:	0f b6 c2             	movzbl %dl,%eax
    8d24:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    8d28:	8b 74 24 18          	mov    0x18(%esp),%esi
    8d2c:	83 c4 1c             	add    $0x1c,%esp
    8d2f:	c3                   	ret    
    8d30:	8b 40 3c             	mov    0x3c(%eax),%eax
    8d33:	c6 40 08 01          	movb   $0x1,0x8(%eax)
    8d37:	8b 46 04             	mov    0x4(%esi),%eax
    8d3a:	89 04 24             	mov    %eax,(%esp)
    8d3d:	e8 be d4 ff ff       	call   6200 <WaitForMSINT>
    8d42:	84 c0                	test   %al,%al
    8d44:	88 c2                	mov    %al,%dl
    8d46:	74 05                	je     8d4d <CloseWriteMSPro+0x4d>
    8d48:	8b 46 04             	mov    0x4(%esi),%eax
    8d4b:	eb cd                	jmp    8d1a <CloseWriteMSPro+0x1a>
    8d4d:	31 c0                	xor    %eax,%eax
    8d4f:	b9 25 00 00 00       	mov    $0x25,%ecx
    8d54:	bb 01 00 00 00       	mov    $0x1,%ebx
    8d59:	89 44 24 10          	mov    %eax,0x10(%esp)
    8d5d:	31 c0                	xor    %eax,%eax
    8d5f:	89 44 24 0c          	mov    %eax,0xc(%esp)
    8d63:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    8d67:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    8d6b:	8b 46 04             	mov    0x4(%esi),%eax
    8d6e:	89 04 24             	mov    %eax,(%esp)
    8d71:	e8 4a db ff ff       	call   68c0 <CmdMemoryStick>
    8d76:	84 c0                	test   %al,%al
    8d78:	88 c2                	mov    %al,%dl
    8d7a:	75 09                	jne    8d85 <CloseWriteMSPro+0x85>
    8d7c:	8b 46 04             	mov    0x4(%esi),%eax
    8d7f:	c6 40 0d 00          	movb   $0x0,0xd(%eax)
    8d83:	eb c3                	jmp    8d48 <CloseWriteMSPro+0x48>
    8d85:	c7 04 24 20 14 00 00 	movl   $0x1420,(%esp)
			8d88: R_386_32	.rodata.str1.32
    8d8c:	0f b6 d8             	movzbl %al,%ebx
    8d8f:	ba b2 06 00 00       	mov    $0x6b2,%edx
			8d90: R_386_32	.rodata
    8d94:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    8d98:	89 54 24 04          	mov    %edx,0x4(%esp)
    8d9c:	e8 fc ff ff ff       	call   8d9d <CloseWriteMSPro+0x9d>
			8d9d: R_386_PC32	printk
    8da1:	8b 46 04             	mov    0x4(%esi),%eax
    8da4:	8b 40 3c             	mov    0x3c(%eax),%eax
    8da7:	c6 40 08 00          	movb   $0x0,0x8(%eax)
    8dab:	89 d8                	mov    %ebx,%eax
    8dad:	e9 72 ff ff ff       	jmp    8d24 <CloseWriteMSPro+0x24>
    8db2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    8db9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00008dc0 <WriteSectorMS>:
    8dc0:	55                   	push   %ebp
    8dc1:	57                   	push   %edi
    8dc2:	56                   	push   %esi
    8dc3:	53                   	push   %ebx
    8dc4:	83 ec 28             	sub    $0x28,%esp
    8dc7:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
    8dcb:	0f b7 44 24 44       	movzwl 0x44(%esp),%eax
    8dd0:	8b 5c 24 40          	mov    0x40(%esp),%ebx
    8dd4:	0f b6 54 24 48       	movzbl 0x48(%esp),%edx
    8dd9:	89 44 24 20          	mov    %eax,0x20(%esp)
    8ddd:	88 54 24 1f          	mov    %dl,0x1f(%esp)
    8de1:	0f b6 4f 08          	movzbl 0x8(%edi),%ecx
    8de5:	80 f9 10             	cmp    $0x10,%cl
    8de8:	0f 84 b2 01 00 00    	je     8fa0 <WriteSectorMS+0x1e0>
    8dee:	80 f9 20             	cmp    $0x20,%cl
    8df1:	0f 84 9f 01 00 00    	je     8f96 <WriteSectorMS+0x1d6>
    8df7:	0f b6 d1             	movzbl %cl,%edx
    8dfa:	89 d8                	mov    %ebx,%eax
    8dfc:	89 d5                	mov    %edx,%ebp
    8dfe:	31 d2                	xor    %edx,%edx
    8e00:	f7 f5                	div    %ebp
    8e02:	0f b7 f0             	movzwl %ax,%esi
    8e05:	0f b6 d1             	movzbl %cl,%edx
    8e08:	0f b6 c3             	movzbl %bl,%eax
    8e0b:	89 d1                	mov    %edx,%ecx
    8e0d:	31 d2                	xor    %edx,%edx
    8e0f:	f7 f1                	div    %ecx
    8e11:	66 39 77 04          	cmp    %si,0x4(%edi)
    8e15:	88 d3                	mov    %dl,%bl
    8e17:	0f 86 6f 01 00 00    	jbe    8f8c <WriteSectorMS+0x1cc>
    8e1d:	89 74 24 04          	mov    %esi,0x4(%esp)
    8e21:	89 3c 24             	mov    %edi,(%esp)
    8e24:	e8 97 cf ff ff       	call   5dc0 <LUTGetPhyBlockMS>
    8e29:	66 89 44 24 26       	mov    %ax,0x26(%esp)
    8e2e:	0f b7 e8             	movzwl %ax,%ebp
    8e31:	89 6c 24 18          	mov    %ebp,0x18(%esp)
    8e35:	80 7f 60 00          	cmpb   $0x0,0x60(%edi)
    8e39:	75 08                	jne    8e43 <WriteSectorMS+0x83>
    8e3b:	66 40                	inc    %ax
    8e3d:	0f 84 1d 01 00 00    	je     8f60 <WriteSectorMS+0x1a0>
    8e43:	0f b6 6c 24 1f       	movzbl 0x1f(%esp),%ebp
    8e48:	8d 54 24 26          	lea    0x26(%esp),%edx
    8e4c:	89 74 24 04          	mov    %esi,0x4(%esp)
    8e50:	8b 44 24 20          	mov    0x20(%esp),%eax
    8e54:	0f b6 db             	movzbl %bl,%ebx
    8e57:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    8e5b:	89 54 24 08          	mov    %edx,0x8(%esp)
    8e5f:	89 6c 24 14          	mov    %ebp,0x14(%esp)
    8e63:	89 44 24 10          	mov    %eax,0x10(%esp)
    8e67:	89 3c 24             	mov    %edi,(%esp)
    8e6a:	e8 a1 f9 ff ff       	call   8810 <WritePhyBlockMS>
    8e6f:	3c 52                	cmp    $0x52,%al
    8e71:	0f 84 a9 00 00 00    	je     8f20 <WriteSectorMS+0x160>
    8e77:	84 c0                	test   %al,%al
    8e79:	75 29                	jne    8ea4 <WriteSectorMS+0xe4>
    8e7b:	0f b7 44 24 26       	movzwl 0x26(%esp),%eax
    8e80:	66 3b 44 24 18       	cmp    0x18(%esp),%ax
    8e85:	74 13                	je     8e9a <WriteSectorMS+0xda>
    8e87:	89 74 24 04          	mov    %esi,0x4(%esp)
    8e8b:	0f b7 c0             	movzwl %ax,%eax
    8e8e:	89 44 24 08          	mov    %eax,0x8(%esp)
    8e92:	89 3c 24             	mov    %edi,(%esp)
    8e95:	e8 06 cf ff ff       	call   5da0 <LUTSetPhyBlockMS>
    8e9a:	31 c0                	xor    %eax,%eax
    8e9c:	83 c4 28             	add    $0x28,%esp
    8e9f:	5b                   	pop    %ebx
    8ea0:	5e                   	pop    %esi
    8ea1:	5f                   	pop    %edi
    8ea2:	5d                   	pop    %ebp
    8ea3:	c3                   	ret    
    8ea4:	3c 81                	cmp    $0x81,%al
    8ea6:	74 05                	je     8ead <WriteSectorMS+0xed>
    8ea8:	0f b6 c0             	movzbl %al,%eax
    8eab:	eb ef                	jmp    8e9c <WriteSectorMS+0xdc>
    8ead:	c7 04 24 60 14 00 00 	movl   $0x1460,(%esp)
			8eb0: R_386_32	.rodata.str1.32
    8eb4:	b9 c2 06 00 00       	mov    $0x6c2,%ecx
			8eb5: R_386_32	.rodata
    8eb9:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    8ebd:	e8 fc ff ff ff       	call   8ebe <WriteSectorMS+0xfe>
			8ebe: R_386_PC32	printk
    8ec2:	b8 01 00 00 00       	mov    $0x1,%eax
    8ec7:	ba 01 00 00 00       	mov    $0x1,%edx
    8ecc:	89 44 24 0c          	mov    %eax,0xc(%esp)
    8ed0:	31 c0                	xor    %eax,%eax
    8ed2:	89 44 24 08          	mov    %eax,0x8(%esp)
    8ed6:	b8 3c 00 00 00       	mov    $0x3c,%eax
    8edb:	89 54 24 10          	mov    %edx,0x10(%esp)
    8edf:	89 44 24 04          	mov    %eax,0x4(%esp)
    8ee3:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    8ee9:	89 04 24             	mov    %eax,(%esp)
    8eec:	e8 cf d9 ff ff       	call   68c0 <CmdMemoryStick>
    8ef1:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    8ef7:	c7 40 30 10 40 00 00 	movl   $0x4010,0x30(%eax)
    8efe:	b8 00 1f 00 1f       	mov    $0x1f001f00,%eax
    8f03:	89 44 24 04          	mov    %eax,0x4(%esp)
    8f07:	8b 87 64 44 00 00    	mov    0x4464(%edi),%eax
    8f0d:	89 04 24             	mov    %eax,(%esp)
    8f10:	e8 4b d7 ff ff       	call   6660 <SetRWRegAddrsMemoryStick>
    8f15:	b8 81 00 00 00       	mov    $0x81,%eax
    8f1a:	eb 80                	jmp    8e9c <WriteSectorMS+0xdc>
    8f1c:	8d 74 26 00          	lea    0x0(%esi),%esi
    8f20:	89 3c 24             	mov    %edi,(%esp)
    8f23:	e8 fc ff ff ff       	call   8f24 <WriteSectorMS+0x164>
			8f24: R_386_PC32	CloseWriteMS
    8f28:	84 c0                	test   %al,%al
    8f2a:	0f 85 74 ff ff ff    	jne    8ea4 <WriteSectorMS+0xe4>
    8f30:	89 6c 24 14          	mov    %ebp,0x14(%esp)
    8f34:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    8f38:	8d 6c 24 26          	lea    0x26(%esp),%ebp
    8f3c:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    8f40:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8f44:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    8f48:	89 74 24 04          	mov    %esi,0x4(%esp)
    8f4c:	89 3c 24             	mov    %edi,(%esp)
    8f4f:	e8 bc f8 ff ff       	call   8810 <WritePhyBlockMS>
    8f54:	e9 1e ff ff ff       	jmp    8e77 <WriteSectorMS+0xb7>
    8f59:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    8f60:	89 3c 24             	mov    %edi,(%esp)
    8f63:	e8 e8 e0 ff ff       	call   7050 <MakeLUTMS>
    8f68:	89 74 24 04          	mov    %esi,0x4(%esp)
    8f6c:	89 3c 24             	mov    %edi,(%esp)
    8f6f:	e8 4c ce ff ff       	call   5dc0 <LUTGetPhyBlockMS>
    8f74:	66 89 44 24 26       	mov    %ax,0x26(%esp)
    8f79:	80 7f 60 00          	cmpb   $0x0,0x60(%edi)
    8f7d:	0f 85 c0 fe ff ff    	jne    8e43 <WriteSectorMS+0x83>
    8f83:	66 40                	inc    %ax
    8f85:	74 d9                	je     8f60 <WriteSectorMS+0x1a0>
    8f87:	e9 b7 fe ff ff       	jmp    8e43 <WriteSectorMS+0x83>
    8f8c:	b8 82 00 00 00       	mov    $0x82,%eax
    8f91:	e9 06 ff ff ff       	jmp    8e9c <WriteSectorMS+0xdc>
    8f96:	89 d8                	mov    %ebx,%eax
    8f98:	c1 e8 05             	shr    $0x5,%eax
    8f9b:	e9 62 fe ff ff       	jmp    8e02 <WriteSectorMS+0x42>
    8fa0:	89 d8                	mov    %ebx,%eax
    8fa2:	c1 e8 04             	shr    $0x4,%eax
    8fa5:	e9 58 fe ff ff       	jmp    8e02 <WriteSectorMS+0x42>
    8faa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00008fb0 <ReadSectorMS>:
    8fb0:	55                   	push   %ebp
    8fb1:	57                   	push   %edi
    8fb2:	56                   	push   %esi
    8fb3:	53                   	push   %ebx
    8fb4:	83 ec 1c             	sub    $0x1c,%esp
    8fb7:	8b 74 24 30          	mov    0x30(%esp),%esi
    8fbb:	0f b7 44 24 38       	movzwl 0x38(%esp),%eax
    8fc0:	8b 4c 24 34          	mov    0x34(%esp),%ecx
    8fc4:	89 44 24 18          	mov    %eax,0x18(%esp)
    8fc8:	0f b6 44 24 3c       	movzbl 0x3c(%esp),%eax
    8fcd:	88 44 24 17          	mov    %al,0x17(%esp)
    8fd1:	0f b6 5e 08          	movzbl 0x8(%esi),%ebx
    8fd5:	80 fb 10             	cmp    $0x10,%bl
    8fd8:	0f 84 f2 01 00 00    	je     91d0 <ReadSectorMS+0x220>
    8fde:	80 fb 20             	cmp    $0x20,%bl
    8fe1:	0f 84 df 01 00 00    	je     91c6 <ReadSectorMS+0x216>
    8fe7:	0f b6 d3             	movzbl %bl,%edx
    8fea:	89 c8                	mov    %ecx,%eax
    8fec:	89 d5                	mov    %edx,%ebp
    8fee:	31 d2                	xor    %edx,%edx
    8ff0:	f7 f5                	div    %ebp
    8ff2:	0f b7 e8             	movzwl %ax,%ebp
    8ff5:	0f b6 d3             	movzbl %bl,%edx
    8ff8:	0f b6 c1             	movzbl %cl,%eax
    8ffb:	89 d1                	mov    %edx,%ecx
    8ffd:	31 d2                	xor    %edx,%edx
    8fff:	f7 f1                	div    %ecx
    9001:	88 54 24 15          	mov    %dl,0x15(%esp)
    9005:	66 39 6e 04          	cmp    %bp,0x4(%esi)
    9009:	0f 86 ad 01 00 00    	jbe    91bc <ReadSectorMS+0x20c>
    900f:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    9013:	89 34 24             	mov    %esi,(%esp)
    9016:	e8 a5 cd ff ff       	call   5dc0 <LUTGetPhyBlockMS>
    901b:	80 7c 24 17 00       	cmpb   $0x0,0x17(%esp)
    9020:	0f b7 f8             	movzwl %ax,%edi
    9023:	74 0c                	je     9031 <ReadSectorMS+0x81>
    9025:	80 7c 24 15 00       	cmpb   $0x0,0x15(%esp)
    902a:	c6 44 24 16 04       	movb   $0x4,0x16(%esp)
    902f:	75 05                	jne    9036 <ReadSectorMS+0x86>
    9031:	c6 44 24 16 01       	movb   $0x1,0x16(%esp)
    9036:	0f b6 54 24 15       	movzbl 0x15(%esp),%edx
    903b:	0f b6 c3             	movzbl %bl,%eax
    903e:	48                   	dec    %eax
    903f:	39 c2                	cmp    %eax,%edx
    9041:	0f 84 6b 01 00 00    	je     91b2 <ReadSectorMS+0x202>
    9047:	80 7c 24 18 01       	cmpb   $0x1,0x18(%esp)
    904c:	0f 84 60 01 00 00    	je     91b2 <ReadSectorMS+0x202>
    9052:	80 7c 24 17 00       	cmpb   $0x0,0x17(%esp)
    9057:	75 0b                	jne    9064 <ReadSectorMS+0xb4>
    9059:	80 7c 24 18 01       	cmpb   $0x1,0x18(%esp)
    905e:	0f 84 44 01 00 00    	je     91a8 <ReadSectorMS+0x1f8>
    9064:	80 7e 60 00          	cmpb   $0x0,0x60(%esi)
    9068:	75 11                	jne    907b <ReadSectorMS+0xcb>
    906a:	c6 44 24 16 20       	movb   $0x20,0x16(%esp)
    906f:	31 db                	xor    %ebx,%ebx
    9071:	66 83 ff ff          	cmp    $0xffffffff,%di
    9075:	0f 84 d5 00 00 00    	je     9150 <ReadSectorMS+0x1a0>
    907b:	0f b6 44 24 16       	movzbl 0x16(%esp),%eax
    9080:	b9 01 00 00 00       	mov    $0x1,%ecx
    9085:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    9089:	89 7c 24 04          	mov    %edi,0x4(%esp)
    908d:	89 34 24             	mov    %esi,(%esp)
    9090:	89 44 24 0c          	mov    %eax,0xc(%esp)
    9094:	0f b6 44 24 15       	movzbl 0x15(%esp),%eax
    9099:	89 44 24 08          	mov    %eax,0x8(%esp)
    909d:	e8 ee da ff ff       	call   6b90 <ReadPageMS>
    90a2:	88 c3                	mov    %al,%bl
    90a4:	31 c0                	xor    %eax,%eax
    90a6:	84 db                	test   %bl,%bl
    90a8:	75 08                	jne    90b2 <ReadSectorMS+0x102>
    90aa:	83 c4 1c             	add    $0x1c,%esp
    90ad:	5b                   	pop    %ebx
    90ae:	5e                   	pop    %esi
    90af:	5f                   	pop    %edi
    90b0:	5d                   	pop    %ebp
    90b1:	c3                   	ret    
    90b2:	b8 01 00 00 00       	mov    $0x1,%eax
    90b7:	89 44 24 10          	mov    %eax,0x10(%esp)
    90bb:	b8 01 00 00 00       	mov    $0x1,%eax
    90c0:	89 44 24 0c          	mov    %eax,0xc(%esp)
    90c4:	31 c0                	xor    %eax,%eax
    90c6:	89 44 24 08          	mov    %eax,0x8(%esp)
    90ca:	b8 3c 00 00 00       	mov    $0x3c,%eax
    90cf:	89 44 24 04          	mov    %eax,0x4(%esp)
    90d3:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    90d9:	89 04 24             	mov    %eax,(%esp)
    90dc:	e8 df d7 ff ff       	call   68c0 <CmdMemoryStick>
    90e1:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    90e7:	c7 40 30 10 40 00 00 	movl   $0x4010,0x30(%eax)
    90ee:	b8 00 1f 00 1f       	mov    $0x1f001f00,%eax
    90f3:	89 44 24 04          	mov    %eax,0x4(%esp)
    90f7:	8b 86 64 44 00 00    	mov    0x4464(%esi),%eax
    90fd:	89 04 24             	mov    %eax,(%esp)
    9100:	e8 5b d5 ff ff       	call   6660 <SetRWRegAddrsMemoryStick>
    9105:	80 fb 43             	cmp    $0x43,%bl
    9108:	74 0a                	je     9114 <ReadSectorMS+0x164>
    910a:	80 fb 40             	cmp    $0x40,%bl
    910d:	74 05                	je     9114 <ReadSectorMS+0x164>
    910f:	0f b6 c3             	movzbl %bl,%eax
    9112:	eb 96                	jmp    90aa <ReadSectorMS+0xfa>
    9114:	89 7c 24 08          	mov    %edi,0x8(%esp)
    9118:	b8 d0 06 00 00       	mov    $0x6d0,%eax
			9119: R_386_32	.rodata
    911d:	89 44 24 04          	mov    %eax,0x4(%esp)
    9121:	c7 04 24 a0 14 00 00 	movl   $0x14a0,(%esp)
			9124: R_386_32	.rodata.str1.32
    9128:	e8 fc ff ff ff       	call   9129 <ReadSectorMS+0x179>
			9129: R_386_PC32	printk
    912d:	89 7c 24 04          	mov    %edi,0x4(%esp)
    9131:	89 34 24             	mov    %esi,(%esp)
    9134:	e8 37 f1 ff ff       	call   8270 <CheckFFPhyBlockMS>
    9139:	0f b7 46 2e          	movzwl 0x2e(%esi),%eax
    913d:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    9141:	89 34 24             	mov    %esi,(%esp)
    9144:	89 44 24 08          	mov    %eax,0x8(%esp)
    9148:	e8 53 cc ff ff       	call   5da0 <LUTSetPhyBlockMS>
    914d:	eb c0                	jmp    910f <ReadSectorMS+0x15f>
    914f:	90                   	nop    
    9150:	89 34 24             	mov    %esi,(%esp)
    9153:	43                   	inc    %ebx
    9154:	e8 f7 de ff ff       	call   7050 <MakeLUTMS>
    9159:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    915d:	89 34 24             	mov    %esi,(%esp)
    9160:	e8 5b cc ff ff       	call   5dc0 <LUTGetPhyBlockMS>
    9165:	81 fb ff 07 00 00    	cmp    $0x7ff,%ebx
    916b:	0f b7 f8             	movzwl %ax,%edi
    916e:	77 15                	ja     9185 <ReadSectorMS+0x1d5>
    9170:	80 7e 60 00          	cmpb   $0x0,0x60(%esi)
    9174:	0f 85 01 ff ff ff    	jne    907b <ReadSectorMS+0xcb>
    917a:	66 83 ff ff          	cmp    $0xffffffff,%di
    917e:	74 d0                	je     9150 <ReadSectorMS+0x1a0>
    9180:	e9 f6 fe ff ff       	jmp    907b <ReadSectorMS+0xcb>
    9185:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    9189:	ba d0 06 00 00       	mov    $0x6d0,%edx
			918a: R_386_32	.rodata
    918e:	89 54 24 04          	mov    %edx,0x4(%esp)
    9192:	c7 04 24 e0 14 00 00 	movl   $0x14e0,(%esp)
			9195: R_386_32	.rodata.str1.32
    9199:	e8 fc ff ff ff       	call   919a <ReadSectorMS+0x1ea>
			919a: R_386_PC32	printk
    919e:	b8 4a 00 00 00       	mov    $0x4a,%eax
    91a3:	e9 02 ff ff ff       	jmp    90aa <ReadSectorMS+0xfa>
    91a8:	c6 44 24 16 20       	movb   $0x20,0x16(%esp)
    91ad:	e9 b2 fe ff ff       	jmp    9064 <ReadSectorMS+0xb4>
    91b2:	80 4c 24 16 08       	orb    $0x8,0x16(%esp)
    91b7:	e9 96 fe ff ff       	jmp    9052 <ReadSectorMS+0xa2>
    91bc:	b8 82 00 00 00       	mov    $0x82,%eax
    91c1:	e9 e4 fe ff ff       	jmp    90aa <ReadSectorMS+0xfa>
    91c6:	89 c8                	mov    %ecx,%eax
    91c8:	c1 e8 05             	shr    $0x5,%eax
    91cb:	e9 22 fe ff ff       	jmp    8ff2 <ReadSectorMS+0x42>
    91d0:	89 c8                	mov    %ecx,%eax
    91d2:	c1 e8 04             	shr    $0x4,%eax
    91d5:	e9 18 fe ff ff       	jmp    8ff2 <ReadSectorMS+0x42>
    91da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000091e0 <WriteSectorMSPro>:
    91e0:	55                   	push   %ebp
    91e1:	57                   	push   %edi
    91e2:	56                   	push   %esi
    91e3:	53                   	push   %ebx
    91e4:	83 ec 10             	sub    $0x10,%esp
    91e7:	8b 74 24 24          	mov    0x24(%esp),%esi
    91eb:	0f b7 6c 24 2c       	movzwl 0x2c(%esp),%ebp
    91f0:	8b 7c 24 28          	mov    0x28(%esp),%edi
    91f4:	80 7c 24 30 00       	cmpb   $0x0,0x30(%esp)
    91f9:	0f 85 21 01 00 00    	jne    9320 <WriteSectorMSPro+0x140>
    91ff:	8b 56 04             	mov    0x4(%esi),%edx
    9202:	80 7a 0d 03          	cmpb   $0x3,0xd(%edx)
    9206:	0f 84 d4 00 00 00    	je     92e0 <WriteSectorMSPro+0x100>
    920c:	89 34 24             	mov    %esi,(%esp)
    920f:	e8 fc ff ff ff       	call   9210 <WriteSectorMSPro+0x30>
			9210: R_386_PC32	CloseWriteMSPro
    9214:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    9218:	31 c0                	xor    %eax,%eax
    921a:	89 44 24 08          	mov    %eax,0x8(%esp)
    921e:	b8 21 00 00 00       	mov    $0x21,%eax
    9223:	89 44 24 04          	mov    %eax,0x4(%esp)
    9227:	89 34 24             	mov    %esi,(%esp)
    922a:	e8 81 d7 ff ff       	call   69b0 <ExCmdMSPro2>
    922f:	84 c0                	test   %al,%al
    9231:	88 c3                	mov    %al,%bl
    9233:	74 0d                	je     9242 <WriteSectorMSPro+0x62>
    9235:	0f b6 cb             	movzbl %bl,%ecx
    9238:	83 c4 10             	add    $0x10,%esp
    923b:	89 c8                	mov    %ecx,%eax
    923d:	5b                   	pop    %ebx
    923e:	5e                   	pop    %esi
    923f:	5f                   	pop    %edi
    9240:	5d                   	pop    %ebp
    9241:	c3                   	ret    
    9242:	89 3e                	mov    %edi,(%esi)
    9244:	8b 56 04             	mov    0x4(%esi),%edx
    9247:	80 7a 0c 00          	cmpb   $0x0,0xc(%edx)
    924b:	74 47                	je     9294 <WriteSectorMSPro+0xb4>
    924d:	8b 02                	mov    (%edx),%eax
    924f:	b9 4e 00 00 00       	mov    $0x4e,%ecx
    9254:	a8 02                	test   $0x2,%al
    9256:	74 e0                	je     9238 <WriteSectorMSPro+0x58>
    9258:	8b 02                	mov    (%edx),%eax
    925a:	b9 51 00 00 00       	mov    $0x51,%ecx
    925f:	a8 04                	test   $0x4,%al
    9261:	75 d5                	jne    9238 <WriteSectorMSPro+0x58>
    9263:	89 14 24             	mov    %edx,(%esp)
    9266:	bb 0d 00 00 00       	mov    $0xd,%ebx
    926b:	bf 00 02 00 00       	mov    $0x200,%edi
    9270:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    9274:	89 7c 24 08          	mov    %edi,0x8(%esp)
    9278:	e8 43 d1 ff ff       	call   63c0 <TPCMemoryStick>
    927d:	84 c0                	test   %al,%al
    927f:	88 c3                	mov    %al,%bl
    9281:	75 b2                	jne    9235 <WriteSectorMSPro+0x55>
    9283:	66 4d                	dec    %bp
    9285:	74 04                	je     928b <WriteSectorMSPro+0xab>
    9287:	31 c9                	xor    %ecx,%ecx
    9289:	eb ad                	jmp    9238 <WriteSectorMSPro+0x58>
    928b:	8b 46 04             	mov    0x4(%esi),%eax
    928e:	c6 40 0d 03          	movb   $0x3,0xd(%eax)
    9292:	eb f3                	jmp    9287 <WriteSectorMSPro+0xa7>
    9294:	89 14 24             	mov    %edx,(%esp)
    9297:	e8 94 d2 ff ff       	call   6530 <GetIntMSPro>
    929c:	84 c0                	test   %al,%al
    929e:	88 c3                	mov    %al,%bl
    92a0:	75 10                	jne    92b2 <WriteSectorMSPro+0xd2>
    92a2:	8b 56 04             	mov    0x4(%esi),%edx
    92a5:	f6 42 10 20          	testb  $0x20,0x10(%edx)
    92a9:	75 ad                	jne    9258 <WriteSectorMSPro+0x78>
    92ab:	b9 4e 00 00 00       	mov    $0x4e,%ecx
    92b0:	eb 86                	jmp    9238 <WriteSectorMSPro+0x58>
    92b2:	c7 04 24 40 15 00 00 	movl   $0x1540,(%esp)
			92b5: R_386_32	.rodata.str1.32
    92b9:	bd dd 06 00 00       	mov    $0x6dd,%ebp
			92ba: R_386_32	.rodata
    92be:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    92c2:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
    92c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi
    92d0:	e8 fc ff ff ff       	call   92d1 <WriteSectorMSPro+0xf1>
			92d1: R_386_PC32	printk
    92d5:	e9 5b ff ff ff       	jmp    9235 <WriteSectorMSPro+0x55>
    92da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    92e0:	8b 06                	mov    (%esi),%eax
    92e2:	40                   	inc    %eax
    92e3:	39 c7                	cmp    %eax,%edi
    92e5:	0f 85 21 ff ff ff    	jne    920c <WriteSectorMSPro+0x2c>
    92eb:	89 14 24             	mov    %edx,(%esp)
    92ee:	e8 0d cf ff ff       	call   6200 <WaitForMSINT>
    92f3:	84 c0                	test   %al,%al
    92f5:	88 c3                	mov    %al,%bl
    92f7:	0f 84 45 ff ff ff    	je     9242 <WriteSectorMSPro+0x62>
    92fd:	c7 04 24 80 15 00 00 	movl   $0x1580,(%esp)
			9300: R_386_32	.rodata.str1.32
    9304:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    930a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi
    9310:	b8 dd 06 00 00       	mov    $0x6dd,%eax
			9311: R_386_32	.rodata
    9315:	89 44 24 04          	mov    %eax,0x4(%esp)
    9319:	eb b5                	jmp    92d0 <WriteSectorMSPro+0xf0>
    931b:	90                   	nop    
    931c:	8d 74 26 00          	lea    0x0(%esi),%esi
    9320:	8b 46 04             	mov    0x4(%esi),%eax
    9323:	89 04 24             	mov    %eax,(%esp)
    9326:	e8 d5 ce ff ff       	call   6200 <WaitForMSINT>
    932b:	84 c0                	test   %al,%al
    932d:	88 c3                	mov    %al,%bl
    932f:	0f 84 0d ff ff ff    	je     9242 <WriteSectorMSPro+0x62>
    9335:	c7 04 24 c0 15 00 00 	movl   $0x15c0,(%esp)
			9338: R_386_32	.rodata.str1.32
    933c:	eb d2                	jmp    9310 <WriteSectorMSPro+0x130>
    933e:	89 f6                	mov    %esi,%esi

00009340 <ReadSectorMSPro>:
    9340:	83 ec 18             	sub    $0x18,%esp
    9343:	0f b7 54 24 24       	movzwl 0x24(%esp),%edx
    9348:	89 74 24 14          	mov    %esi,0x14(%esp)
    934c:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    9350:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    9354:	80 7c 24 28 00       	cmpb   $0x0,0x28(%esp)
    9359:	0f 85 e9 00 00 00    	jne    9448 <ReadSectorMSPro+0x108>
    935f:	89 54 24 08          	mov    %edx,0x8(%esp)
    9363:	8b 44 24 20          	mov    0x20(%esp),%eax
    9367:	89 34 24             	mov    %esi,(%esp)
    936a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    936e:	b8 20 00 00 00       	mov    $0x20,%eax
    9373:	89 44 24 04          	mov    %eax,0x4(%esp)
    9377:	e8 34 d6 ff ff       	call   69b0 <ExCmdMSPro2>
    937c:	84 c0                	test   %al,%al
    937e:	88 c3                	mov    %al,%bl
    9380:	74 11                	je     9393 <ReadSectorMSPro+0x53>
    9382:	0f b6 cb             	movzbl %bl,%ecx
    9385:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    9389:	89 c8                	mov    %ecx,%eax
    938b:	8b 74 24 14          	mov    0x14(%esp),%esi
    938f:	83 c4 18             	add    $0x18,%esp
    9392:	c3                   	ret    
    9393:	8b 56 04             	mov    0x4(%esi),%edx
    9396:	80 7a 0c 00          	cmpb   $0x0,0xc(%edx)
    939a:	74 66                	je     9402 <ReadSectorMSPro+0xc2>
    939c:	8b 02                	mov    (%edx),%eax
    939e:	a8 02                	test   $0x2,%al
    93a0:	74 44                	je     93e6 <ReadSectorMSPro+0xa6>
    93a2:	8b 02                	mov    (%edx),%eax
    93a4:	b9 51 00 00 00       	mov    $0x51,%ecx
    93a9:	a8 04                	test   $0x4,%al
    93ab:	75 d8                	jne    9385 <ReadSectorMSPro+0x45>
    93ad:	89 14 24             	mov    %edx,(%esp)
    93b0:	b9 00 02 00 00       	mov    $0x200,%ecx
    93b5:	b8 02 00 00 00       	mov    $0x2,%eax
    93ba:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    93be:	89 44 24 04          	mov    %eax,0x4(%esp)
    93c2:	e8 f9 cf ff ff       	call   63c0 <TPCMemoryStick>
    93c7:	31 c9                	xor    %ecx,%ecx
    93c9:	88 c3                	mov    %al,%bl
    93cb:	84 c0                	test   %al,%al
    93cd:	74 b6                	je     9385 <ReadSectorMSPro+0x45>
    93cf:	c7 04 24 00 16 00 00 	movl   $0x1600,(%esp)
			93d2: R_386_32	.rodata.str1.32
    93d6:	b8 ee 06 00 00       	mov    $0x6ee,%eax
			93d7: R_386_32	.rodata
    93db:	89 44 24 04          	mov    %eax,0x4(%esp)
    93df:	e8 fc ff ff ff       	call   93e0 <ReadSectorMSPro+0xa0>
			93e0: R_386_PC32	printk
    93e4:	eb 9c                	jmp    9382 <ReadSectorMSPro+0x42>
    93e6:	c7 04 24 40 16 00 00 	movl   $0x1640,(%esp)
			93e9: R_386_32	.rodata.str1.32
    93ed:	b8 ee 06 00 00       	mov    $0x6ee,%eax
			93ee: R_386_32	.rodata
    93f2:	89 44 24 04          	mov    %eax,0x4(%esp)
    93f6:	e8 fc ff ff ff       	call   93f7 <ReadSectorMSPro+0xb7>
			93f7: R_386_PC32	printk
    93fb:	b9 4e 00 00 00       	mov    $0x4e,%ecx
    9400:	eb 83                	jmp    9385 <ReadSectorMSPro+0x45>
    9402:	89 14 24             	mov    %edx,(%esp)
    9405:	e8 26 d1 ff ff       	call   6530 <GetIntMSPro>
    940a:	84 c0                	test   %al,%al
    940c:	88 c3                	mov    %al,%bl
    940e:	75 26                	jne    9436 <ReadSectorMSPro+0xf6>
    9410:	8b 56 04             	mov    0x4(%esi),%edx
    9413:	0f b6 42 10          	movzbl 0x10(%edx),%eax
    9417:	a8 20                	test   $0x20,%al
    9419:	75 87                	jne    93a2 <ReadSectorMSPro+0x62>
    941b:	89 44 24 08          	mov    %eax,0x8(%esp)
    941f:	bb ee 06 00 00       	mov    $0x6ee,%ebx
			9420: R_386_32	.rodata
    9424:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    9428:	c7 04 24 80 16 00 00 	movl   $0x1680,(%esp)
			942b: R_386_32	.rodata.str1.32
    942f:	e8 fc ff ff ff       	call   9430 <ReadSectorMSPro+0xf0>
			9430: R_386_PC32	printk
    9434:	eb c5                	jmp    93fb <ReadSectorMSPro+0xbb>
    9436:	c7 04 24 40 15 00 00 	movl   $0x1540,(%esp)
			9439: R_386_32	.rodata.str1.32
    943d:	be ee 06 00 00       	mov    $0x6ee,%esi
			943e: R_386_32	.rodata
    9442:	89 74 24 04          	mov    %esi,0x4(%esp)
    9446:	eb 97                	jmp    93df <ReadSectorMSPro+0x9f>
    9448:	8b 46 04             	mov    0x4(%esi),%eax
    944b:	89 04 24             	mov    %eax,(%esp)
    944e:	e8 ad cd ff ff       	call   6200 <WaitForMSINT>
    9453:	84 c0                	test   %al,%al
    9455:	88 c3                	mov    %al,%bl
    9457:	0f 84 36 ff ff ff    	je     9393 <ReadSectorMSPro+0x53>
    945d:	8b 46 04             	mov    0x4(%esi),%eax
    9460:	8b 00                	mov    (%eax),%eax
    9462:	c7 04 24 c0 16 00 00 	movl   $0x16c0,(%esp)
			9465: R_386_32	.rodata.str1.32
    9469:	89 44 24 08          	mov    %eax,0x8(%esp)
    946d:	b8 ee 06 00 00       	mov    $0x6ee,%eax
			946e: R_386_32	.rodata
    9472:	89 44 24 04          	mov    %eax,0x4(%esp)
    9476:	e8 fc ff ff ff       	call   9477 <ReadSectorMSPro+0x137>
			9477: R_386_PC32	printk
    947b:	e9 02 ff ff ff       	jmp    9382 <ReadSectorMSPro+0x42>

00009480 <WriteSectorsMemoryStick>:
    9480:	83 ec 20             	sub    $0x20,%esp
    9483:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    9487:	89 5c 24 14          	mov    %ebx,0x14(%esp)
    948b:	8b 44 24 28          	mov    0x28(%esp),%eax
    948f:	31 db                	xor    %ebx,%ebx
    9491:	0f b6 54 24 34       	movzbl 0x34(%esp),%edx
    9496:	89 74 24 18          	mov    %esi,0x18(%esp)
    949a:	8b 74 24 2c          	mov    0x2c(%esp),%esi
    949e:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    94a2:	8b 7c 24 30          	mov    0x30(%esp),%edi
    94a6:	88 54 24 13          	mov    %dl,0x13(%esp)
    94aa:	0f b6 51 05          	movzbl 0x5(%ecx),%edx
    94ae:	80 fa 12             	cmp    $0x12,%dl
    94b1:	74 6d                	je     9520 <WriteSectorsMemoryStick+0xa0>
    94b3:	80 fa 22             	cmp    $0x22,%dl
    94b6:	74 20                	je     94d8 <WriteSectorsMemoryStick+0x58>
    94b8:	ff 43 38             	incl   0x38(%ebx)
    94bb:	31 c9                	xor    %ecx,%ecx
    94bd:	0f b7 06             	movzwl (%esi),%eax
    94c0:	48                   	dec    %eax
    94c1:	66 89 06             	mov    %ax,(%esi)
    94c4:	fe 0f                	decb   (%edi)
    94c6:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    94ca:	89 c8                	mov    %ecx,%eax
    94cc:	8b 74 24 18          	mov    0x18(%esp),%esi
    94d0:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    94d4:	83 c4 20             	add    $0x20,%esp
    94d7:	c3                   	ret    
    94d8:	8b 11                	mov    (%ecx),%edx
    94da:	b9 ff 00 00 00       	mov    $0xff,%ecx
    94df:	85 d2                	test   %edx,%edx
    94e1:	74 e3                	je     94c6 <WriteSectorsMemoryStick+0x46>
    94e3:	8b 5a 04             	mov    0x4(%edx),%ebx
    94e6:	85 db                	test   %ebx,%ebx
    94e8:	74 dc                	je     94c6 <WriteSectorsMemoryStick+0x46>
    94ea:	83 f8 ff             	cmp    $0xffffffff,%eax
    94ed:	74 03                	je     94f2 <WriteSectorsMemoryStick+0x72>
    94ef:	89 43 38             	mov    %eax,0x38(%ebx)
    94f2:	0f b6 44 24 13       	movzbl 0x13(%esp),%eax
    94f7:	89 44 24 0c          	mov    %eax,0xc(%esp)
    94fb:	0f b7 06             	movzwl (%esi),%eax
    94fe:	89 44 24 08          	mov    %eax,0x8(%esp)
    9502:	8b 43 38             	mov    0x38(%ebx),%eax
    9505:	89 14 24             	mov    %edx,(%esp)
    9508:	89 44 24 04          	mov    %eax,0x4(%esp)
    950c:	e8 cf fc ff ff       	call   91e0 <WriteSectorMSPro>
    9511:	84 c0                	test   %al,%al
    9513:	0f b6 c8             	movzbl %al,%ecx
    9516:	75 ae                	jne    94c6 <WriteSectorsMemoryStick+0x46>
    9518:	eb 9e                	jmp    94b8 <WriteSectorsMemoryStick+0x38>
    951a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9520:	8b 11                	mov    (%ecx),%edx
    9522:	b9 ff 00 00 00       	mov    $0xff,%ecx
    9527:	85 d2                	test   %edx,%edx
    9529:	74 9b                	je     94c6 <WriteSectorsMemoryStick+0x46>
    952b:	8b 9a 64 44 00 00    	mov    0x4464(%edx),%ebx
    9531:	85 db                	test   %ebx,%ebx
    9533:	74 91                	je     94c6 <WriteSectorsMemoryStick+0x46>
    9535:	83 f8 ff             	cmp    $0xffffffff,%eax
    9538:	74 03                	je     953d <WriteSectorsMemoryStick+0xbd>
    953a:	89 43 38             	mov    %eax,0x38(%ebx)
    953d:	0f b6 44 24 13       	movzbl 0x13(%esp),%eax
    9542:	89 44 24 0c          	mov    %eax,0xc(%esp)
    9546:	0f b7 06             	movzwl (%esi),%eax
    9549:	89 44 24 08          	mov    %eax,0x8(%esp)
    954d:	8b 43 38             	mov    0x38(%ebx),%eax
    9550:	89 14 24             	mov    %edx,(%esp)
    9553:	89 44 24 04          	mov    %eax,0x4(%esp)
    9557:	e8 64 f8 ff ff       	call   8dc0 <WriteSectorMS>
    955c:	eb b3                	jmp    9511 <WriteSectorsMemoryStick+0x91>
    955e:	89 f6                	mov    %esi,%esi

00009560 <ReadSectorsMemoryStick>:
    9560:	83 ec 20             	sub    $0x20,%esp
    9563:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    9567:	89 5c 24 14          	mov    %ebx,0x14(%esp)
    956b:	8b 44 24 28          	mov    0x28(%esp),%eax
    956f:	31 db                	xor    %ebx,%ebx
    9571:	0f b6 54 24 34       	movzbl 0x34(%esp),%edx
    9576:	89 74 24 18          	mov    %esi,0x18(%esp)
    957a:	8b 74 24 2c          	mov    0x2c(%esp),%esi
    957e:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    9582:	8b 7c 24 30          	mov    0x30(%esp),%edi
    9586:	88 54 24 13          	mov    %dl,0x13(%esp)
    958a:	0f b6 51 05          	movzbl 0x5(%ecx),%edx
    958e:	80 fa 12             	cmp    $0x12,%dl
    9591:	74 6d                	je     9600 <ReadSectorsMemoryStick+0xa0>
    9593:	80 fa 22             	cmp    $0x22,%dl
    9596:	74 20                	je     95b8 <ReadSectorsMemoryStick+0x58>
    9598:	ff 43 34             	incl   0x34(%ebx)
    959b:	31 c9                	xor    %ecx,%ecx
    959d:	0f b7 06             	movzwl (%esi),%eax
    95a0:	48                   	dec    %eax
    95a1:	66 89 06             	mov    %ax,(%esi)
    95a4:	fe 0f                	decb   (%edi)
    95a6:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    95aa:	89 c8                	mov    %ecx,%eax
    95ac:	8b 74 24 18          	mov    0x18(%esp),%esi
    95b0:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    95b4:	83 c4 20             	add    $0x20,%esp
    95b7:	c3                   	ret    
    95b8:	8b 11                	mov    (%ecx),%edx
    95ba:	b9 ff 00 00 00       	mov    $0xff,%ecx
    95bf:	85 d2                	test   %edx,%edx
    95c1:	74 e3                	je     95a6 <ReadSectorsMemoryStick+0x46>
    95c3:	8b 5a 04             	mov    0x4(%edx),%ebx
    95c6:	85 db                	test   %ebx,%ebx
    95c8:	74 dc                	je     95a6 <ReadSectorsMemoryStick+0x46>
    95ca:	83 f8 ff             	cmp    $0xffffffff,%eax
    95cd:	74 03                	je     95d2 <ReadSectorsMemoryStick+0x72>
    95cf:	89 43 34             	mov    %eax,0x34(%ebx)
    95d2:	0f b6 44 24 13       	movzbl 0x13(%esp),%eax
    95d7:	89 44 24 0c          	mov    %eax,0xc(%esp)
    95db:	0f b7 06             	movzwl (%esi),%eax
    95de:	89 44 24 08          	mov    %eax,0x8(%esp)
    95e2:	8b 43 34             	mov    0x34(%ebx),%eax
    95e5:	89 14 24             	mov    %edx,(%esp)
    95e8:	89 44 24 04          	mov    %eax,0x4(%esp)
    95ec:	e8 4f fd ff ff       	call   9340 <ReadSectorMSPro>
    95f1:	84 c0                	test   %al,%al
    95f3:	0f b6 c8             	movzbl %al,%ecx
    95f6:	75 ae                	jne    95a6 <ReadSectorsMemoryStick+0x46>
    95f8:	eb 9e                	jmp    9598 <ReadSectorsMemoryStick+0x38>
    95fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9600:	8b 11                	mov    (%ecx),%edx
    9602:	b9 ff 00 00 00       	mov    $0xff,%ecx
    9607:	85 d2                	test   %edx,%edx
    9609:	74 9b                	je     95a6 <ReadSectorsMemoryStick+0x46>
    960b:	8b 9a 64 44 00 00    	mov    0x4464(%edx),%ebx
    9611:	85 db                	test   %ebx,%ebx
    9613:	74 91                	je     95a6 <ReadSectorsMemoryStick+0x46>
    9615:	83 f8 ff             	cmp    $0xffffffff,%eax
    9618:	74 03                	je     961d <ReadSectorsMemoryStick+0xbd>
    961a:	89 43 34             	mov    %eax,0x34(%ebx)
    961d:	0f b6 44 24 13       	movzbl 0x13(%esp),%eax
    9622:	89 44 24 0c          	mov    %eax,0xc(%esp)
    9626:	0f b7 06             	movzwl (%esi),%eax
    9629:	89 44 24 08          	mov    %eax,0x8(%esp)
    962d:	8b 43 34             	mov    0x34(%ebx),%eax
    9630:	89 14 24             	mov    %edx,(%esp)
    9633:	89 44 24 04          	mov    %eax,0x4(%esp)
    9637:	e8 74 f9 ff ff       	call   8fb0 <ReadSectorMS>
    963c:	eb b3                	jmp    95f1 <ReadSectorsMemoryStick+0x91>
    963e:	90                   	nop    
    963f:	90                   	nop    

00009640 <tifm_msleep>:
    9640:	ba 00 e0 ff ff       	mov    $0xffffe000,%edx
    9645:	8b 44 24 04          	mov    0x4(%esp),%eax
    9649:	21 e2                	and    %esp,%edx
    964b:	8b 12                	mov    (%edx),%edx
    964d:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
    9653:	e9 fc ff ff ff       	jmp    9654 <tifm_msleep+0x14>
			9654: R_386_PC32	schedule_timeout
    9658:	90                   	nop    
    9659:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00009660 <tifm_sleep>:
    9660:	8b 44 24 04          	mov    0x4(%esp),%eax
    9664:	ba 00 e0 ff ff       	mov    $0xffffe000,%edx
    9669:	21 e2                	and    %esp,%edx
    966b:	8b 12                	mov    (%edx),%edx
    966d:	69 c0 e8 03 00 00    	imul   $0x3e8,%eax,%eax
    9673:	c7 02 01 00 00 00    	movl   $0x1,(%edx)
    9679:	e9 fc ff ff ff       	jmp    967a <tifm_sleep+0x1a>
			967a: R_386_PC32	schedule_timeout
    967e:	89 f6                	mov    %esi,%esi

00009680 <IsFMValid>:
    9680:	0f b6 44 24 08       	movzbl 0x8(%esp),%eax
    9685:	8b 54 24 04          	mov    0x4(%esp),%edx
    9689:	c1 e0 04             	shl    $0x4,%eax
    968c:	01 d0                	add    %edx,%eax
    968e:	0f b6 40 60          	movzbl 0x60(%eax),%eax
    9692:	c3                   	ret    
    9693:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9699:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000096a0 <IsFMInitialized>:
    96a0:	0f b6 44 24 08       	movzbl 0x8(%esp),%eax
    96a5:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    96a9:	c1 e0 04             	shl    $0x4,%eax
    96ac:	01 c8                	add    %ecx,%eax
    96ae:	0f b6 40 61          	movzbl 0x61(%eax),%eax
    96b2:	c3                   	ret    
    96b3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    96b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000096c0 <char_of>:
    96c0:	0f b6 54 24 04       	movzbl 0x4(%esp),%edx
    96c5:	31 c0                	xor    %eax,%eax
    96c7:	80 fa 09             	cmp    $0x9,%dl
    96ca:	77 06                	ja     96d2 <char_of+0x12>
    96cc:	80 c2 30             	add    $0x30,%dl
    96cf:	0f be c2             	movsbl %dl,%eax
    96d2:	c3                   	ret    
    96d3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    96d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000096e0 <int_of>:
    96e0:	0f be 44 24 04       	movsbl 0x4(%esp),%eax
    96e5:	83 e8 61             	sub    $0x61,%eax
    96e8:	c3                   	ret    
    96e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

000096f0 <InitializedFlash>:
    96f0:	8b 44 24 04          	mov    0x4(%esp),%eax
    96f4:	0f b6 40 04          	movzbl 0x4(%eax),%eax
    96f8:	c3                   	ret    
    96f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00009700 <GetSerialNumberFlash>:
    9700:	8b 44 24 04          	mov    0x4(%esp),%eax
    9704:	8b 40 0c             	mov    0xc(%eax),%eax
    9707:	c3                   	ret    
    9708:	90                   	nop    
    9709:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00009710 <WriteProtectedFlash>:
    9710:	8b 44 24 04          	mov    0x4(%esp),%eax
    9714:	0f b6 40 05          	movzbl 0x5(%eax),%eax
    9718:	c3                   	ret    
    9719:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi

00009720 <INTERRUPT_ENABLE_CLEAR_FM>:
    9720:	8b 44 24 04          	mov    0x4(%esp),%eax
    9724:	8b 10                	mov    (%eax),%edx
    9726:	8b 44 24 08          	mov    0x8(%esp),%eax
    972a:	89 42 0c             	mov    %eax,0xc(%edx)
    972d:	c3                   	ret    
    972e:	89 f6                	mov    %esi,%esi

00009730 <INTERRUPT_CLEAR_FM>:
    9730:	8b 44 24 04          	mov    0x4(%esp),%eax
    9734:	8b 10                	mov    (%eax),%edx
    9736:	8b 44 24 08          	mov    0x8(%esp),%eax
    973a:	89 42 14             	mov    %eax,0x14(%edx)
    973d:	c3                   	ret    
    973e:	89 f6                	mov    %esi,%esi

00009740 <INTERRUPT_ENABLE_SET_FM>:
    9740:	8b 44 24 04          	mov    0x4(%esp),%eax
    9744:	8b 10                	mov    (%eax),%edx
    9746:	8b 44 24 08          	mov    0x8(%esp),%eax
    974a:	89 42 08             	mov    %eax,0x8(%edx)
    974d:	c3                   	ret    
    974e:	89 f6                	mov    %esi,%esi

00009750 <INTERRUPT_STATUS_FM>:
    9750:	8b 44 24 04          	mov    0x4(%esp),%eax
    9754:	8b 00                	mov    (%eax),%eax
    9756:	8b 40 14             	mov    0x14(%eax),%eax
    9759:	c3                   	ret    
    975a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00009760 <SOCKET_PRESENT_STATE_SOCK>:
    9760:	8b 44 24 04          	mov    0x4(%esp),%eax
    9764:	8b 00                	mov    (%eax),%eax
    9766:	0f b7 40 08          	movzwl 0x8(%eax),%eax
    976a:	0f b7 c0             	movzwl %ax,%eax
    976d:	c3                   	ret    
    976e:	89 f6                	mov    %esi,%esi

00009770 <SOCKET_CONTROL_SOCK1>:
    9770:	8b 44 24 04          	mov    0x4(%esp),%eax
    9774:	8b 00                	mov    (%eax),%eax
    9776:	0f b7 40 04          	movzwl 0x4(%eax),%eax
    977a:	0f b7 c0             	movzwl %ax,%eax
    977d:	c3                   	ret    
    977e:	89 f6                	mov    %esi,%esi

00009780 <SOCKET_CONTROL_SOCK2>:
    9780:	0f b7 44 24 08       	movzwl 0x8(%esp),%eax
    9785:	8b 54 24 04          	mov    0x4(%esp),%edx
    9789:	8b 12                	mov    (%edx),%edx
    978b:	66 89 42 04          	mov    %ax,0x4(%edx)
    978f:	c3                   	ret    

00009790 <FIFO_CONTROL_SOCK2>:
    9790:	0f b7 44 24 08       	movzwl 0x8(%esp),%eax
    9795:	8b 54 24 04          	mov    0x4(%esp),%edx
    9799:	8b 12                	mov    (%edx),%edx
    979b:	66 89 42 24          	mov    %ax,0x24(%edx)
    979f:	c3                   	ret    

000097a0 <CardInsertedSock>:
    97a0:	83 ec 04             	sub    $0x4,%esp
    97a3:	8b 44 24 08          	mov    0x8(%esp),%eax
    97a7:	89 04 24             	mov    %eax,(%esp)
    97aa:	e8 fc ff ff ff       	call   97ab <CardInsertedSock+0xb>
			97ab: R_386_PC32	SOCKET_PRESENT_STATE_SOCK
    97af:	5a                   	pop    %edx
    97b0:	c1 e8 03             	shr    $0x3,%eax
    97b3:	83 e0 01             	and    $0x1,%eax
    97b6:	c3                   	ret    
    97b7:	89 f6                	mov    %esi,%esi
    97b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000097c0 <FIFO_ACCESS_SOCK2>:
    97c0:	0f b7 44 24 08       	movzwl 0x8(%esp),%eax
    97c5:	8b 54 24 04          	mov    0x4(%esp),%edx
    97c9:	8b 0a                	mov    (%edx),%ecx
    97cb:	01 c8                	add    %ecx,%eax
    97cd:	8b 80 00 02 00 00    	mov    0x200(%eax),%eax
    97d3:	c3                   	ret    
    97d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    97da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000097e0 <FIFO_WORD_ACCESS_SOCK>:
    97e0:	83 ec 10             	sub    $0x10,%esp
    97e3:	0f b7 54 24 18       	movzwl 0x18(%esp),%edx
    97e8:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    97ec:	8d 04 12             	lea    (%edx,%edx,1),%eax
    97ef:	88 d3                	mov    %dl,%bl
    97f1:	25 fc ff 00 00       	and    $0xfffc,%eax
    97f6:	80 e3 01             	and    $0x1,%bl
    97f9:	89 44 24 04          	mov    %eax,0x4(%esp)
    97fd:	8b 44 24 14          	mov    0x14(%esp),%eax
    9801:	89 04 24             	mov    %eax,(%esp)
    9804:	e8 fc ff ff ff       	call   9805 <FIFO_WORD_ACCESS_SOCK+0x25>
			9805: R_386_PC32	FIFO_ACCESS_SOCK2
    9809:	89 44 24 08          	mov    %eax,0x8(%esp)
    980d:	0f b6 c3             	movzbl %bl,%eax
    9810:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9814:	0f b7 44 44 08       	movzwl 0x8(%esp,%eax,2),%eax
    9819:	83 c4 10             	add    $0x10,%esp
    981c:	c3                   	ret    
    981d:	8d 76 00             	lea    0x0(%esi),%esi

00009820 <FIFO_BYTE_ACCESS_SOCK1>:
    9820:	83 ec 10             	sub    $0x10,%esp
    9823:	0f b7 44 24 18       	movzwl 0x18(%esp),%eax
    9828:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    982c:	89 c2                	mov    %eax,%edx
    982e:	88 c3                	mov    %al,%bl
    9830:	8b 44 24 14          	mov    0x14(%esp),%eax
    9834:	81 e2 fc ff 00 00    	and    $0xfffc,%edx
    983a:	80 e3 03             	and    $0x3,%bl
    983d:	89 54 24 04          	mov    %edx,0x4(%esp)
    9841:	89 04 24             	mov    %eax,(%esp)
    9844:	e8 fc ff ff ff       	call   9845 <FIFO_BYTE_ACCESS_SOCK1+0x25>
			9845: R_386_PC32	FIFO_ACCESS_SOCK2
    9849:	89 44 24 08          	mov    %eax,0x8(%esp)
    984d:	0f b6 c3             	movzbl %bl,%eax
    9850:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
    9854:	0f b6 44 04 08       	movzbl 0x8(%esp,%eax,1),%eax
    9859:	83 c4 10             	add    $0x10,%esp
    985c:	c3                   	ret    
    985d:	8d 76 00             	lea    0x0(%esi),%esi

00009860 <FIFO_PAGE_SIZE_SOCK1>:
    9860:	8b 44 24 04          	mov    0x4(%esp),%eax
    9864:	8b 00                	mov    (%eax),%eax
    9866:	0f b7 40 28          	movzwl 0x28(%eax),%eax
    986a:	0f b7 c0             	movzwl %ax,%eax
    986d:	c3                   	ret    
    986e:	89 f6                	mov    %esi,%esi

00009870 <FIFO_PAGE_SIZE_SOCK2>:
    9870:	0f b7 44 24 08       	movzwl 0x8(%esp),%eax
    9875:	8b 54 24 04          	mov    0x4(%esp),%edx
    9879:	8b 12                	mov    (%edx),%edx
    987b:	66 89 42 28          	mov    %ax,0x28(%edx)
    987f:	c3                   	ret    

00009880 <DMA_FIFO_STATUS_CLEAR_SOCK>:
    9880:	0f b7 44 24 08       	movzwl 0x8(%esp),%eax
    9885:	8b 54 24 04          	mov    0x4(%esp),%edx
    9889:	8b 12                	mov    (%edx),%edx
    988b:	66 89 42 20          	mov    %ax,0x20(%edx)
    988f:	c3                   	ret    

00009890 <DMA_FIFO_STATUS_SOCK>:
    9890:	8b 44 24 04          	mov    0x4(%esp),%eax
    9894:	8b 00                	mov    (%eax),%eax
    9896:	0f b7 40 20          	movzwl 0x20(%eax),%eax
    989a:	0f b7 c0             	movzwl %ax,%eax
    989d:	c3                   	ret    
    989e:	89 f6                	mov    %esi,%esi

000098a0 <DMA_FIFO_INT_ENABLE_SET_SOCK>:
    98a0:	0f b7 44 24 08       	movzwl 0x8(%esp),%eax
    98a5:	8b 54 24 04          	mov    0x4(%esp),%edx
    98a9:	8b 12                	mov    (%edx),%edx
    98ab:	66 89 42 14          	mov    %ax,0x14(%edx)
    98af:	c3                   	ret    

000098b0 <DMA_FIFO_INT_ENABLE_CLEAR_SOCK>:
    98b0:	0f b7 44 24 08       	movzwl 0x8(%esp),%eax
    98b5:	8b 54 24 04          	mov    0x4(%esp),%edx
    98b9:	8b 12                	mov    (%edx),%edx
    98bb:	66 89 42 18          	mov    %ax,0x18(%edx)
    98bf:	c3                   	ret    

000098c0 <DMA_CONTROL_SOCK1>:
    98c0:	8b 44 24 04          	mov    0x4(%esp),%eax
    98c4:	8b 00                	mov    (%eax),%eax
    98c6:	0f b7 40 10          	movzwl 0x10(%eax),%eax
    98ca:	0f b7 c0             	movzwl %ax,%eax
    98cd:	c3                   	ret    
    98ce:	89 f6                	mov    %esi,%esi

000098d0 <DMA_CONTROL_SOCK2>:
    98d0:	0f b7 44 24 08       	movzwl 0x8(%esp),%eax
    98d5:	8b 54 24 04          	mov    0x4(%esp),%edx
    98d9:	8b 12                	mov    (%edx),%edx
    98db:	66 89 42 10          	mov    %ax,0x10(%edx)
    98df:	c3                   	ret    

000098e0 <DMA_ADDRESS_SOCK>:
    98e0:	8b 44 24 04          	mov    0x4(%esp),%eax
    98e4:	8b 10                	mov    (%eax),%edx
    98e6:	8b 44 24 08          	mov    0x8(%esp),%eax
    98ea:	89 42 0c             	mov    %eax,0xc(%edx)
    98ed:	c3                   	ret    
    98ee:	89 f6                	mov    %esi,%esi

000098f0 <MMCSD_INT_ENABLE1>:
    98f0:	8b 44 24 04          	mov    0x4(%esp),%eax
    98f4:	8b 40 50             	mov    0x50(%eax),%eax
    98f7:	8b 40 28             	mov    0x28(%eax),%eax
    98fa:	8b 00                	mov    (%eax),%eax
    98fc:	8b 80 18 01 00 00    	mov    0x118(%eax),%eax
    9902:	c3                   	ret    
    9903:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9909:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009910 <MMCSD_INT_ENABLE2>:
    9910:	8b 44 24 04          	mov    0x4(%esp),%eax
    9914:	8b 40 50             	mov    0x50(%eax),%eax
    9917:	8b 40 28             	mov    0x28(%eax),%eax
    991a:	8b 10                	mov    (%eax),%edx
    991c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9920:	89 82 18 01 00 00    	mov    %eax,0x118(%edx)
    9926:	c3                   	ret    
    9927:	89 f6                	mov    %esi,%esi
    9929:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009930 <MMCSD_STATUS>:
    9930:	8b 44 24 04          	mov    0x4(%esp),%eax
    9934:	8b 40 50             	mov    0x50(%eax),%eax
    9937:	8b 40 28             	mov    0x28(%eax),%eax
    993a:	8b 00                	mov    (%eax),%eax
    993c:	8b 80 14 01 00 00    	mov    0x114(%eax),%eax
    9942:	c3                   	ret    
    9943:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9949:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009950 <MMCSD_STATUS_CLEAR>:
    9950:	8b 44 24 04          	mov    0x4(%esp),%eax
    9954:	8b 40 50             	mov    0x50(%eax),%eax
    9957:	8b 40 28             	mov    0x28(%eax),%eax
    995a:	8b 10                	mov    (%eax),%edx
    995c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9960:	89 82 14 01 00 00    	mov    %eax,0x114(%edx)
    9966:	c3                   	ret    
    9967:	89 f6                	mov    %esi,%esi
    9969:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009970 <MMCSD_SYSTEM_CONTROL>:
    9970:	8b 44 24 04          	mov    0x4(%esp),%eax
    9974:	8b 40 50             	mov    0x50(%eax),%eax
    9977:	8b 40 28             	mov    0x28(%eax),%eax
    997a:	8b 10                	mov    (%eax),%edx
    997c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9980:	89 82 68 01 00 00    	mov    %eax,0x168(%edx)
    9986:	c3                   	ret    
    9987:	89 f6                	mov    %esi,%esi
    9989:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009990 <MMCSD_SYSTEM_STATUS>:
    9990:	8b 44 24 04          	mov    0x4(%esp),%eax
    9994:	8b 40 50             	mov    0x50(%eax),%eax
    9997:	8b 40 28             	mov    0x28(%eax),%eax
    999a:	8b 00                	mov    (%eax),%eax
    999c:	8b 80 6c 01 00 00    	mov    0x16c(%eax),%eax
    99a2:	c3                   	ret    
    99a3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    99a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000099b0 <MMCSD_CONFIG1>:
    99b0:	8b 44 24 04          	mov    0x4(%esp),%eax
    99b4:	8b 40 50             	mov    0x50(%eax),%eax
    99b7:	8b 40 28             	mov    0x28(%eax),%eax
    99ba:	8b 00                	mov    (%eax),%eax
    99bc:	8b 80 10 01 00 00    	mov    0x110(%eax),%eax
    99c2:	c3                   	ret    
    99c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    99c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000099d0 <MMCSD_CONFIG2>:
    99d0:	8b 44 24 04          	mov    0x4(%esp),%eax
    99d4:	8b 40 50             	mov    0x50(%eax),%eax
    99d7:	8b 40 28             	mov    0x28(%eax),%eax
    99da:	8b 10                	mov    (%eax),%edx
    99dc:	8b 44 24 08          	mov    0x8(%esp),%eax
    99e0:	89 82 10 01 00 00    	mov    %eax,0x110(%edx)
    99e6:	c3                   	ret    
    99e7:	89 f6                	mov    %esi,%esi
    99e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

000099f0 <MMCSD_SDIO_MODE_CONFIG2>:
    99f0:	8b 44 24 04          	mov    0x4(%esp),%eax
    99f4:	8b 40 50             	mov    0x50(%eax),%eax
    99f7:	8b 40 28             	mov    0x28(%eax),%eax
    99fa:	8b 10                	mov    (%eax),%edx
    99fc:	8b 44 24 08          	mov    0x8(%esp),%eax
    9a00:	89 82 38 01 00 00    	mov    %eax,0x138(%edx)
    9a06:	c3                   	ret    
    9a07:	89 f6                	mov    %esi,%esi
    9a09:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009a10 <MMCSD_SDIO_MODE_CONFIG1>:
    9a10:	8b 44 24 04          	mov    0x4(%esp),%eax
    9a14:	8b 40 50             	mov    0x50(%eax),%eax
    9a17:	8b 40 28             	mov    0x28(%eax),%eax
    9a1a:	8b 00                	mov    (%eax),%eax
    9a1c:	8b 80 38 01 00 00    	mov    0x138(%eax),%eax
    9a22:	c3                   	ret    
    9a23:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009a30 <MMCSD_COMMAND_TO>:
    9a30:	8b 44 24 04          	mov    0x4(%esp),%eax
    9a34:	8b 40 50             	mov    0x50(%eax),%eax
    9a37:	8b 40 28             	mov    0x28(%eax),%eax
    9a3a:	8b 10                	mov    (%eax),%edx
    9a3c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9a40:	89 82 1c 01 00 00    	mov    %eax,0x11c(%edx)
    9a46:	c3                   	ret    
    9a47:	89 f6                	mov    %esi,%esi
    9a49:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009a50 <MMCSD_COMMAND2>:
    9a50:	8b 44 24 04          	mov    0x4(%esp),%eax
    9a54:	8b 40 50             	mov    0x50(%eax),%eax
    9a57:	8b 40 28             	mov    0x28(%eax),%eax
    9a5a:	8b 10                	mov    (%eax),%edx
    9a5c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9a60:	89 82 04 01 00 00    	mov    %eax,0x104(%edx)
    9a66:	c3                   	ret    
    9a67:	89 f6                	mov    %esi,%esi
    9a69:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009a70 <MMCSD_DATA_TO>:
    9a70:	8b 44 24 04          	mov    0x4(%esp),%eax
    9a74:	8b 40 50             	mov    0x50(%eax),%eax
    9a77:	8b 40 28             	mov    0x28(%eax),%eax
    9a7a:	8b 10                	mov    (%eax),%edx
    9a7c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9a80:	89 82 20 01 00 00    	mov    %eax,0x120(%edx)
    9a86:	c3                   	ret    
    9a87:	89 f6                	mov    %esi,%esi
    9a89:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009a90 <MMCSD_ARGUMENT_LOW1>:
    9a90:	8b 44 24 04          	mov    0x4(%esp),%eax
    9a94:	8b 40 50             	mov    0x50(%eax),%eax
    9a97:	8b 40 28             	mov    0x28(%eax),%eax
    9a9a:	8b 00                	mov    (%eax),%eax
    9a9c:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
    9aa2:	c3                   	ret    
    9aa3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9aa9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009ab0 <MMCSD_ARGUMENT_LOW2>:
    9ab0:	8b 44 24 04          	mov    0x4(%esp),%eax
    9ab4:	8b 40 50             	mov    0x50(%eax),%eax
    9ab7:	8b 40 28             	mov    0x28(%eax),%eax
    9aba:	8b 10                	mov    (%eax),%edx
    9abc:	8b 44 24 08          	mov    0x8(%esp),%eax
    9ac0:	89 82 08 01 00 00    	mov    %eax,0x108(%edx)
    9ac6:	c3                   	ret    
    9ac7:	89 f6                	mov    %esi,%esi
    9ac9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009ad0 <MMCSD_ARGUMENT_HIGH1>:
    9ad0:	8b 44 24 04          	mov    0x4(%esp),%eax
    9ad4:	8b 40 50             	mov    0x50(%eax),%eax
    9ad7:	8b 40 28             	mov    0x28(%eax),%eax
    9ada:	8b 00                	mov    (%eax),%eax
    9adc:	8b 80 0c 01 00 00    	mov    0x10c(%eax),%eax
    9ae2:	c3                   	ret    
    9ae3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9ae9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009af0 <MMCSD_ARGUMENT_HIGH2>:
    9af0:	8b 44 24 04          	mov    0x4(%esp),%eax
    9af4:	8b 40 50             	mov    0x50(%eax),%eax
    9af7:	8b 40 28             	mov    0x28(%eax),%eax
    9afa:	8b 10                	mov    (%eax),%edx
    9afc:	8b 44 24 08          	mov    0x8(%esp),%eax
    9b00:	89 82 0c 01 00 00    	mov    %eax,0x10c(%edx)
    9b06:	c3                   	ret    
    9b07:	89 f6                	mov    %esi,%esi
    9b09:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009b10 <MMCSD_RESPONSE1>:
    9b10:	8b 44 24 04          	mov    0x4(%esp),%eax
    9b14:	8b 40 50             	mov    0x50(%eax),%eax
    9b17:	8b 50 28             	mov    0x28(%eax),%edx
    9b1a:	0f b6 44 24 08       	movzbl 0x8(%esp),%eax
    9b1f:	8b 12                	mov    (%edx),%edx
    9b21:	8d 04 82             	lea    (%edx,%eax,4),%eax
    9b24:	8b 80 44 01 00 00    	mov    0x144(%eax),%eax
    9b2a:	c3                   	ret    
    9b2b:	90                   	nop    
    9b2c:	8d 74 26 00          	lea    0x0(%esi),%esi

00009b30 <MMCSD_DATA1>:
    9b30:	8b 44 24 04          	mov    0x4(%esp),%eax
    9b34:	8b 40 50             	mov    0x50(%eax),%eax
    9b37:	8b 40 28             	mov    0x28(%eax),%eax
    9b3a:	8b 00                	mov    (%eax),%eax
    9b3c:	8b 80 24 01 00 00    	mov    0x124(%eax),%eax
    9b42:	c3                   	ret    
    9b43:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9b49:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009b50 <MMCSD_DATA2>:
    9b50:	8b 44 24 04          	mov    0x4(%esp),%eax
    9b54:	8b 40 50             	mov    0x50(%eax),%eax
    9b57:	8b 40 28             	mov    0x28(%eax),%eax
    9b5a:	8b 10                	mov    (%eax),%edx
    9b5c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9b60:	89 82 24 01 00 00    	mov    %eax,0x124(%edx)
    9b66:	c3                   	ret    
    9b67:	89 f6                	mov    %esi,%esi
    9b69:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009b70 <MMCSD_BLOCK_LENGTH1>:
    9b70:	8b 44 24 04          	mov    0x4(%esp),%eax
    9b74:	8b 40 50             	mov    0x50(%eax),%eax
    9b77:	8b 40 28             	mov    0x28(%eax),%eax
    9b7a:	8b 00                	mov    (%eax),%eax
    9b7c:	8b 80 28 01 00 00    	mov    0x128(%eax),%eax
    9b82:	c3                   	ret    
    9b83:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9b89:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009b90 <MMCSD_BLOCK_LENGTH2>:
    9b90:	8b 44 24 04          	mov    0x4(%esp),%eax
    9b94:	8b 40 50             	mov    0x50(%eax),%eax
    9b97:	8b 40 28             	mov    0x28(%eax),%eax
    9b9a:	8b 10                	mov    (%eax),%edx
    9b9c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9ba0:	89 82 28 01 00 00    	mov    %eax,0x128(%edx)
    9ba6:	c3                   	ret    
    9ba7:	89 f6                	mov    %esi,%esi
    9ba9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009bb0 <MMCSD_NUMBER_OF_BLOCKS1>:
    9bb0:	8b 44 24 04          	mov    0x4(%esp),%eax
    9bb4:	8b 40 50             	mov    0x50(%eax),%eax
    9bb7:	8b 40 28             	mov    0x28(%eax),%eax
    9bba:	8b 00                	mov    (%eax),%eax
    9bbc:	8b 80 2c 01 00 00    	mov    0x12c(%eax),%eax
    9bc2:	c3                   	ret    
    9bc3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9bc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009bd0 <MMCSD_NUMBER_OF_BLOCKS2>:
    9bd0:	8b 44 24 04          	mov    0x4(%esp),%eax
    9bd4:	8b 40 50             	mov    0x50(%eax),%eax
    9bd7:	8b 40 28             	mov    0x28(%eax),%eax
    9bda:	8b 10                	mov    (%eax),%edx
    9bdc:	8b 44 24 08          	mov    0x8(%esp),%eax
    9be0:	89 82 2c 01 00 00    	mov    %eax,0x12c(%edx)
    9be6:	c3                   	ret    
    9be7:	89 f6                	mov    %esi,%esi
    9be9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009bf0 <MMCSD_BUFFER_CONFIG1>:
    9bf0:	8b 44 24 04          	mov    0x4(%esp),%eax
    9bf4:	8b 40 50             	mov    0x50(%eax),%eax
    9bf7:	8b 40 28             	mov    0x28(%eax),%eax
    9bfa:	8b 00                	mov    (%eax),%eax
    9bfc:	8b 80 30 01 00 00    	mov    0x130(%eax),%eax
    9c02:	c3                   	ret    
    9c03:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9c09:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009c10 <MMCSD_BUFFER_CONFIG2>:
    9c10:	8b 44 24 04          	mov    0x4(%esp),%eax
    9c14:	8b 40 50             	mov    0x50(%eax),%eax
    9c17:	8b 40 28             	mov    0x28(%eax),%eax
    9c1a:	8b 10                	mov    (%eax),%edx
    9c1c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9c20:	89 82 30 01 00 00    	mov    %eax,0x130(%edx)
    9c26:	c3                   	ret    
    9c27:	89 f6                	mov    %esi,%esi
    9c29:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009c30 <MS_STATUS>:
    9c30:	8b 44 24 04          	mov    0x4(%esp),%eax
    9c34:	8b 40 3c             	mov    0x3c(%eax),%eax
    9c37:	8b 40 28             	mov    0x28(%eax),%eax
    9c3a:	8b 00                	mov    (%eax),%eax
    9c3c:	8b 80 8c 01 00 00    	mov    0x18c(%eax),%eax
    9c42:	c3                   	ret    
    9c43:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9c49:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009c50 <MS_STATUS_CLEAR>:
    9c50:	8b 44 24 04          	mov    0x4(%esp),%eax
    9c54:	8b 40 3c             	mov    0x3c(%eax),%eax
    9c57:	8b 40 28             	mov    0x28(%eax),%eax
    9c5a:	8b 10                	mov    (%eax),%edx
    9c5c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9c60:	89 82 8c 01 00 00    	mov    %eax,0x18c(%edx)
    9c66:	c3                   	ret    
    9c67:	89 f6                	mov    %esi,%esi
    9c69:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009c70 <MS_SYSTEM1>:
    9c70:	8b 44 24 04          	mov    0x4(%esp),%eax
    9c74:	8b 40 3c             	mov    0x3c(%eax),%eax
    9c77:	8b 40 28             	mov    0x28(%eax),%eax
    9c7a:	8b 00                	mov    (%eax),%eax
    9c7c:	8b 80 90 01 00 00    	mov    0x190(%eax),%eax
    9c82:	c3                   	ret    
    9c83:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9c89:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009c90 <MS_SYSTEM2>:
    9c90:	8b 44 24 04          	mov    0x4(%esp),%eax
    9c94:	8b 40 3c             	mov    0x3c(%eax),%eax
    9c97:	8b 40 28             	mov    0x28(%eax),%eax
    9c9a:	8b 10                	mov    (%eax),%edx
    9c9c:	8b 44 24 08          	mov    0x8(%esp),%eax
    9ca0:	89 82 90 01 00 00    	mov    %eax,0x190(%edx)
    9ca6:	c3                   	ret    
    9ca7:	89 f6                	mov    %esi,%esi
    9ca9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009cb0 <MS_COMMAND1>:
    9cb0:	8b 44 24 04          	mov    0x4(%esp),%eax
    9cb4:	8b 40 3c             	mov    0x3c(%eax),%eax
    9cb7:	8b 40 28             	mov    0x28(%eax),%eax
    9cba:	8b 00                	mov    (%eax),%eax
    9cbc:	8b 80 84 01 00 00    	mov    0x184(%eax),%eax
    9cc2:	c3                   	ret    
    9cc3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9cc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009cd0 <MS_COMMAND2>:
    9cd0:	8b 44 24 04          	mov    0x4(%esp),%eax
    9cd4:	8b 40 3c             	mov    0x3c(%eax),%eax
    9cd7:	8b 40 28             	mov    0x28(%eax),%eax
    9cda:	8b 10                	mov    (%eax),%edx
    9cdc:	8b 44 24 08          	mov    0x8(%esp),%eax
    9ce0:	89 82 84 01 00 00    	mov    %eax,0x184(%edx)
    9ce6:	c3                   	ret    
    9ce7:	89 f6                	mov    %esi,%esi
    9ce9:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009cf0 <MS_DATA1>:
    9cf0:	8b 44 24 04          	mov    0x4(%esp),%eax
    9cf4:	8b 40 3c             	mov    0x3c(%eax),%eax
    9cf7:	8b 40 28             	mov    0x28(%eax),%eax
    9cfa:	8b 00                	mov    (%eax),%eax
    9cfc:	8b 80 88 01 00 00    	mov    0x188(%eax),%eax
    9d02:	c3                   	ret    
    9d03:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9d09:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00009d10 <MS_DATA2>:
    9d10:	83 ec 0c             	sub    $0xc,%esp
    9d13:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    9d17:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    9d1b:	89 1c 24             	mov    %ebx,(%esp)
    9d1e:	e8 fc ff ff ff       	call   9d1f <MS_DATA2+0xf>
			9d1f: R_386_PC32	MS_SYSTEM1
    9d23:	89 1c 24             	mov    %ebx,(%esp)
    9d26:	0d 00 01 00 00       	or     $0x100,%eax
    9d2b:	89 44 24 04          	mov    %eax,0x4(%esp)
    9d2f:	e8 fc ff ff ff       	call   9d30 <MS_DATA2+0x20>
			9d30: R_386_PC32	MS_SYSTEM2
    9d34:	8b 43 3c             	mov    0x3c(%ebx),%eax
    9d37:	8b 40 28             	mov    0x28(%eax),%eax
    9d3a:	8b 10                	mov    (%eax),%edx
    9d3c:	8b 44 24 14          	mov    0x14(%esp),%eax
    9d40:	89 82 88 01 00 00    	mov    %eax,0x188(%edx)
    9d46:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    9d4a:	83 c4 0c             	add    $0xc,%esp
    9d4d:	c3                   	ret    
    9d4e:	90                   	nop    
    9d4f:	90                   	nop    
Disassembly of section .init.text:

00000000 <init_module>:
   0:	83 ec 04             	sub    $0x4,%esp
   3:	c7 04 24 a0 00 00 00 	movl   $0xa0,(%esp)
			6: R_386_32	.data
   a:	e8 fc ff ff ff       	call   b <init_module+0xb>
			b: R_386_PC32	pci_register_driver
   f:	5a                   	pop    %edx
  10:	c3                   	ret    
Disassembly of section .exit.text:

00000000 <cleanup_module>:
   0:	83 ec 04             	sub    $0x4,%esp
   3:	c7 04 24 a0 00 00 00 	movl   $0xa0,(%esp)
			6: R_386_32	.data
   a:	e8 fc ff ff ff       	call   b <cleanup_module+0xb>
			b: R_386_PC32	pci_unregister_driver
   f:	59                   	pop    %ecx
  10:	c3                   	ret    
